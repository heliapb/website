{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Perses","text":"<p>...and more to discover!</p>"},{"location":"#an-open-specification-for-dashboards-the-open-dashboard-tool-for-prometheus-and-other-data-sources","title":"An open specification for dashboards. The open dashboard tool for Prometheus and other data sources.","text":""},{"location":"#observability-display","title":"Observability display","text":"<p>Perses is first and foremost a dashboard tool that you can use to display a variety of observability data. Today supports Prometheus metrics &amp; Tempo traces.</p>"},{"location":"#embeddable-components","title":"Embeddable components","text":"<p>You can use Perses as-is or embed parts of it in your own UI, could it be a single panel or a whole dashboard view.</p>"},{"location":"#gitops-friendly","title":"GitOps-friendly","text":"<p>Perses offers a complete static validation of the dashboard format. It also comes with a CLI, <code>percli</code>, that can be used to perform actions in CI/CD pipelines.</p>"},{"location":"#scale-friendly","title":"Scale-friendly","text":"<p>Perses dashboards can be written as-code using the provided SDKs. This enables to define any kind of components in libraries, from simple color codes to complex templates, for reusage across as much dashboards as you want. </p>"},{"location":"#kubernetes-native","title":"Kubernetes-native","text":"<p>Use the Perses operator to manage your Perses deployments &amp; dashboards as CRDs. Leverage on the datasource discovery to retrieve data from your datasource pods/services.</p>"},{"location":"#extensible","title":"Extensible","text":"<p>Perses, with its plugin-based architecture, offers effortless extension and reuse of plugins across different projects.</p>"},{"location":"#open-source","title":"Open Source","text":"<p>Perses is 100% open source and community-driven. All components are available under the Apache 2.0 License on GitHub.</p> <p>Perses is a Cloud Native Computing Foundation sandbox project.</p> <p> </p>"},{"location":"#used-by","title":"Used by","text":""},{"location":"blog/2025/01/15/release-v0500/","title":"Release v0.50.0","text":"<p>We are excited to announce the release of Perses v0.50.0! This release brings significant improvements to the migration process from Grafana to Perses, including a major fix for a memory leak issue. Additionally, it introduces a new Status History Panel and various enhancements to the Table Panel, UI, and CLI. Read on to learn more about the new features and improvements in this release.</p> <p>See the complete release note for more details: v0.50.0</p>"},{"location":"blog/2025/01/15/release-v0500/#migration","title":"Migration","text":"<p>One of the greatest contents of this release is the migration that has been drastically improved.</p> <p>Since the beginning of the project, we have been willing to provide an easy way to migrate dashboards from Grafana to Perses. As a reminder, you can migrate a Grafana dashboard using the HTTP endpoint <code>/api/migrate</code> or the UI or the CLI that consumes this endpoint.</p> <p>The big issue with this feature was the memory leak that was hidden and not that easy to trigger. (See issue #2039)</p> <p>This was a big blocker for the migration and one of the main reasons why Amadeus was not able to migrate to Perses. Amadeus has a huge number of dashboards, and the memory leak was too important to be ignored. To give you an idea, the memory leak was about 40GB after migrating 3000 dashboards. (~ 3MB per dashboard)</p> <p></p> <p>As you may know, we are using Cuelang for the Perses plugin validation, and at first, we implemented a complete way to migrate using Cuelang only. The idea behind was to append every migration script (one for each panel, variable, queries) to the main one. Then the Grafana JSON was converted to a Cuelang value, and we were applying the migration script to this value.</p> <p>With the v0.50.0, we are changing deeply and only internally the way it's working. It doesn't change anything for the user, but it's a huge improvement for the maintainability and the performance of the migration.</p> <p>We have entirely rewritten the migration process. It is now using a hybrid system partially written in Golang and the rest in Cuelang when the plugins are involved. Thanks to this new system, the Cuelang files written to migrate the panels, the variables, and the queries can be validated and tested before the migration is applied.</p> <p>Thanks to this change, we are happy to announce the memory leak has been fixed and the migration is now working perfectly. We performed the same mass migration, and it succeeded without causing OOMKill, as it requires much less memory than before. The graph below shows we didn't exceed 3GB of memory during the migration.</p> <p></p> <p>Finally, we\u2019ve also addressed numerous updates to the migration process itself, incorporating fixes and enhancements to better cover use cases raised by the community - thank you for your contributions!</p>"},{"location":"blog/2025/01/15/release-v0500/#status-history-panel","title":"Status History panel","text":"<p>Thanks to Alexander Belyakin from the community, Perses is supporting a new Panel: the Status History Panel.</p> <p>The Status History panel provides a visual representation of the status of various metrics over time. It allows users to track changes in the status of different metrics, making it easier to identify patterns, trends, and anomalies. This panel is particularly useful for monitoring the health and performance of systems, as it can display status changes in a clear and concise manner. The panel can be customized to show different statuses, such as up, down, warning, or any other user-defined states, and it supports various visualization options to enhance the readability of the data.</p> <p>And of course, this panel is fully compatible with the migration process.</p> <p></p>"},{"location":"blog/2025/01/15/release-v0500/#general-improvements","title":"General Improvements","text":""},{"location":"blog/2025/01/15/release-v0500/#ui","title":"UI","text":"<p>We have finally added the redirection to the initial URL after you are authenticated. This was definitely a missing feature annoying for the users.</p> <p>This release also introduces various improvements to the Table Panel, such as debounced text fields in the editor, default column sorting, custom column ordering, default column width setting, and cell focus on hover.</p> <p></p>"},{"location":"blog/2025/01/15/release-v0500/#cli","title":"CLI","text":"<p>First, we have fixed the login command not working if you were using the CLI to log in to different Perses servers.</p> <p>Then, based on the community feedback, we also have improved the DAC (Dashboard as Code) sub-command. We hope the experience with our DAC framework will be better.</p> <p>We are also introducing new commands for plugin development. That's something that comes along with the new plugin architecture we are working on since last year. These commands cannot be used currently as we are still working on the plugin architecture.</p> <p>But stay tuned as we are really close to finishing this intense work! V0.51.0 is going to be incredible with a lot of changes!</p>"},{"location":"perses/docs/cli/","title":"Perses CLI (percli)","text":"<p>Besides the Perses application, we also provide a CLI named <code>percli</code>. This tool can be used to interact with the backend REST API to manage resources such as dashboards, datasources, projects, etc.</p> <p>The CLI is available in the archives created at each release, as well as in the docker images.</p>"},{"location":"perses/docs/cli/#tips","title":"Tips","text":"<p>This CLI provides its own documentation using the --help option. This is the main source of truth for documentation, while this page is here to provide some examples of how to use the main commands, tips &amp; tricks, etc.</p> <p>Example:</p> <pre><code>$ percli --help\n\nCommand line interface to interact with the Perses API\n\nUsage:\n  percli [command]\n\nAvailable Commands:\n  apply       Create or update resources through a file. JSON or YAML format supported\n  completion  Generate the autocompletion script for the specified shell\n  config      display local or remote config\n  dac         Commands related to Dashboard-as-Code\n  delete      Delete resources\n  describe    Show details of a specific resource\n  get         Retrieve any kind of resource from the API.\n  help        Help about any command\n  lint        Static check of the resources\n  login       Log in to the Perses API\n  migrate     migrate a Grafana dashboard to the Perses format\n  plugin      Commands related to plugins development\n  project     Select the project used by default.\n  refresh     refresh the access token when it expires\n  version     Display client version.\n  whoami      Display current user used\n\nFlags:\n  -h, --help                  help for percli\n      --log.level string      Set the log verbosity level. Possible values: panic, fatal, error, warning, info, debug, trace (default \"info\")\n      --percliconfig string   Path to the percliconfig file to use for CLI requests. (default \"/Users/ahusson/.perses/config.json\")\n\nUse \"percli [command] --help\" for more information about a command.\n</code></pre>"},{"location":"perses/docs/cli/#getting-started","title":"Getting started","text":""},{"location":"perses/docs/cli/#login","title":"Login","text":"<p>Multiple commands require a connection to the Perses API. The first thing you should do is then to use the <code>login</code> command.</p> <p>The only parameter required to use this command is the URL to the API.</p> <pre><code>$ percli login https://demo.perses.dev\n</code></pre> <p>If the server requires an authentication, you will have to provide either:</p> <ul> <li>a token: <code>--token</code> can be used to set a Bearer JWT token.</li> <li>a user + password: <code>--username</code> and <code>--password</code> can be used to set a username &amp; password. The command will contact the Perses server   with the credential(s). It will return a Bearer JWT token which expires after 1h.</li> <li>delegated auth information: if the server relies on an external OIDC/OAuth provider for authentication, use <code>--client-id</code> and <code>--client-secret</code> to pass the client credentials, plus <code>--provider</code> to pass the identifier of the external provider (e.g <code>google</code>, <code>azure</code>..).</li> </ul> <p>The URL and the token will be stored in JSON file that is by default <code>&lt;UserHome&gt;/.perses/config.json</code>.</p> <p>Note: you can change the location of this file using the global flag <code>--percliconfig</code>.</p>"},{"location":"perses/docs/cli/#project","title":"Project","text":"<p>Most of the data belong to a project. You can see a project as a workspace where you will be able to create some dashboards or datasources.</p>"},{"location":"perses/docs/cli/#get-the-list-of-your-projects","title":"Get the list of your projects","text":"<p>To know what are the existing projects, you can use the following command:</p> <pre><code>$ percli get project\n\n        NAME        |   AGE\n--------------------+----------\n  IncredibleProject | 106751d\n  perses            | 106751d\n</code></pre>"},{"location":"perses/docs/cli/#select-the-project","title":"Select the project","text":"<p>The project to be used by default when running commands can be set with:</p> <pre><code>$ percli project perses\n\nproject perses selected\n</code></pre>"},{"location":"perses/docs/cli/#resource-management-commands","title":"Resource Management Commands","text":""},{"location":"perses/docs/cli/#apply-data","title":"Apply data","text":"<p>To create or update any data in the Perses API, you can use the <code>apply</code> command. This command can receive the data to create/update from a file or from stdin.</p> <p>for example, you can proceed like that to create a project:</p> <pre><code>project='{\n  \"kind\": \"Project\",\n  \"metadata\": {\n    \"name\": \"MyProject\"\n  }\n}'\necho ${project} | percli apply -f -\n\nobject \"Project\" \"MyProject\" has been applied\n</code></pre>"},{"location":"perses/docs/cli/#get-data","title":"Get data","text":"<p>To retrieve the data, you can use the <code>get</code> command :</p> <pre><code>$ percli get project\n\n        NAME        |   AGE\n--------------------+----------\n  IncredibleProject | 106751d\n  MyProject         | 58s\n  perses            | 106751d\n</code></pre> <pre><code>$ percli get dashboard\n\n    NAME    | PROJECT | AGE\n------------+---------+------\n  Benchmark | perses  | 3d\n  Demo      | perses  | 9d\n</code></pre> <p>Note: This command can be used with the --output flag to get the list either in JSON or YAML format. This option can be used to export the resources into a file to mass update them.</p>"},{"location":"perses/docs/cli/#describe-data","title":"Describe data","text":"<p>The <code>describe</code> command allows you to print the complete definition of an object. By default, the definition will be printed with the YAML format, but you can print it using the JSON format too.</p> <pre><code>$ percli describe dts PrometheusDemo\n\nkind: Datasource\nmetadata:\n  name: PrometheusDemo\n  createdAt: 0001-01-01T00:00:00Z\n  updatedAt: 0001-01-01T00:00:00Z\n  project: perses\nspec:\n  default: false\n  plugin:\n    kind: PrometheusDatasource\n    spec:\n      proxy:\n        kind: HTTPProxy\n        spec:\n          allowedEndpoints:\n          - endpointPattern: /api/v1/labels\n            method: POST\n          - endpointPattern: /api/v1/series\n            method: POST\n          - endpointPattern: /api/v1/metadata\n            method: GET\n          - endpointPattern: /api/v1/query\n            method: POST\n          - endpointPattern: /api/v1/query_range\n            method: POST\n          - endpointPattern: /api/v1/label/([a-zA-Z0-9_-]+)/values\n            method: GET\n          url: https://prometheus.demo.do.prometheus.io\n</code></pre> <p>Or in JSON:</p> <pre><code>$ percli describe dts PrometheusDemo -ojson | jq\n\n{\n  \"kind\": \"Datasource\",\n  \"metadata\": {\n    \"name\": \"PrometheusDemo\",\n    \"createdAt\": \"0001-01-01T00:00:00Z\",\n    \"updatedAt\": \"0001-01-01T00:00:00Z\",\n    \"project\": \"perses\"\n  },\n  \"spec\": {\n    \"default\": false,\n    \"plugin\": {\n      \"kind\": \"PrometheusDatasource\",\n      \"spec\": {\n        \"proxy\": {\n          \"kind\": \"HTTPProxy\",\n          \"spec\": {\n            \"allowedEndpoints\": [\n              {\n                \"endpointPattern\": \"/api/v1/labels\",\n                \"method\": \"POST\"\n              },\n              {\n                \"endpointPattern\": \"/api/v1/series\",\n                \"method\": \"POST\"\n              },\n              {\n                \"endpointPattern\": \"/api/v1/metadata\",\n                \"method\": \"GET\"\n              },\n              {\n                \"endpointPattern\": \"/api/v1/query\",\n                \"method\": \"POST\"\n              },\n              {\n                \"endpointPattern\": \"/api/v1/query_range\",\n                \"method\": \"POST\"\n              },\n              {\n                \"endpointPattern\": \"/api/v1/label/([a-zA-Z0-9_-]+)/values\",\n                \"method\": \"GET\"\n              }\n            ],\n            \"url\": \"https://prometheus.demo.do.prometheus.io\"\n          }\n        }\n      }\n    }\n  }\n}\n</code></pre>"},{"location":"perses/docs/cli/#delete-data","title":"Delete data","text":"<p>To remove a resource, you can use the <code>delete</code> command :</p> <pre><code>$ percli delete dashboard Demo\n\nDashboard Demo has been deleted\n</code></pre>"},{"location":"perses/docs/cli/#advanced-commands","title":"Advanced Commands","text":""},{"location":"perses/docs/cli/#linter","title":"Linter","text":"<p>The CLI provides a command <code>lint</code> that is able to validate any data supported by Perses.</p> <p>Note that it doesn't necessary mean you won't face any issues when applying them.</p> <pre><code>$ percli lint -f ./resource.json\n</code></pre> <p>By default, the command doesn't require any remote server. We are providing a flag <code>--online</code> that will tell the CLI to use a remote Perses server for additional validation. For example, when it has to validate a dashboard, it will use the endpoint <code>/api/validate/dashboards</code>. That can be useful if you want to be sure that your dashboard is compatible with the server (because it will match the plugins known by the server instead of the local ones)</p>"},{"location":"perses/docs/cli/#migrate-from-grafana-dashboard-to-perses-format","title":"Migrate from Grafana dashboard to Perses format","text":"<p>The command <code>migrate</code> is for the moment only used to translate a Grafana dashboard to the Perses format. This command has two modes:</p> <ol> <li>An online mode that requires an active connection to a remote Perses server that holds the translation logic.</li> <li>An offline mode that requires three different folders:<ul> <li>charts folders</li> <li>queries folders</li> <li>variables folders</li> </ul> </li> </ol> <p>Each of the above folders should contain a file named <code>migrate.cue</code>, that holds the logic of the migration for each plugin. For more information about these files, please read the documentation about CUE in Perses.</p> <p>In both modes, if the command runs successfully, it will return the dashboard in the Perses format.</p> <p>For example:</p> <pre><code>$ percli migrate -f ./grafana_dashboard.json --online\n\nkind: Dashboard\nmetadata:\n  name: rYdddlPWk\n  createdAt: 0001-01-01T00:00:00Z\n  updatedAt: 0001-01-01T00:00:00Z\n  project: \"\"\nspec:\n  display:\n    name: Node Exporter Full\n  duration: 1h\n  variables:\n  - kind: ListVariable\n    spec:\n      name: DS_PROMETHEUS\n      display:\n        name: datasource\n        hidden: false\n      allowAllValue: false\n      allowMultiple: false\n      plugin:\n        kind: StaticListVariable\n        spec:\n          values:\n          - grafana\n          - migration\n          - not\n          - supported\n  - kind: ListVariable\n    spec:\n      name: job\n      display:\n        name: Job\n        hidden: false\n      allowAllValue: false\n      allowMultiple: false\n      plugin:\n        kind: PrometheusLabelValuesVariable\n        spec:\n          labelName: job\n          matchers: []\n[...]\n</code></pre>"},{"location":"perses/docs/cli/#dashboard-as-code","title":"Dashboard-as-Code","text":"<p>The CLI also comes in handy when you want to create &amp; manage dashboards as code. For this topic please refer to DaC user guide.</p>"},{"location":"perses/docs/datasource-and-variable-scopes/","title":"Datasource &amp; Variable scopes","text":"<p>Datasources &amp; Variables in Perses can be configured at different scopes. The available scopes are:</p> <ul> <li>Global</li> <li>Project</li> <li>Dashboard</li> </ul> <p>The idea behind this approach is to:</p> <ul> <li>Leverage higher scopes for common use cases, allowing the same definition to be reused across multiple dashboards.</li> <li>Utilize lower scopes for more specific needs, restricting the resource availability to a specific (set of) dashboard(s).</li> </ul> <p>Then, once on a dashboard, if multiple resources with the same name exist across different scopes, the resource from the lower scope takes precedence. This enables transparent overriding for more specific use cases.</p> <p></p> <p>Let\u2019s see with an example of a Time Series panel that relies on 3 variables and a datasource:</p> <p></p> <p>The demo datasource used is specific to this dashboard and overrides one defined at the project level, which in turn overrides a demo datasource defined at the global level.</p> <p>For the variables:</p> <ul> <li>The panel uses the standard cluster variable, which is globally defined.</li> <li>The namespace list is restricted to those relevant to the project or application, so a custom project-specific variable is used instead of the global one.</li> <li>The pod variable is defined at the dashboard level, making it accessible exclusively within this dashboard.</li> </ul>"},{"location":"perses/docs/embedding-panels/","title":"Embedding Perses panels","text":"<p>This little documentation aims to provide you the minimum code needed to have a Perses panel into your React application.</p> <p>Info</p> <p>We are working actively on reducing this amount of required dependencies/providers working on some default values or opt-in/opt-out mechanisms.</p>"},{"location":"perses/docs/embedding-panels/#getting-started-npm-example","title":"Getting started (npm example)","text":"<pre><code># For example you can use the create-react-app command line or reuse the code of your app\nnpx create-react-app perses-embedded-panel --template typescript\n\n# Install perses dependencies\nnpm i --save @perses-dev/components \\\n  @perses-dev/plugin-system @perses-dev/panels-plugin \\\n  @tanstack/react-query @perses-dev/dashboards \\\n  @mui/material @perses-dev/prometheus-plugin \\\n  @emotion/styled @hookform/resolvers\n</code></pre>"},{"location":"perses/docs/embedding-panels/#minimal-code","title":"Minimal code","text":"<p>Here replacing your App.tsx</p> <pre><code>import React from 'react';\nimport './App.css';\n\nimport { ChartsProvider, generateChartsTheme, getTheme, SnackbarProvider } from '@perses-dev/components';\nimport {\n  DataQueriesProvider,\n  dynamicImportPluginLoader,\n  PluginModuleResource,\n  PluginRegistry,\n  TimeRangeProvider,\n} from '@perses-dev/plugin-system';\nimport { TimeSeriesChart } from '@perses-dev/panels-plugin';\nimport { ThemeProvider } from '@mui/material';\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\nimport { DatasourceStoreProvider, VariableProvider } from '@perses-dev/dashboards';\nimport prometheusResource from '@perses-dev/prometheus-plugin/plugin.json';\nimport panelsResource from '@perses-dev/panels-plugin/plugin.json';\nimport { DashboardResource, GlobalDatasourceResource, DatasourceResource } from '@perses-dev/core';\nimport { DatasourceApi } from '@perses-dev/dashboards';\n\nconst fakeDatasource: GlobalDatasourceResource = {\n  kind: 'GlobalDatasource',\n  metadata: { name: 'hello' },\n  spec: {\n    default: true,\n    plugin: {\n      kind: 'PrometheusDatasource',\n      spec: {\n        directUrl: 'https://prometheus.demo.do.prometheus.io',\n      },\n    },\n  },\n};\n\nclass DatasourceApiImpl implements DatasourceApi {\n  getDatasource(): Promise&lt;DatasourceResource | undefined&gt; {\n    return Promise.resolve(undefined);\n  }\n\n  getGlobalDatasource(): Promise&lt;GlobalDatasourceResource | undefined&gt; {\n    return Promise.resolve(fakeDatasource);\n  }\n\n  listDatasources(): Promise&lt;DatasourceResource[]&gt; {\n    return Promise.resolve([]);\n  }\n\n  listGlobalDatasources(): Promise&lt;GlobalDatasourceResource[]&gt; {\n    return Promise.resolve([fakeDatasource]);\n  }\n\n  buildProxyUrl(): string {\n    return '/prometheus';\n  }\n}\nexport const fakeDatasourceApi = new DatasourceApiImpl();\nexport const fakeDashboard = {\n  kind: 'Dashboard',\n  metadata: {},\n  spec: {},\n} as DashboardResource;\n\nfunction App() {\n  const muiTheme = getTheme('light');\n  const chartsTheme = generateChartsTheme(muiTheme, {});\n  const pluginLoader = dynamicImportPluginLoader([\n    {\n      resource: prometheusResource as PluginModuleResource,\n      importPlugin: () =&gt; import('@perses-dev/prometheus-plugin'),\n    },\n    {\n      resource: panelsResource as PluginModuleResource,\n      importPlugin: () =&gt; import('@perses-dev/panels-plugin'),\n    },\n  ]);\n\n  const queryClient = new QueryClient({\n    defaultOptions: {\n      queries: {\n        refetchOnWindowFocus: false,\n        retry: 0,\n      },\n    },\n  });\n  return (\n    &lt;ThemeProvider theme={muiTheme}&gt;\n      &lt;ChartsProvider chartsTheme={chartsTheme}&gt;\n        &lt;SnackbarProvider anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }} variant=\"default\" content=\"\"&gt;\n          &lt;PluginRegistry\n            pluginLoader={pluginLoader}\n            defaultPluginKinds={{\n              Panel: 'TimeSeriesChart',\n              TimeSeriesQuery: 'PrometheusTimeSeriesQuery',\n            }}\n          &gt;\n            &lt;QueryClientProvider client={queryClient}&gt;\n              &lt;TimeRangeProvider refreshInterval=\"0s\" timeRange={{ pastDuration: '30m' }}&gt;\n                &lt;VariableProvider&gt;\n                  &lt;DatasourceStoreProvider dashboardResource={fakeDashboard} datasourceApi={fakeDatasourceApi}&gt;\n                    &lt;DataQueriesProvider\n                      definitions={[\n                        {\n                          kind: 'PrometheusTimeSeriesQuery',\n                          spec: { query: `up{job=\"prometheus\"}` },\n                        },\n                      ]}\n                    &gt;\n                      &lt;TimeSeriesChart.PanelComponent\n                        contentDimensions={{\n                          width: 1200,\n                          height: 400,\n                        }}\n                        spec={{\n                          legend: {\n                            position: 'bottom',\n                            size: 'medium',\n                          },\n                        }}\n                      /&gt;\n                    &lt;/DataQueriesProvider&gt;\n                  &lt;/DatasourceStoreProvider&gt;\n                &lt;/VariableProvider&gt;\n              &lt;/TimeRangeProvider&gt;\n            &lt;/QueryClientProvider&gt;\n          &lt;/PluginRegistry&gt;\n        &lt;/SnackbarProvider&gt;\n      &lt;/ChartsProvider&gt;\n    &lt;/ThemeProvider&gt;\n  );\n}\n\nexport default App;\n</code></pre> <p>You should see a perses panel going to your browser</p> <p></p>"},{"location":"perses/docs/embedding-panels/#definitions-by-provider","title":"Definitions by provider","text":"<p>Check each Provider's source code/jsdoc for more details.</p> <ul> <li><code>DataQueriesProvider</code>: Provide the queries' definition, with the query type, the value. This is to be inside the   chart below. For each query, one line will be displayed in the chart.</li> <li><code>DatasourceStoreProvider</code>: Provide the datasources. In other terms, the place from which the data will be collected.</li> <li><code>VariableProvider</code>: Provide the variables that can be used inside the chart.   It will allow you to reference any variable into the queries thanks to the <code>${myVar}</code> syntax.   Available variables will be either the builtin variables or the local/external variables that you can pass to the provider.</li> <li><code>TimeRangeProvider</code>: Provide <code>time range</code> of the query, but also the <code>refresh interval</code> (time between each query   automatic replay)</li> <li><code>QueryClientProvider</code>: Provide a <code>@tanstack/react-query</code> <code>QueryClient</code>, which is a mandatory dependency.   (We advise to configure it with <code>refetchOnWindowFocus: false</code> except if you want to replay the queries every time   you change window)</li> <li><code>QueryParamProvider</code>: Provide the ability to take time range, refresh interval, and different variables from the   url query params.</li> <li><code>BrowserRouter</code>: Provide necessary elements for the <code>QueryParamProvider</code></li> <li><code>PluginRegistry</code>: Provide the different Perses plugins that will be used in the providers/charts below.</li> <li><code>SnackbarProvider</code>: Provide the toaster that will occurs in case of error/success.</li> <li><code>ChartsProvider</code>: Provider for the option of apache/echarts library.   Which is used for all the charts display.</li> <li><code>ThemeProvider</code>: Provider of the Material UI theme which is   currently the theme used in Perses.</li> </ul>"},{"location":"perses/docs/overview/","title":"Overview","text":"<p>Note</p> <p>Check the documentation website's home page to get another overview of Perses with visuals.</p> <p>Perses is first and foremost a dashboard tool that you can use to display a variety of observability data. It currently supports Prometheus metrics &amp; Tempo traces, with plans to expand its capabilities in the future to include logging, profiling, additional technologies for monitoring and tracing, and more.</p> <p>Perses is a Cloud Native Computing Foundation sandbox project.</p> <p>Beyond its core usage, Perses aims to achieve several broader goals:</p> <ul> <li>Open specification for dashboards. Perses is also an initiative to define a standardized dashboard specification, fostering interoperability across observability tools.</li> <li>Integrability. Perses provides various npm packages that allow developers to embed panels and dashboards into their own UIs, benefiting from the work done in Perses. For instance, these packages could be used in the future to enhance data visualization in the Prometheus UI.</li> <li>Extensibility. Perses is soon to support plugins, enabling users to extend the tool\u2019s native capabilities to suit specific needs.</li> <li>GitOps-friendly. SDKs, CI/CD libraries, static validation, native CLI.. Perses provides everything you need for a great Dashboard-as-Code experience.</li> <li>Kubernetes-native mode. Dashboard definitions will be deployable into and readable from individual application namespaces using Custom Resource Definitions (CRDs).</li> </ul> <p>Learn more about these topics throughout the rest of the available documentation.</p>"},{"location":"perses/docs/troubleshooting-tls-plain-http-datasource/","title":"TLS and plain HTTP datasource","text":"<p>When you run Perses using TLS and your time series backend with Prometheus is just plain HTTP you can configure the data source with the \"HTTP Settings: Direct access\". Saving the data source is indicated successfully. When you try now to create some dashboards you will see a \"Load failed\" error message without further indication of what the real problem is.</p> <p></p>"},{"location":"perses/docs/troubleshooting-tls-plain-http-datasource/#diagnostics","title":"Diagnostics","text":"<p>When you use the browser inspector and look at the JavaScript console output you will find the error message: \"Fetch API cannot load http://:9009/prometheus/api/v1/guery_range due to access control checks.\"</p> <p></p>"},{"location":"perses/docs/troubleshooting-tls-plain-http-datasource/#solution","title":"Solution","text":"<p>If you have a requirement to run Perses and Prometheus in a mixed HTTPS/HTTP mode you need to configure Perses as a Proxy for the fetch queries.</p> <p></p>"},{"location":"perses/docs/api/","title":"Reference","text":"<p>This section will give you an insight on every resource supported by the Perses API. While it can give you some explanations about the purpose of each resource, this documentation is mainly for users that would like to interact directly with the API and manipulate the resources without using the UI.</p> <p>On the different documentations, you will find the definition of each resource in the yaml format. Brackets indicate that a parameter is optional.</p> <p>Generic placeholders are defined as follows:</p> <ul> <li><code>&lt;boolean&gt;</code>: a boolean that can take the values <code>true</code> or <code>false</code></li> <li><code>&lt;duration&gt;</code>: a duration matching the regular   expression <code>((([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?|0)</code>,   e.g. <code>1d</code>, <code>1h30m</code>, <code>5m</code>, <code>10s</code></li> <li><code>&lt;filename&gt;</code>: a valid path in the current working directory</li> <li><code>&lt;path&gt;</code>: a valid URL path</li> <li><code>&lt;int&gt;</code>: an integer value</li> <li><code>&lt;secret&gt;</code>: a regular string that is a secret, such as a password</li> <li><code>&lt;string&gt;</code>: a regular string</li> </ul>"},{"location":"perses/docs/api/#table-of-contents","title":"Table of contents","text":"<ul> <li>Project</li> <li>Dashboard<ul> <li>Specification</li> <li>API definition</li> </ul> </li> <li>Datasource<ul> <li>Choose a scope</li> <li>Specification</li> <li>API definition</li> </ul> </li> <li>EphemeralDashboard<ul> <li>Specification</li> <li>API definition</li> </ul> </li> <li>Secret<ul> <li>Specification</li> <li>API definition</li> </ul> </li> <li>User<ul> <li>Specification</li> <li>API definition</li> </ul> </li> <li>Variable<ul> <li>Choose a scope</li> <li>Specification</li> <li>API definition</li> </ul> </li> <li>Role<ul> <li>Choose a scope</li> <li>Specification</li> <li>API definition</li> </ul> </li> <li>RoleBinding<ul> <li>Choose a scope</li> <li>Specification</li> <li>API definition</li> </ul> </li> <li>Plugins<ul> <li>Panels<ul> <li>BarChart</li> <li>GaugeChart</li> <li>Markdown</li> <li>StatChart</li> <li>TimeSeriesChart</li> </ul> </li> <li>Prometheus<ul> <li>Datasource</li> <li>Query</li> <li>Variable</li> </ul> </li> </ul> </li> </ul>"},{"location":"perses/docs/api/dashboard/","title":"Dashboard","text":"<p>Without any doubt, this is the principal resource of Perses.</p> <p>A <code>Dashboard</code> belongs to a <code>Project</code>. See the project documentation to see how to create a project.</p> <p>It is defined like that:</p> <pre><code>kind: \"Dashboard\"\nmetadata:\n  name: &lt;string&gt;\n  project: &lt;string&gt;\nspec: &lt;dashboard_specification&gt;\n</code></pre> <p>See the next section to get details about the <code>&lt;dashboard_specification&gt;</code>.</p>"},{"location":"perses/docs/api/dashboard/#dashboard-specification","title":"Dashboard specification","text":"<pre><code># Metadata.name has some restrictions. For example, you can't use space there.\n# `display` allows to provide a rich name and a description for your dashboard.\ndisplay: &lt;Display specification&gt; # Optional\n\n# `datasources` is a map where the key is the reference of the datasource. The value is the actual datasource definition.\n# A datasource can be referenced by the different panels and/or variables.\ndatasources:\n  &lt;string&gt;: &lt;Datasource specification&gt; # Optional\n\n# `variables` is the list of dashboard variables. A variable can be referenced by the different panels and/or by other variables.\nvariables:\n  - &lt;Variable specification&gt; # Optional\n\n# `panels` is a map where the key is the reference of the panel, and the value is the actual panel definition\npanels:\n  &lt;string&gt;: &lt;Panel specification&gt; # Optional\n\n# `layouts` is the list of layouts. A layout describes how to display the list of panels. \n# Indeed, in Perses the definition of a panel is uncorrelated from the definition of where to position it.\nlayouts:\n  - &lt;Layout specification&gt;\n\n# `duration` is the default time range to use on the initial load of the dashboard.\nduration: &lt;duration&gt; # Optional\n\n# `refreshInterval` is the default refresh interval to use on the initial load of the dashboard.\nrefreshInterval: &lt;duration&gt; # Optional\n</code></pre> <p>A dashboard in its minimal definition only requires a panel and a layout.</p>"},{"location":"perses/docs/api/dashboard/#display-specification","title":"Display specification","text":"<p>This is the way to provide a rich name and a description for your dashboard. There is no restriction about the type of characters you can use there.</p> <pre><code># The new name of the dashboard. If set, it will replace `metadata.name` in the dashboard title in the UI.\n# Note that it cannot be used when you are querying the API. Only `metadata.name` can be used to reference the dashboard.\n# This is just for display purpose.\nname: &lt;string&gt; # Optional\n\n# The description of the dashboard.\ndescription: &lt;string&gt; # Optional\n</code></pre>"},{"location":"perses/docs/api/dashboard/#datasource-specification","title":"Datasource specification","text":"<p>See the datasource documentation.</p>"},{"location":"perses/docs/api/dashboard/#variable-specification","title":"Variable specification","text":"<p>See the variable documentation.</p>"},{"location":"perses/docs/api/dashboard/#panel-specification","title":"Panel specification","text":"<pre><code>kind: \"Panel\"\nspec:\n  display: &lt;Display specification&gt;\n\n  # `plugin` is where you define the panel type to use.\n  # The panel type chosen should match one of the panel plugins known to the Perses instance.\n  plugin: &lt;Panel Plugin specification&gt;\n\n  # `queries` is the list of queries to be executed by the panel. The available types of query are conditioned by the type of panel &amp; the type of datasource used.\n  queries:\n    - &lt;Query specification&gt; # Optional\n</code></pre>"},{"location":"perses/docs/api/dashboard/#panel-plugin-specification","title":"Panel Plugin specification","text":"<pre><code># `kind` is the plugin type of the panel. For example, `TimeSeriesChart`.\nkind: &lt;string&gt;\n\n# `spec` is the actual definition of the panel plugin. Each `kind` comes with its own `spec`.\nspec: &lt;Plugin specification&gt;\n</code></pre> <p>See the Panel plugins documentation to know more about the different panels supported by Perses.</p>"},{"location":"perses/docs/api/dashboard/#query-specification","title":"Query specification","text":"<pre><code># kind` is the type of the query. For the moment we only support `TimeSeriesQuery`.\nkind: &lt;string&gt;\nspec:\n  plugin: &lt;Query Plugin specification&gt;\n</code></pre>"},{"location":"perses/docs/api/dashboard/#query-plugin-specification","title":"Query Plugin specification","text":"<pre><code># `kind` is the plugin type matching the type of query. For example, `PrometheusTimeSeriesQuery` for the query type `TimeSeriesQuery`.\nkind: &lt;string&gt;\n\n# `spec` is the actual definition of the query. Each `kind` comes with its own `spec`.\nspec: &lt;Plugin specification&gt;\n</code></pre> <p>Perses supports only Prometheus for the <code>TimeSeriesQuery</code> for the moment. Please look at the Prometheus documentation to know the spec for the <code>PrometheusTimeSeriesQuery</code>.</p>"},{"location":"perses/docs/api/dashboard/#layout-specification","title":"Layout specification","text":"<pre><code>kind: \"Grid\"\nspec:\n  [ display: &lt;Grid Display specification&gt; ]\n  items:\n    [ - &lt;Grid Item specification&gt; ]\n</code></pre> <p>Example:</p> <pre><code>kind: \"Grid\"\nspec:\n  display:\n    title: \"Row 1\"\n    collapse:\n      open: true\n  items:\n    - x: 0\n      y: 0\n      width: 2\n      height: 3\n      content:\n        \"$ref\": \"#/spec/panels/statRAM\"\n    - x: 0\n      y: 4\n      width: 2\n      height: 3\n      content:\n        $ref\": \"#/spec/panels/statTotalRAM\"\n</code></pre>"},{"location":"perses/docs/api/dashboard/#grid-display-specification","title":"Grid Display specification","text":"<pre><code>title: &lt;string&gt;\ncollapse:\n  open: &lt;boolean&gt;\n</code></pre>"},{"location":"perses/docs/api/dashboard/#grid-item-specification","title":"Grid Item specification","text":"<pre><code>x: &lt;int&gt;\ny: &lt;int&gt;\nwidth: &lt;int&gt;\nheight: &lt;int&gt;\ncontent:\n  \"$ref\": &lt;json_panel_ref&gt;\n</code></pre>"},{"location":"perses/docs/api/dashboard/#api-definition","title":"API definition","text":""},{"location":"perses/docs/api/dashboard/#get-a-list-of-dashboard","title":"Get a list of <code>Dashboard</code>","text":"<pre><code>GET /api/v1/projects/&lt;project_name&gt;/dasbhoards\n</code></pre> <p>URL query parameters:</p> <ul> <li>name = <code>&lt;string&gt;</code> : filters the list of dashboards based on their name (prefix match).</li> </ul>"},{"location":"perses/docs/api/dashboard/#get-a-single-dashboard","title":"Get a single <code>Dashboard</code>","text":"<pre><code>GET /api/v1/projects/&lt;project_name&gt;/dasbhoards/&lt;dasbhoard_name&gt;\n</code></pre>"},{"location":"perses/docs/api/dashboard/#create-a-single-dashboard","title":"Create a single <code>Dashboard</code>","text":"<pre><code>POST /api/v1/projects/&lt;project_name&gt;/dashboards\n</code></pre>"},{"location":"perses/docs/api/dashboard/#update-a-single-dashboard","title":"Update a single <code>Dashboard</code>","text":"<pre><code>PUT /api/v1/projects/&lt;project_name&gt;/dasbhoards/&lt;dasbhoard_name&gt;\n</code></pre>"},{"location":"perses/docs/api/dashboard/#delete-a-single-dashboard","title":"Delete a single <code>Dashboard</code>","text":"<pre><code>DELETE /api/v1/projects/&lt;project_name&gt;/dasbhoards/&lt;dasbhoard_name&gt;\n</code></pre>"},{"location":"perses/docs/api/datasource/","title":"Datasource","text":""},{"location":"perses/docs/api/datasource/#choose-a-scope","title":"Choose a scope","text":"<p>There are different scopes in which you can define a datasource, depending on how much you want it to be shared. More about scopes here.</p>"},{"location":"perses/docs/api/datasource/#dashboard","title":"Dashboard","text":"<p>We have extended the dashboard spec to include a list of datasources:</p> <pre><code>interface DashboardSpec {\n  // ... existing dashboard spec ...\n  datasources: Record&lt;string, DatasourceSpec&gt;;\n}\n</code></pre> <p>Of course, the scope of such definition is the dashboard where it is defined. It cannot be used outside the dashboard.</p>"},{"location":"perses/docs/api/datasource/#project","title":"Project","text":"<p>In case you would like to share a datasource across different dashboards in the same project, you will need to create a <code>Datasource</code>.</p> <pre><code>kind: \"Datasource\"\nmetadata:\n  name: &lt;string&gt;\n  project: &lt;string&gt;\nspec: &lt;Datasource specification&gt;\n</code></pre>"},{"location":"perses/docs/api/datasource/#global","title":"Global","text":"<p>When we talk about scope and user permission in a REST API, the easiest way is to associate one permission per endpoint. If we want to provide a datasource shared by all projects, then it makes sense to have a different object that is living outside a project.</p> <p>That\u2019s why we have another resource called <code>GlobalDatasource</code></p> <pre><code>kind: \"GlobalDatasource\"\nmetadata:\n  name: &lt;string&gt;\nspec: &lt;Datasource specification&gt;\n</code></pre>"},{"location":"perses/docs/api/datasource/#datasource-specification","title":"Datasource specification","text":"<pre><code>display: &lt;Display specification&gt; # Optional\n\n# If true, then it's the default datasource for the type defined in the plugin.\ndefault: &lt;boolean&gt; | default = false # Optional\n\n# The definition of the plugin datasource\nplugin: &lt;plugin&gt;\n</code></pre>"},{"location":"perses/docs/api/datasource/#plugin-definition","title":"Plugin definition","text":"<pre><code># The type of the datasource. For example, `PrometheusDatasource`\nkind: &lt;string&gt;\n\n# The actual definition of the datasource. It will depend on the type defined in the previous field `kind`\nspec: &lt;Plugin specification&gt;\n</code></pre> <p>We are supporting only prometheus as a datasource for the moment. Please look at the documentation to know the spec for the Prometheus datasource.</p>"},{"location":"perses/docs/api/datasource/#selecting-referencing-a-datasource","title":"Selecting / Referencing a Datasource","text":"<p>In the panels, you will be able to select a datasource. Like proposed in the first draft, the selector will be like this:</p> <pre><code>interface DatasourceSelector {\n  kind: string;\n  // name is the unique name of the datasource to use\n  // If name is omitted, that effectively means \"use the default datasource for this kind\".\n  name?: string;\n}\n</code></pre> <p>The priority order is <code>\"Local datasource in the dashboard\" &gt; \"Project datasource\" &gt; \"Global datasource\"</code>.</p> <p>So if by any chance you have a local datasource that is named exactly like a Project datasource, or a Global datasource, we will consider that the user intentionally wanted to override the upper datasource. We will use the one with the smallest scope.</p>"},{"location":"perses/docs/api/datasource/#how-to-use-the-perses-proxy","title":"How to use the Perses' proxy","text":"<p>As described before, you can provide a proxy configuration that will be used by the Perses server to redirect any queries to the datasource.</p> <p>It means in the case of the Prometheus datasource, if the field <code>directUrl</code> is not set then the FE needs to use the Perses server to contact the datasource.</p> <p>For that, the FE will have to determinate which URL should be used to contact the Perses server based on what kind of datasource is used.</p> <ul> <li>datasource is at project scope.</li> </ul> <pre><code>  var datasource; \n  if datasource.kind == 'Datasource'; then \n    url= '/proxy/projects' + datasource.metadata.project + '/datasources/' + datasource.metadata.name \n</code></pre> <ul> <li>datasource is at global scope.</li> </ul> <pre><code>  var datasource; \n  if datasource.kind == 'GlobalDatasource'; then \n    url= '/proxy/globaldatasources/' + datasource.metadata.name \n</code></pre>"},{"location":"perses/docs/api/datasource/#api-definition","title":"API definition","text":""},{"location":"perses/docs/api/datasource/#datasource_1","title":"<code>Datasource</code>","text":""},{"location":"perses/docs/api/datasource/#get-a-list-of-datasource","title":"Get a list of <code>Datasource</code>","text":"<pre><code>GET /api/v1/projects/&lt;project_name&gt;/datasources\n</code></pre> <p>URL query parameters:</p> <ul> <li>kind = <code>&lt;string&gt;</code> : should be used to filter the list of datasources with a specific kind</li> <li>default = <code>&lt;boolean&gt;</code> : should be used to filter the list of datasources to only have the default one. You should have   one default datasource per kind</li> <li>name = <code>&lt;string&gt;</code> : should be used to filter the list of datasources based on the prefix name.</li> </ul> <p>Example:</p> <p>The following query should return an empty list or a list containing a single Prometheus datasource.</p> <pre><code>GET /api/v1/projects/&lt;project_name&gt;/datasources?kind=Prometheus&amp;default=true\n</code></pre>"},{"location":"perses/docs/api/datasource/#get-a-single-datasource","title":"Get a single <code>Datasource</code>","text":"<pre><code>GET /api/v1/projects/&lt;project_name&gt;/datasources/&lt;datasource_name&gt;\n</code></pre>"},{"location":"perses/docs/api/datasource/#create-a-single-datasource","title":"Create a single <code>Datasource</code>","text":"<pre><code>POST /api/v1/projects/&lt;project_name&gt;/datasources\n</code></pre>"},{"location":"perses/docs/api/datasource/#update-a-single-datasource","title":"Update a single <code>Datasource</code>","text":"<pre><code>PUT /api/v1/projects/&lt;project_name&gt;/datasources/&lt;datasource_name&gt;\n</code></pre>"},{"location":"perses/docs/api/datasource/#delete-a-single-datasource","title":"Delete a single <code>Datasource</code>","text":"<pre><code>DELETE /api/v1/projects/&lt;project_name&gt;/datasources/&lt;datasource_name&gt;\n</code></pre>"},{"location":"perses/docs/api/datasource/#globaldatasource","title":"<code>GlobalDatasource</code>","text":""},{"location":"perses/docs/api/datasource/#get-a-list-of-globaldatasource","title":"Get a list of <code>GlobalDatasource</code>","text":"<pre><code>GET /api/v1/globaldatasources\n</code></pre> <p>URL query parameters:</p> <ul> <li>kind = <code>&lt;string&gt;</code> : should be used to filter the list of datasource with a specific kind</li> <li>default = <code>&lt;boolean&gt;</code> : should be used to filter the list of datasource to only have the default one. You should have   one default datasource per kind</li> <li>name = <code>&lt;string&gt;</code> : should be used to filter the list of datasource based on the prefix name.</li> </ul> <p>Example:</p> <p>The following query should return an empty list or a list containing a single Prometheus datasource.</p> <pre><code>GET /api/v1/globaldatasources?kind=Prometheus&amp;default=true\n</code></pre>"},{"location":"perses/docs/api/datasource/#get-a-single-globaldatasource","title":"Get a single <code>GlobalDatasource</code>","text":"<pre><code>GET /api/v1/globaldatasources/&lt;name&gt;\n</code></pre>"},{"location":"perses/docs/api/datasource/#create-a-single-globaldatasource","title":"Create a single <code>GlobalDatasource</code>","text":"<pre><code>POST /api/v1/globaldatasources\n</code></pre>"},{"location":"perses/docs/api/datasource/#update-a-single-globaldatasource","title":"Update a single <code>GlobalDatasource</code>","text":"<pre><code>PUT /api/v1/globaldatasources/&lt;name&gt;\n</code></pre>"},{"location":"perses/docs/api/datasource/#delete-a-single-globaldatasource","title":"Delete a single <code>GlobalDatasource</code>","text":"<pre><code>DELETE /api/v1/globaldatasources/&lt;name&gt;\n</code></pre>"},{"location":"perses/docs/api/ephemeral-dashboard/","title":"Ephemeral Dashboard","text":"<p>It's a dashboard but with a TTL. That means after a defined duration, the dashboard will be removed from the database.</p> <p>We are providing this resource mainly to create a dashboard preview from a pull request.</p> <pre><code>kind: \"EphemeralDashboard\"\nmetadata:\n  name: &lt;string&gt;\n  project: &lt;string&gt;\nspec: &lt;ephemeral_dashboard_specification&gt;\n</code></pre> <p>See the next section to get details about the <code>&lt;ephemeral_dashboard_specification&gt;</code>.</p>"},{"location":"perses/docs/api/ephemeral-dashboard/#ephemeral-dashboard-specification","title":"Ephemeral Dashboard specification","text":"<p>It's a merge with the dashboard_spec and an additional field <code>ttl</code>.</p> <pre><code>ttl: &lt;duration&gt;\n  &lt;dashboard_spec&gt;\n</code></pre>"},{"location":"perses/docs/api/ephemeral-dashboard/#api-definition","title":"API definition","text":""},{"location":"perses/docs/api/ephemeral-dashboard/#get-a-list-of-ephemeraldashboard","title":"Get a list of <code>EphemeralDashboard</code>","text":"<pre><code>GET /api/v1/projects/&lt;project_name&gt;/ephemeraldashboards\n</code></pre> <p>URL query parameters:</p> <ul> <li>name = <code>&lt;string&gt;</code> : filters the list of ephemeral dashboards based on their name (prefix match).</li> </ul>"},{"location":"perses/docs/api/ephemeral-dashboard/#get-a-single-ephemeraldashboard","title":"Get a single <code>EphemeralDashboard</code>","text":"<pre><code>GET /api/v1/projects/&lt;project_name&gt;/ephemeraldashboards/&lt;ephemeraldashboard_name&gt;\n</code></pre>"},{"location":"perses/docs/api/ephemeral-dashboard/#create-a-single-ephemeraldashboard","title":"Create a single <code>EphemeralDashboard</code>","text":"<pre><code>POST /api/v1/projects/&lt;project_name&gt;/ephemeraldashboards\n</code></pre>"},{"location":"perses/docs/api/ephemeral-dashboard/#update-a-single-ephemeraldashboard","title":"Update a single <code>EphemeralDashboard</code>","text":"<pre><code>PUT /api/v1/projects/&lt;project_name&gt;/ephemeraldashboards/&lt;ephemeraldashboard_name&gt;\n</code></pre>"},{"location":"perses/docs/api/ephemeral-dashboard/#delete-a-single-ephemeraldashboard","title":"Delete a single <code>EphemeralDashboard</code>","text":"<pre><code>DELETE /api/v1/projects/&lt;project_name&gt;/ephemeraldashboards/&lt;ephemeraldashboard_name&gt;\n</code></pre>"},{"location":"perses/docs/api/project/","title":"Project","text":"<p>A project can be defined as a workspace. It's the place where users will spend most of their time creating dashboards, variables and datasources.</p> <p>You need to own a project if you want to create a dashboard</p> <p>Creating a project is as simple as providing its name:</p> <pre><code>kind: \"Project\"\nmetadata:\n  name: &lt;string&gt;\n</code></pre>"},{"location":"perses/docs/api/project/#api-definition","title":"API definition","text":""},{"location":"perses/docs/api/project/#get-a-list-of-project","title":"Get a list of <code>Project</code>","text":"<pre><code>GET /api/v1/projects\n</code></pre> <p>URL query parameters:</p> <ul> <li>name = <code>&lt;string&gt;</code> : filters the list of projects based on their names (prefix).</li> </ul>"},{"location":"perses/docs/api/project/#get-a-single-project","title":"Get a single <code>Project</code>","text":"<pre><code>GET /api/v1/projects/&lt;name&gt;\n</code></pre>"},{"location":"perses/docs/api/project/#create-a-single-project","title":"Create a single <code>Project</code>","text":"<pre><code>POST /api/v1/projects\n</code></pre>"},{"location":"perses/docs/api/project/#update-a-single-project","title":"Update a single <code>Project</code>","text":"<pre><code>PUT /api/v1/projects/&lt;name&gt;\n</code></pre>"},{"location":"perses/docs/api/project/#delete-a-single-project","title":"Delete a single <code>Project</code>","text":"<pre><code>DELETE /api/v1/projects/&lt;name&gt;\n</code></pre>"},{"location":"perses/docs/api/role/","title":"Role","text":"<p>A <code>Role</code> defines a set of permissions within a particular project. When you create a <code>Role</code> you need to specify the project it belongs in. <code>GlobalRole</code>, by contrast, is not limited to a project scope.</p>"},{"location":"perses/docs/api/role/#choose-a-scope","title":"Choose a scope","text":"<p>There are two different scopes in which you can define a Role, depending on how much you want it to be shared.</p> <ul> <li>for global scope, use <code>GlobalRole</code></li> <li>for project scope, use <code>Role</code></li> </ul>"},{"location":"perses/docs/api/role/#project-level","title":"Project level","text":"<p>In case you would like to set permissions at Project level, you will need to create a <code>Role</code>.</p> <pre><code>kind: \"Role\"\nmetadata:\n  name: &lt;string&gt;\n  project: &lt;string&gt;\nspec: &lt;Role specification&gt;\n</code></pre>"},{"location":"perses/docs/api/role/#global-level","title":"Global level","text":"<p>In case you would like to set permissions at Global level , you will need to create a <code>GlobalRole</code>.</p> <pre><code>kind: \"GlobalRole\"\nmetadata:\n  name: &lt;string&gt;\nspec: &lt;Role specification&gt;\n</code></pre>"},{"location":"perses/docs/api/role/#role-specification","title":"Role specification","text":"<pre><code># List of permissions owned by the role\npermissions:\n  - &lt;Permission specification&gt;\n</code></pre>"},{"location":"perses/docs/api/role/#permission-specification","title":"Permission specification","text":"<pre><code># Types of actions the permission grant access\nactions:\n  - &lt;enum= \"create\" | \"read\" | \"update\" | \"delete\"&gt;\n\n# The list of kind targeted by the permission. For example: `Datasource`, `Dashboard`, ...\n# With Role, you can't target global kinds\nscopes:\n  - &lt;string&gt;\n</code></pre>"},{"location":"perses/docs/api/role/#more-info-about-authorization","title":"More info about authorization","text":"<p>Please look at the documentation to know more about permissions and roles.</p>"},{"location":"perses/docs/api/role/#api-definition","title":"API definition","text":""},{"location":"perses/docs/api/role/#role_1","title":"<code>Role</code>","text":""},{"location":"perses/docs/api/role/#get-a-list-of-role","title":"Get a list of <code>Role</code>","text":"<pre><code>GET /api/v1/projects/&lt;project_name&gt;/roles\n</code></pre> <p>URL query parameters:</p> <ul> <li>name = <code>&lt;string&gt;</code> : should be used to filter the list of Roles based on the prefix name.</li> </ul> <p>Example:</p> <p>The following query should return an empty list or a list containing roles.</p> <pre><code>GET /api/v1/projects/&lt;project_name&gt;/roles?name=owner\n</code></pre>"},{"location":"perses/docs/api/role/#get-a-single-role","title":"Get a single <code>Role</code>","text":"<pre><code>GET /api/v1/projects/&lt;project_name&gt;/roles/&lt;role_name&gt;\n</code></pre>"},{"location":"perses/docs/api/role/#create-a-single-role","title":"Create a single <code>Role</code>","text":"<pre><code>POST /api/v1/projects/&lt;project_name&gt;/roles\n</code></pre>"},{"location":"perses/docs/api/role/#update-a-single-role","title":"Update a single <code>Role</code>","text":"<pre><code>PUT /api/v1/projects/&lt;project_name&gt;/roles/&lt;role_name&gt;\n</code></pre>"},{"location":"perses/docs/api/role/#delete-a-single-role","title":"Delete a single <code>Role</code>","text":"<pre><code>DELETE /api/v1/projects/&lt;project_name&gt;/roles/&lt;role_name&gt;\n</code></pre>"},{"location":"perses/docs/api/role/#globalrole","title":"<code>GlobalRole</code>","text":""},{"location":"perses/docs/api/role/#get-a-list-of-globalrole","title":"Get a list of <code>GlobalRole</code>","text":"<pre><code>GET /api/v1/globalroles\n</code></pre> <p>URL query parameters:</p> <ul> <li>name = <code>&lt;string&gt;</code> : should be used to filter the list of Role based on the prefix name.</li> </ul> <p>Example:</p> <p>The following query should return an empty list or a list containing global roles.</p> <pre><code>GET /api/v1/globalRoles?name=admin\n</code></pre>"},{"location":"perses/docs/api/role/#get-a-single-globalrole","title":"Get a single <code>GlobalRole</code>","text":"<pre><code>GET /api/v1/globalroles/&lt;name&gt;\n</code></pre>"},{"location":"perses/docs/api/role/#create-a-single-globalrole","title":"Create a single <code>GlobalRole</code>","text":"<pre><code>POST /api/v1/globalroles\n</code></pre>"},{"location":"perses/docs/api/role/#update-a-single-globalrole","title":"Update a single <code>GlobalRole</code>","text":"<pre><code>PUT /api/v1/globalroles/&lt;name&gt;\n</code></pre>"},{"location":"perses/docs/api/role/#delete-a-single-globalrole","title":"Delete a single <code>GlobalRole</code>","text":"<pre><code>DELETE /api/v1/globalroles/&lt;name&gt;\n</code></pre>"},{"location":"perses/docs/api/rolebinding/","title":"Role Binding","text":"<p>A role binding grants the permissions defined in a role to a user or set of users. It holds a list of subjects (users or teams) and a reference to the role being granted. A <code>RoleBinding</code> grants permissions within a specific project whereas a <code>GlobalRoleBinding</code> grants that access global-wide.</p> <p>A <code>RoleBinding</code> may reference any <code>Role</code> in the same project. Similarly, a <code>GlobalRoleBinding</code> can reference any <code>GlobalRole</code>.</p>"},{"location":"perses/docs/api/rolebinding/#choose-a-scope","title":"Choose a scope","text":"<p>There are two different scopes in which you can define a RoleBinding, depending on the role scope.</p> <ul> <li>for GlobalRole, use GlobalRoleBinding</li> <li>for Role, use RoleBinding</li> </ul>"},{"location":"perses/docs/api/rolebinding/#project-level","title":"Project level","text":"<p>In case you would like to set a role binding for a Role, you will need to create a <code>RoleBinding</code>.</p> <pre><code>kind: \"RoleBinding\"\nmetadata:\n  name: &lt;string&gt;\n  project: &lt;string&gt;\nspec: &lt;RoleBinding specification&gt;\n</code></pre>"},{"location":"perses/docs/api/rolebinding/#global-level","title":"Global level","text":"<p>In case you would like to set a role binding for a GlobalRole , you will need to create a <code>GlobalRoleBinding</code>.</p> <pre><code>kind: \"GlobalRoleBinding\"\nmetadata:\n  name: &lt;string&gt;\nspec: &lt;RoleBinding specification&gt;\n</code></pre>"},{"location":"perses/docs/api/rolebinding/#rolebinding-specification","title":"RoleBinding specification","text":"<pre><code># Name of the Role or GlobalRole concerned by the role binding (metadata.name)\nrole: &lt;string&gt;\n# Subjects that will inherit permissions from the role\nsubjects: \n  - &lt;Subject specification&gt;\n</code></pre>"},{"location":"perses/docs/api/rolebinding/#subject-specification","title":"Subject specification","text":"<pre><code># The type of the subject. For example: `User`\nkind: &lt;string&gt;\n\n# The name of the subject (metadata.name)\nname: &lt;string&gt;\n</code></pre>"},{"location":"perses/docs/api/rolebinding/#more-info-about-authorization","title":"More info about authorization","text":"<p>Please look at the documentation to know more about permissions and role bindings.</p>"},{"location":"perses/docs/api/rolebinding/#api-definition","title":"API definition","text":""},{"location":"perses/docs/api/rolebinding/#rolebinding","title":"<code>RoleBinding</code>","text":""},{"location":"perses/docs/api/rolebinding/#get-a-list-of-rolebinding","title":"Get a list of <code>RoleBinding</code>","text":"<pre><code>GET /api/v1/projects/&lt;project_name&gt;/rolebindings\n</code></pre> <p>URL query parameters:</p> <ul> <li>name = <code>&lt;string&gt;</code> : should be used to filter the list of RoleBindings based on the prefix name.</li> </ul> <p>Example:</p> <p>The following query should return an empty list or a list containing roleBindings.</p> <pre><code>GET /api/v1/projects/&lt;project_name&gt;/rolebindings?name=ownerRB\n</code></pre>"},{"location":"perses/docs/api/rolebinding/#get-a-single-rolebinding","title":"Get a single <code>RoleBinding</code>","text":"<pre><code>GET /api/v1/projects/&lt;project_name&gt;/rolebindings/&lt;rolebinding_name&gt;\n</code></pre>"},{"location":"perses/docs/api/rolebinding/#create-a-single-rolebinding","title":"Create a single <code>RoleBinding</code>","text":"<pre><code>POST /api/v1/projects/&lt;project_name&gt;/rolebindings\n</code></pre>"},{"location":"perses/docs/api/rolebinding/#update-a-single-rolebinding","title":"Update a single <code>RoleBinding</code>","text":"<pre><code>PUT /api/v1/projects/&lt;project_name&gt;/rolebindings/&lt;rolebinding_name&gt;\n</code></pre>"},{"location":"perses/docs/api/rolebinding/#delete-a-single-rolebinding","title":"Delete a single <code>RoleBinding</code>","text":"<pre><code>DELETE /api/v1/projects/&lt;project_name&gt;/rolebindings/&lt;rolebinding_name&gt;\n</code></pre>"},{"location":"perses/docs/api/rolebinding/#globalrolebinding","title":"<code>GlobalRoleBinding</code>","text":""},{"location":"perses/docs/api/rolebinding/#get-a-list-of-globalrolebinding","title":"Get a list of <code>GlobalRoleBinding</code>","text":"<pre><code>GET /api/v1/globalrolebindings\n</code></pre> <p>URL query parameters:</p> <ul> <li>name = <code>&lt;string&gt;</code> : should be used to filter the list of RoleBinding based on the prefix name.</li> </ul> <p>Example:</p> <p>The following query should return an empty list or a list containing global rolebindings.</p> <pre><code>GET /api/v1/globalRoleBindings?name=adminRB\n</code></pre>"},{"location":"perses/docs/api/rolebinding/#get-a-single-globalrolebinding","title":"Get a single <code>GlobalRoleBinding</code>","text":"<pre><code>GET /api/v1/globalrolebindings/&lt;name&gt;\n</code></pre>"},{"location":"perses/docs/api/rolebinding/#create-a-single-globalrolebinding","title":"Create a single <code>GlobalRoleBinding</code>","text":"<pre><code>POST /api/v1/globalrolebindings\n</code></pre>"},{"location":"perses/docs/api/rolebinding/#update-a-single-globalrolebinding","title":"Update a single <code>GlobalRoleBinding</code>","text":"<pre><code>PUT /api/v1/globalrolebindings/&lt;name&gt;\n</code></pre>"},{"location":"perses/docs/api/rolebinding/#delete-a-single-globalrolebinding","title":"Delete a single <code>GlobalRoleBinding</code>","text":"<pre><code>DELETE /api/v1/globalrolebindings/&lt;name&gt;\n</code></pre>"},{"location":"perses/docs/api/secret/","title":"Secret","text":"<p>When defining a datasource, you will probably need to provide a basic authentication, a certificate, or a token to be used when the Perses backend will contact your Datasource.</p> <p>We have two different objects to store sensitive data: <code>GlobalSecret</code> and <code>Secret</code>. You should use one or the other depending on which object your datasource corresponds to.</p> <ul> <li>To store sensitive data for a <code>GlobalDatasource</code>, you need to create a <code>GlobalSecret</code>.</li> <li>For a <code>Datasource</code> object or a datasource defined directly in a dashboard, you need to create a <code>Secret</code>. <code>GlobalSecret</code> cannot be used here.</li> </ul> <p>A <code>Secret</code> is defined like that:</p> <pre><code>kind: \"Secret\"\nmetadata:\n  project: &lt;string&gt;\n  name: &lt;string&gt;\nspec: &lt;secret_specification&gt;\n</code></pre> <p>And a <code>GlobalSecret</code>:</p> <pre><code>kind: \"GlobalSecret\"\nmetadata:\n  name: &lt;string&gt;\nspec: &lt;secret_specification&gt;\n</code></pre> <p>See the next section to get details about the <code>&lt;secret_specification&gt;</code></p>"},{"location":"perses/docs/api/secret/#secret-specification","title":"Secret specification","text":"<pre><code>basicAuth: &lt;Basic Auth specification&gt; # Optional\n\n# The HTTP authorization credentials for the targets.\n# Basic Auth and authorization are mutually exclusive. Use one or the other not both at the same time.\nauthorization: &lt;Authorization specification&gt; # Optional\n\n# Config used to connect to the targets.\ntlsConfig: &lt;TLS Config specification&gt; # Optional\n</code></pre>"},{"location":"perses/docs/api/secret/#basic-auth-specification","title":"Basic Auth specification","text":"<pre><code>username: &lt;string&gt;\npassword: &lt;string&gt; # Optional\npasswordFile: &lt;filename&gt; # Optional\n</code></pre>"},{"location":"perses/docs/api/secret/#authorization-specification","title":"Authorization specification","text":"<pre><code>type: &lt;string&gt; | default = \"Bearer\" # Optional\n\n# The HTTP credentials like a Bearer token\ncredentials: &lt;string&gt; # Optional\ncredentialsFile: &lt;filename&gt; # Optional\n</code></pre>"},{"location":"perses/docs/api/secret/#tls-config-specification","title":"TLS Config specification","text":"<pre><code># CA certificate to validate API server certificate with. At most one of ca and ca_file is allowed.\nca: &lt;secret&gt; # Optional\ncaFile: &lt;filename&gt; # Optional\n\n# Certificate and key for client cert authentication to the server.\n# At most one of cert and cert_file is allowed.\n# At most one of key and key_file is allowed.\ncert: &lt;secret&gt; # Optional\ncertFile: &lt;filename&gt; # Optional\nkey: &lt;secret&gt; # Optional\nkeyFile: &lt;filename&gt; # Optional\n\n# ServerName extension to indicate the name of the server.\n# https://tools.ietf.org/html/rfc4366#section-3.1\nserverName: &lt;string&gt; # Optional\n\n# Disable validation of the server certificate.\ninsecureSkipVerify: &lt;boolean&gt; | default = false # Optional\n</code></pre>"},{"location":"perses/docs/api/secret/#example","title":"Example","text":"<pre><code>kind: \"Secret\"\nmetadata:\n  project: &lt;string&gt;\n  name: &lt;string&gt;\nspec:\n  authorization:\n    type: \"Bearer\"\n    credentials: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c\"\n  tlsConfig:\n    insecureSkipVerify: false\n</code></pre>"},{"location":"perses/docs/api/secret/#api-definition","title":"API definition","text":""},{"location":"perses/docs/api/secret/#secret_1","title":"<code>Secret</code>","text":""},{"location":"perses/docs/api/secret/#get-a-list-of-secret","title":"Get a list of <code>Secret</code>","text":"<pre><code>GET /api/v1/projects/&lt;project_name&gt;/secrets\n</code></pre> <p>URL query parameters:</p> <ul> <li>name = <code>&lt;string&gt;</code> : filters the list of secrets based on their names (prefix).</li> </ul>"},{"location":"perses/docs/api/secret/#get-a-single-secret","title":"Get a single <code>Secret</code>","text":"<pre><code>GET /api/v1/projects/&lt;project_name&gt;/secrets/&lt;secret_name&gt;\n</code></pre>"},{"location":"perses/docs/api/secret/#create-a-single-secret","title":"Create a single <code>Secret</code>","text":"<pre><code>POST /api/v1/projects/&lt;project_name&gt;/secrets\n</code></pre>"},{"location":"perses/docs/api/secret/#update-a-single-secret","title":"Update a single <code>Secret</code>","text":"<pre><code>PUT /api/v1/projects/&lt;project_name&gt;/secrets/&lt;secret_name&gt;\n</code></pre>"},{"location":"perses/docs/api/secret/#delete-a-single-secret","title":"Delete a single <code>Secret</code>","text":"<pre><code>DELETE /api/v1/projects/&lt;project_name&gt;/secrets/&lt;secret_name&gt;\n</code></pre>"},{"location":"perses/docs/api/secret/#global-secret","title":"Global <code>Secret</code>","text":""},{"location":"perses/docs/api/secret/#get-a-list-of-global-secret","title":"Get a list of global <code>Secret</code>","text":"<pre><code>GET /api/v1/globalsecrets\n</code></pre> <p>URL query parameters:</p> <ul> <li>name = <code>&lt;string&gt;</code> : filters the list of global secrets based on their names (prefix).</li> </ul>"},{"location":"perses/docs/api/secret/#get-a-single-global-secret","title":"Get a single global <code>Secret</code>","text":"<pre><code>GET /api/v1/globalsecrets/&lt;name&gt;\n</code></pre>"},{"location":"perses/docs/api/secret/#create-a-single-global-secret","title":"Create a single global <code>Secret</code>","text":"<pre><code>POST /api/v1/globalsecrets\n</code></pre>"},{"location":"perses/docs/api/secret/#update-a-single-global-secret","title":"Update a single global <code>Secret</code>","text":"<pre><code>PUT /api/v1/globalsecrets/&lt;name&gt;\n</code></pre>"},{"location":"perses/docs/api/secret/#delete-a-single-global-secret","title":"Delete a single global <code>Secret</code>","text":"<pre><code>DELETE /api/v1/globalsecrets/&lt;name&gt;\n</code></pre>"},{"location":"perses/docs/api/user/","title":"User","text":"<p>For the moment, user is a way to create an account and then get a write access to a project you created.</p>"},{"location":"perses/docs/api/user/#user-specification","title":"User Specification","text":"<pre><code>kind: \"User\"\nmetadata:\n  # User name for login\n  name: &lt;string&gt;\nspec:\n  firstName: &lt;string&gt; # Optional\n  lastName: &lt;string&gt; # Optional\n\n  nativeProvider: &lt;Native Provider specification&gt; # Optional\n\n  # Save the context of the oauth provider used if the user has been created from an external OIDC or OAuth\n  # authentication provider.\n  oauthProviders:  \n  - &lt;OAuth Provider specification&gt; # Optional\n</code></pre>"},{"location":"perses/docs/api/user/#native-provider-specification","title":"Native Provider specification","text":"<pre><code># Password when provided is hashed and salted before going to the database\n# Password is optional because depending on the Perses configuration, you might be able to login with external\n# authentication provider or not be able to create a user at all.\n# It can happen when the Perses server relies on a ldap database for authentication.\npassword: &lt;string&gt; # Optional\n</code></pre>"},{"location":"perses/docs/api/user/#oauth-provider-specification","title":"OAuth Provider specification","text":"<pre><code># Identifying the provider\nissuer: &lt;string&gt;\n\n# Email of the user in the provider\nemail: &lt;string&gt;\n\n# Identifying the user in the provider\nsubject: &lt;string&gt;\n</code></pre>"},{"location":"perses/docs/api/user/#api-definition","title":"API definition","text":""},{"location":"perses/docs/api/user/#get-a-list-of-user","title":"Get a list of <code>User</code>","text":"<pre><code>GET /api/v1/users\n</code></pre> <p>URL query parameters:</p> <ul> <li>name = <code>&lt;string&gt;</code> : filters the list of users based on their login name (prefix).</li> </ul>"},{"location":"perses/docs/api/user/#get-a-single-user","title":"Get a single <code>User</code>","text":"<pre><code>GET /api/v1/users/&lt;name&gt;\n</code></pre>"},{"location":"perses/docs/api/user/#create-a-single-user","title":"Create a single <code>User</code>","text":"<pre><code>POST /api/v1/users\n</code></pre>"},{"location":"perses/docs/api/user/#update-a-single-user","title":"Update a single <code>User</code>","text":"<pre><code>PUT /api/v1/users/&lt;name&gt;\n</code></pre>"},{"location":"perses/docs/api/user/#delete-a-single-user","title":"Delete a single <code>User</code>","text":"<pre><code>DELETE /api/v1/users/&lt;name&gt;\n</code></pre>"},{"location":"perses/docs/api/variable/","title":"Variable","text":""},{"location":"perses/docs/api/variable/#choose-a-scope","title":"Choose a scope","text":"<p>There are different scopes in which you can define a variable, depending on how much you want it to be shared. More about scopes here.</p>"},{"location":"perses/docs/api/variable/#dashboard","title":"Dashboard","text":"<p>That's the usual level to define a variable.</p> <pre><code>interface DashboardSpec {\n  // ... existing dashboard spec ...\n  variables: VariableSpec[];\n}\n</code></pre>"},{"location":"perses/docs/api/variable/#project","title":"Project","text":"<p>In case you would like to share a variable across different dashboards in the same project, you will need to create a <code>Variable</code>.</p> <pre><code>kind: \"Variable\"\nmetadata:\n  name: &lt;string&gt;\n  project: &lt;string&gt;\nspec: &lt;Variable specification&gt;\n</code></pre>"},{"location":"perses/docs/api/variable/#global","title":"Global","text":"<p>When we talk about scope and user permission in a REST API, the easiest way is to associate one permission per endpoint. If we want to provide a variable shared by all projects, then it makes sense to have a different object that is living outside a project.</p> <p>That\u2019s why we have another resource called <code>GlobalVariable</code></p> <pre><code>kind: \"GlobalVariable\"\nmetadata:\n  name: &lt;string&gt;\nspec: &lt;Variable specification&gt;\n</code></pre>"},{"location":"perses/docs/api/variable/#variable-specification","title":"Variable specification","text":"<p>We are supporting two different types of variables: <code>TextVariable</code> and <code>ListVariable</code>.</p>"},{"location":"perses/docs/api/variable/#textvariable","title":"TextVariable","text":"<pre><code>kind: \"TextVariable\"\nspec: &lt;Text Variable specification&gt;\n</code></pre>"},{"location":"perses/docs/api/variable/#text-variable-specification","title":"Text Variable specification","text":"<pre><code># It is a mandatory attribute when you are defining a variable directly in a dashboard.\n# If you are creating a GlobalVariable or a Variable, you don't have to use this attribute as it is replaced by metadata.name.\n# This is the unique name of the variable that can be used in another variable or in the different dashboard to use\nname: &lt;string&gt; # Optional\n\ndisplay: &lt;Display specification&gt; # Optional\nvalue: &lt;string&gt;\nconstant: &lt;boolean&gt; | default = false # Optional\n</code></pre>"},{"location":"perses/docs/api/variable/#example","title":"Example","text":"<pre><code>kind: \"Variable\"  # Alternatively, \"GlobalVariable\"\nmetadata:\n  name: \"text\"\n  project: \"perses\"\nspec:\n  kind: \"TextVariable\"\n  spec:\n    value: \"my text\"\n</code></pre> <p>Or in case you are defining the variable in a dashboard</p> <pre><code>variables:\n  - kind: \"TextVariable\"\n    spec:\n      name: \"text\"\n      value: \"my text\"\n</code></pre>"},{"location":"perses/docs/api/variable/#listvariable","title":"ListVariable","text":"<pre><code>kind: \"ListVariable\"\nspec: &lt;List Variable specification&gt;\n</code></pre>"},{"location":"perses/docs/api/variable/#list-variable-specification","title":"List Variable specification","text":"<pre><code># It is a mandatory attribute when you are defining a variable directly in a dashboard.\n# If you are creating a GlobalVariable or a Variable, you don't have to use this attribute as it is replaced by metadata.name.\n# This is the unique name of the variable that can be used in another variable or in the different dashboard to use\nname: &lt;string&gt;\n\ndisplay: &lt;Display specification&gt; # Optional\n\n# It's a value from the list to be selected by default\n# It can be a single value or a list.\ndefaultValue: &lt;string&gt; | &lt;array of string&gt; # Optional\n\n# Whether to append the \"All\" value that allows selecting all available values at once.\nallowAllValue: &lt;boolean&gt; | default = false # Optional\n\n# Whether to allow multi-selection of values.\nallMultiple: &lt;boolean&gt; | default = false # Optional\n\n# It is a custom value that will be used if allowAllValue is true and if then `all` is selected\ncustomAllValue: &lt;string&gt; # Optional\n\n# CapturingRegexp is the regexp used to catch and filter the result of the query.\n# If empty, then nothing is filtered. This is the equivalent of setting capturingRegexp with (.*)\ncapturingRegexp: &lt;string&gt; # Optional\n\n# The method to apply when rendering the list of values\nsort: &lt;enum = \"none\" | \"alphabetical-asc\" | \"alphabetical-desc\" | \"numerical-asc\" | \"numerical-desc\" | \"alphabetical-ci-asc\" | \"alphabetical-ci-desc\"&gt; | default = \"none\" # Optional\n\n# The definition of the plugin variable\nplugin: &lt;Plugin specification&gt;\n</code></pre>"},{"location":"perses/docs/api/variable/#display-specification","title":"Display specification","text":"<pre><code># The new name of the variable. If set, it will replace `metadata.name` in the variable title in the UI.\n# Note that it cannot be used when you are querying the API. Only `metadata.name` can be used to reference the variable.\n# This is just for display purpose.\nname: &lt;string&gt; # Optional\n\n# The description of the variable\ndescription: &lt;string&gt; # Optional\n\n# If true, the variable won't be displayed above the dashboard.\nhidden: &lt;boolean&gt; | default = false # Optional\n</code></pre>"},{"location":"perses/docs/api/variable/#plugin-definition","title":"Plugin definition","text":"<pre><code># The type of the variable. For example, `PrometheusPromQLVariable`\nkind: &lt;string&gt;\n\n# The actual definition of the variable. It will depend on the type defined in the previous field `kind`\nspec: &lt;Plugin specification&gt;\n</code></pre> <p>We are supporting only prometheus for the variables for the moment. Please take a look at the documentation to know the spec for the Prometheus variable.</p>"},{"location":"perses/docs/api/variable/#api-definition","title":"API Definition","text":""},{"location":"perses/docs/api/variable/#variable_1","title":"<code>Variable</code>","text":""},{"location":"perses/docs/api/variable/#get-a-list-of-variable","title":"Get a list of <code>Variable</code>","text":"<pre><code>GET /api/v1/projects/&lt;project_name&gt;/variables\n</code></pre> <p>URL query parameters:</p> <ul> <li>name = <code>&lt;string&gt;</code> : filters the list of variables based on their name (prefix match).</li> </ul>"},{"location":"perses/docs/api/variable/#get-a-single-variable","title":"Get a single <code>Variable</code>","text":"<pre><code>GET /api/v1/projects/&lt;project_name&gt;/variables/&lt;variable_name&gt;\n</code></pre>"},{"location":"perses/docs/api/variable/#create-a-single-variable","title":"Create a single <code>Variable</code>","text":"<pre><code>POST /api/v1/projects/&lt;project_name&gt;/variables\n</code></pre>"},{"location":"perses/docs/api/variable/#update-a-single-variable","title":"Update a single <code>Variable</code>","text":"<pre><code>PUT /api/v1/projects/&lt;project_name&gt;/variables/&lt;variable_name&gt;\n</code></pre>"},{"location":"perses/docs/api/variable/#delete-a-single-variable","title":"Delete a single <code>Variable</code>","text":"<pre><code>DELETE /api/v1/projects/&lt;project_name&gt;/variables/&lt;variable_name&gt;\n</code></pre>"},{"location":"perses/docs/api/variable/#globalvariable","title":"<code>GlobalVariable</code>","text":""},{"location":"perses/docs/api/variable/#get-a-list-of-globalvariable","title":"Get a list of <code>GlobalVariable</code>","text":"<pre><code>GET /api/v1/globalvariables\n</code></pre> <p>URL query parameters:</p> <ul> <li>name = <code>&lt;string&gt;</code> : filters the list of variables based on their name (prefix match).</li> </ul>"},{"location":"perses/docs/api/variable/#get-a-single-globalvariable","title":"Get a single <code>GlobalVariable</code>","text":"<pre><code>GET /api/v1/globalvariables/&lt;name&gt;\n</code></pre>"},{"location":"perses/docs/api/variable/#create-a-single-globalvariable","title":"Create a single <code>GlobalVariable</code>","text":"<pre><code>POST /api/v1/globalvariables\n</code></pre>"},{"location":"perses/docs/api/variable/#update-a-single-globalvariable","title":"Update a single <code>GlobalVariable</code>","text":"<pre><code>PUT /api/v1/globalvariables/&lt;name&gt;\n</code></pre>"},{"location":"perses/docs/api/variable/#delete-a-single-globalvariable","title":"Delete a single <code>GlobalVariable</code>","text":"<pre><code>DELETE /api/v1/globalvariables/&lt;name&gt;\n</code></pre>"},{"location":"perses/docs/auth/authentication/","title":"Authentication","text":"<p>Perses has various authentication flows configurable. You can choose to authenticate from a native provider that will allow you to create some users, or else rely on an external identity provider.</p> <p>In both cases:</p> <ul> <li>Each new user will be saved in the Perses database.</li> <li>At login time, a Perses session (access_token/refresh_token) will be created</li> </ul> <p>Please note that the number of identity providers is not limited.</p> <pre><code>authentication:\n  providers:\n    # Enable or not the native Perses identity provider\n    enable_native: true/false\n    # Register one or several OIDC provider(s)\n    oidc: []\n    # Register one or several OAuth provider(s)\n    oauth: []\n</code></pre>"},{"location":"perses/docs/auth/authentication/#native-provider","title":"Native provider","text":"<p>In case a native provider is used, the users and their password are stored in the Perses database.</p> <p>Login is done through http POST on /api/auth/providers/native/login.</p>"},{"location":"perses/docs/auth/authentication/#external-oidcoauth-providers","title":"External OIDC/OAuth provider(s)","text":"<p>It is possible to configure Perses to sign in user with an external identity provider supporting OIDC/Oauth. For both of these provider's types, the flow is quite similar:</p> <p>When a user sign in with an external provider (e.g. Github) the Perses backend will then use the information collected (email, firstname, lastname, picture) to sync the user in database. Then the backend takes in charge the creation of the access_token/refresh_token that will be used to authenticate this user in the subsequent requests.</p> <p>The user synchronization can possibly be used to update also its permissions, based on some roles/groups present in the external idp's token.</p> <p>At the time we write this documentation, there is nothing implemented yet. User have to login first and ask specific permissions to an admin.</p>"},{"location":"perses/docs/auth/authentication/#configuration-example","title":"=&gt; Configuration example","text":"<pre><code>authentication:\n  providers:\n    oidc:\n    # Example with an Azure AD OIDC configuration\n    - slug_id: azure\n      name: \"Azure AD\"\n      client_id: \"&lt;secret&gt;\"\n      client_secret: \"&lt;secret&gt;\"\n      issuer: \"https://login.microsoftonline.com/&lt;tenant-id&gt;/v2.0\"\n      redirect_uri: \"http://localhost:3000/api/auth/providers/oidc-azure/callback\"\n      scopes: [\"openid\", \"profile\", \"email\", \"User.read\"]\n    oauth:\n    - slug_id: github\n      name: \"Github\"\n      client_id: \"&lt;secret&gt;\"\n      client_secret: \"&lt;secret&gt;\"\n      auth_url: \"https://github.com/login/oauth/authorize\"\n      token_url: \"https://github.com/login/oauth/access_token\"\n      logout_url: \"https://github.com/login/oauth/logout\"\n      redirect_uri: \"http://localhost:3000/api/auth/providers/oauth-github/callback\"\n      user_infos_url: \"https://api.github.com/user\"\n</code></pre>"},{"location":"perses/docs/auth/authentication/#login-from-external-oidc-or-oauth20-provider-with-interactive-flow-through-web-ui-authorization_code","title":"=&gt; Login from external OIDC or OAuth2.0 provider with interactive flow, through WEB UI. (<code>authorization_code</code>)","text":"<pre><code>sequenceDiagram\n    actor hu as John\n    #actor ro as Robot\n    participant br as Perses Frontend\n    participant rp as Perses Backend\n    participant op as External Identity Provider\n\n    hu-&gt;&gt;br: Login with OIDC provider (e.g Azure AD)\n    activate br\n    br-&gt;&gt;rp: GET /api/auth/providers/{oidc|oauth}/{slug_id}/login\n    activate rp\n    rp-&gt;&gt;br: 302: redirect to Provider\n    deactivate rp\n    br-&gt;&gt;op: /oauth/authorize\n    activate op\n    op-&gt;&gt;br: 302: redirect to Perses\n    deactivate op\n    br-&gt;&gt;rp: GET /api/auth/providers/{oidc|oauth}/{slug_id}/callback?code=...\n    activate rp\n    alt OIDC\n        rp-&gt;&gt;op: GET /oauth/token\n        activate op\n        op-&gt;&gt;rp: 200: id_token &amp; access_token\n        deactivate op\n        rp-&gt;&gt;op: GET /api/userinfo&lt;br/&gt; (endpoint from .well-known URL)\n        activate op\n        op-&gt;&gt;rp: 200: User Info\n        deactivate op\n        Note right of rp: User Info + id token are&lt;br/&gt; used to sync user in database\n        rp-&gt;&gt;rp: Create or Update user in DB\n    else OAUTH 2.0\n        rp-&gt;&gt;op: GET /oauth/token\n        activate op\n        op-&gt;&gt;rp: 200: access_token\n        deactivate op\n        rp-&gt;&gt;op: GET /api/userinfo&lt;br/&gt; (endpoint from Perses Config)\n        activate op\n        op-&gt;&gt;rp: 200: User Info\n        deactivate op\n        Note right of rp: Only User Info is&lt;br/&gt; used to sync user in database\n        rp-&gt;&gt;rp: Create or Update user in DB\n    end\n    Note right of rp: A new session is created&lt;br /&gt; with a new signed access_token+refresh_token\n    rp-&gt;&gt;br: 200: save session in cookie\n    deactivate rp\n    br-&gt;&gt;hu: Home Page\n    deactivate br\n    hu-&gt;&gt;br: Click on Projects\n    activate br\n    br-&gt;&gt;rp: GET /api/v1/projects\n    activate rp\n    rp-&gt;&gt;rp: Verify token and permissions\n    rp-&gt;&gt;br: 200: projects list\n    deactivate rp\n    br-&gt;&gt;hu: Projects Page\n    deactivate br</code></pre>"},{"location":"perses/docs/auth/authentication/#login-from-external-oidc-or-oauth20-provider-with-interactive-flow-through-percli-command-line-device_code","title":"=&gt; Login from external OIDC or OAuth2.0 provider with interactive flow, through <code>percli</code> command line. (<code>device_code</code>)","text":"<pre><code>sequenceDiagram\n    actor hu as John\n    #actor ro as Robot\n    participant pc as percli Command Line\n    participant rp as Perses Backend\n    participant op as External Identity Provider\n\n    hu-&gt;&gt;pc: EXEC: percli login\n    activate pc\n    pc-&gt;&gt;rp: GET /api/config\n    activate rp\n    rp-&gt;&gt;pc: 200: Config&lt;br/&gt; (containing Providers List)\n    deactivate rp\n    pc-&gt;&gt;hu: PROMPT: which provider?\n    deactivate pc\n    hu-&gt;&gt;pc: select provider\n    activate pc\n    pc-&gt;&gt;rp: GET /api/auth/providers/{oidc|oauth}/{slug_id}/device/code\n    activate rp\n    rp-&gt;&gt;op: GET /oauth/device/code\n    activate op\n    op-&gt;&gt;rp: 200: Device Code + User Code + Verification URL\n    deactivate op\n    rp-&gt;&gt;pc: 200: Device Code + User Code + Verification URL\n    pc-&gt;&gt;hu: PRINT: User Code + Verification URL (clickable)\n    rect rgba(66, 95, 237, 0.2)\n        Note over hu, op: Through the browser\n        hu-&gt;&gt;op: Go to Verification URL + enter User Code\n        activate op\n        op-&gt;&gt;hu: 302: Redirect to Authorization prompt\n        hu-&gt;&gt;op: Consent\n        op-&gt;&gt;op: Mark device as authorized\n        op-&gt;&gt;hu: 200: Invite to close browser\n        deactivate op\n    end\n    Note over hu, op: Meanwhile, percli is polling the following endpoint, until it succeed.\n    pc-&gt;&gt;rp: GET /api/auth/providers/{oidc|oauth}/{slug_id}/token\n    activate rp\n    alt OIDC\n        rp-&gt;&gt;op: GET /oauth/token\n        activate op\n        op-&gt;&gt;rp: 200: id_token &amp; access_token\n        deactivate op\n        rp-&gt;&gt;op: GET /api/userinfo&lt;br/&gt; (endpoint from .well-known URL)\n        activate op\n        op-&gt;&gt;rp: 200: User Info\n        deactivate op\n        Note right of rp: User Info + id token are&lt;br/&gt; used to sync user in database\n        rp-&gt;&gt;rp: Create or Update user in DB\n    else OAUTH 2.0\n        rp-&gt;&gt;op: GET /oauth/token\n        activate op\n        op-&gt;&gt;rp: 200: access_token\n        deactivate op\n        rp-&gt;&gt;op: GET /api/userinfo&lt;br/&gt; (endpoint from Perses Config)\n        activate op\n        op-&gt;&gt;rp: 200: User Info\n        deactivate op\n        Note right of rp: Only User Info is&lt;br/&gt; used to sync user in database\n        rp-&gt;&gt;rp: Create or Update user in DB\n    end\n    Note right of rp: A new session is created&lt;br /&gt; with a new signed acces_token+refresh_token\n    rp-&gt;&gt;pc: 200: access_token + refresh_token\n    deactivate rp\n    pc-&gt;&gt;pc: WRITE: session into config file\n    pc-&gt;&gt;hu: PRINT: Successfully authenticated!\n    deactivate pc\n    hu-&gt;&gt;pc: EXEC: percli get projects\n    activate pc\n    pc-&gt;&gt;rp: GET /api/v1/projects\n    activate rp\n    rp-&gt;&gt;rp: Verify token and permissions\n    rp-&gt;&gt;pc: 200: Projects list\n    deactivate rp\n    pc-&gt;&gt;hu: PRINT: Projects list\n    deactivate pc</code></pre>"},{"location":"perses/docs/auth/authentication/#login-from-external-oidc-or-oauth20-provider-with-non-interactive-flow-client_credentials","title":"=&gt; Login from external OIDC or OAuth2.0 provider with non-interactive flow. (<code>client_credentials</code>)","text":"<p>Note: it can be done exactly the same way using directly the backend API. Then one would have to manage the access_token and refresh_token by itself, and send access_token as an Authorization header in the subsequent requests.</p> <pre><code>sequenceDiagram\n    participant ro as Robot\n    #actor ro as Robot\n    participant pc as percli Command Line\n    participant rp as Perses Backend\n    participant op as External Identity Provider\n\n    ro-&gt;&gt;pc: EXEC: percli login --provider &lt;slug_id&gt; --client-id &lt;client_id&gt; --client-secret &lt;client_secret&gt;\n    activate pc\n    pc-&gt;&gt;rp: GET /api/config\n    activate rp\n    rp-&gt;&gt;pc: 200: Config&lt;br/&gt; (containing Providers List)\n    deactivate rp\n    pc-&gt;&gt;rp: GET /api/auth/providers/{oidc|oauth}/{slug_id}/token\n    activate rp\n    rp-&gt;&gt;op: GET /oauth/token\n    activate op\n    op-&gt;&gt;rp: 200: access_token\n    deactivate op\n    rp-&gt;&gt;op: GET /api/userinfo&lt;br/&gt; (endpoint from Perses Config or .well-known URL)\n    activate op\n    op-&gt;&gt;rp: 200: User Info\n    deactivate op\n    Note right of rp: Only User Info is&lt;br/&gt; used to sync user in database\n    rp-&gt;&gt;rp: Create or Update user in DB\n    Note right of rp: A new session is created&lt;br /&gt; with a new signed acces_token+refresh_token\n    rp-&gt;&gt;pc: 200: access_token + refresh_token\n    deactivate rp\n    pc-&gt;&gt;pc: WRITE: session into config file\n    pc-&gt;&gt;ro: PRINT: Successfully authenticated!\n    deactivate pc\n    ro-&gt;&gt;pc: EXEC: percli get projects\n    activate pc\n    pc-&gt;&gt;rp: GET /api/v1/projects\n    activate rp\n    rp-&gt;&gt;rp: Verify token and permissions\n    rp-&gt;&gt;pc: 200: Projects list\n    deactivate rp\n    pc-&gt;&gt;ro: PRINT: Projects list\n    deactivate pc</code></pre>"},{"location":"perses/docs/auth/authorization/","title":"Authorization","text":"<p>Perses uses a Role-based access control (RBAC) system to regulate access to resources based on user roles. The RBAC API includes four kinds of resources: <code>GlobalRole</code>, <code>Role</code>, <code>GlobalRoleBinding</code>, and <code>RoleBinding</code>. The RBAC implementation in Perses is heavily inspired by Kubernetes' RBAC model.</p>"},{"location":"perses/docs/auth/authorization/#role-and-globalrole","title":"Role and GlobalRole","text":"<p>An RBAC <code>Role</code> or <code>GlobalRole</code> defines a set of permissions (rules). Permissions are purely additive, meaning there are no \"deny\" permissions.</p> <ul> <li>A <code>Role</code> specifies permissions within a specific project. The project must be defined when the <code>Role</code> is created.</li> <li>A <code>GlobalRole</code> applies to resources globally and is not limited to a project scope.</li> </ul>"},{"location":"perses/docs/auth/authorization/#role-example","title":"Role Example","text":"<p>This example defines a <code>Role</code> in the \"MySuperProject\" project that grants edit access to dashboards:</p> <pre><code>kind: Role\nmetadata:\n  name: dashboard-editor\n  project: MySuperProject\nspec:\n  permissions:\n    - actions: [\"edit\"]\n      scopes: [\"Dashboard\"]\n</code></pre>"},{"location":"perses/docs/auth/authorization/#global-role-example","title":"Global Role example","text":"<p>A <code>GlobalRole</code> can grant access to both global resources (e.g., global datasources, global variables, users) and project-specific resources (like dashboards) across all projects.</p> <p>Here is an example of a GlobalRole that grants edit access to variables across all projects:</p> <pre><code>kind: GlobalRole\nmetadata:\n  name: variable-editor\nspec:\n  permissions:\n    - actions: [\"edit\"]\n      scopes: [\"Variable\"]\n</code></pre>"},{"location":"perses/docs/auth/authorization/#rolebinding-and-globalrolebinding","title":"RoleBinding and GlobalRoleBinding","text":"<p>A role binding grants the permissions defined in a role to a user or set of users. It holds a list of subjects (users or teams) and a reference to the role being granted. A <code>RoleBinding</code> grants permissions within a specific project whereas a <code>GlobalRoleBinding</code> grants that access global-wide.</p> <p>A <code>RoleBinding</code> may reference any <code>Role</code> in the same project. Similarly, a <code>GlobalRoleBinding</code> can reference any <code>GlobalRole</code>.</p>"},{"location":"perses/docs/auth/authorization/#rolebinding-example","title":"RoleBinding example","text":"<p>Here is an example of a <code>RoleBinding</code> that grants the \"dashboard-editor\" <code>Role</code> to the user \"jane\" within the \"MySuperProject\" project. This allows \"jane\" to edit dashboards in the \"MySuperProject\" project.</p> <pre><code>kind: RoleBinding\nmetadata:\n  name: edit-dashboards\n  project: MySuperProject\nspec:\n  role: dashboard-editor\n  subjects:\n    - kind: User\n      name: jane\n</code></pre>"},{"location":"perses/docs/auth/authorization/#globalrolebinding-example","title":"GlobalRoleBinding example","text":"<p>Here is an example of a <code>GlobalRoleBinding</code> that grants the \"variable-editor\" <code>GlobalRole</code> to the user \"jane\" within all projects. This allows \"jane\" to edit variables in all projects.</p> <pre><code>kind: GlobalRoleBinding\nmetadata:\n  name: edit-variables\nspec:\n  role: variable-editor\n  subjects:\n    - kind: User\n      name: jane\n</code></pre>"},{"location":"perses/docs/auth/authorization/#rolebinding-and-globalrolebinding-update-restriction","title":"RoleBinding and GlobalRoleBinding update restriction","text":"<p>After you create a binding, you cannot change the <code>Role</code> or <code>GlobalRole</code> that it refers to. If you try to change a binding's role, you get a validation error. If you do want to change the role for a binding, you need to remove the binding object and create a replacement.</p> <p>There are two reasons for this restriction:</p> <ul> <li>Making role immutable allows granting someone update permission on an existing binding object, so that they can manage the list of subjects, without being able to change the role that is granted to those subjects.</li> <li>A binding to a different role is a fundamentally different binding. Requiring a binding to be deleted/recreated in order to change the role reference ensures the full list of subjects in the binding is intended to be granted the new role (as opposed to enabling or accidentally modifying only the role reference without verifying all of the existing subjects should be given the new role's permissions).</li> </ul>"},{"location":"perses/docs/auth/authorization/#referring-to-resources","title":"Referring to resources","text":"<p>In Perses API, resources are identified and accessed using a string, corresponding to the name in the metadata. You can also refer to all resources using the wildcard <code>*</code> character. Here is an example for granting edit permissions to all resources in all projects:</p> <pre><code>kind: GlobalRole\nmetadata:\n  name: admin-editor\nspec:\n  permissions:\n    - actions: [\"edit\"]\n      scopes: [\"*\"]\n</code></pre>"},{"location":"perses/docs/auth/authorization/#rbac-synchro","title":"RBAC Synchro","text":"<p>Roles and RoleBindings of an user are stored in the user's JWT. If Perses is deployed with multiple instances, Perses RBAC roles and role bindings cache need to be synchronized/replicated between all instances. To do that there are multiple mechanisms:</p> <ul> <li>cache is refreshed every X minutes</li> <li>cache is refreshed if roles and role bindings retrieve from the user's JWT are different from the cache</li> <li>cache is refreshed when a new role is created, edited or deleted</li> <li>cache is refreshed when a new rolebinding is created, edited or deleted</li> </ul>"},{"location":"perses/docs/configuration/configuration/","title":"Configuration","text":"<p>Perses is configured via command-line flags and a configuration file</p>"},{"location":"perses/docs/configuration/configuration/#flags-available","title":"Flags available","text":"<pre><code>  -config string\n        Path to the yaml configuration file for the api. Configuration can be overridden when using the environment variable\n  -log.level string\n        log level. Possible value: panic, fatal, error, warning, info, debug, trace (default \"info\")\n  -log.method-trace\n        Include the calling method as a field in the log. Can be useful to see immediately where the log comes from\n  -pprof\n        Enable pprof\n  -web.hide-port\n        If true, it won t be print on stdout the port listened to receive the HTTP request\n  -web.listen-address string\n        The address to listen on for HTTP requests, web interface and telemetry. (default \":8080\")\n  -web.telemetry-path string\n        Path under which to expose metrics. (default \"/metrics\")\n</code></pre> <p>Example:</p> <pre><code>perses --config=./config.yaml --log.method-trace\n</code></pre>"},{"location":"perses/docs/configuration/configuration/#configuration-file","title":"Configuration File","text":"<p>This service can be configured using a yaml file or the environment variable.</p> <p>Note: you can use both, environment variable will override the yaml configuration.</p> <pre><code>database:\n  file: # the configuration when you want to use the filesystem as a database. Note that you can configure it using the flags, which gives you the choice to not create a configuration file just for that.\n    folder: \"/path/to/the/database/storage\" # It's the path where the file will be read/ stored\n    extension: \"yaml\" # The extension of the files read / stored. \"yaml\" or \"json\" are the only extension accepted. Yaml is the default one\n</code></pre> <p>Note: to have the corresponding environment variable you just have to contact all previous key in the yaml and put it in uppercase. Every environment variable for this config are prefixed by <code>PERSES</code></p> <p>For example, the environment variable corresponding to the file extension of the file DB would be:</p> <pre><code>PERSES_DATABASE_FILE_EXTENSION=yaml\n</code></pre>"},{"location":"perses/docs/configuration/configuration/#definition","title":"Definition","text":"<p>The file is written in YAML format, defined by the scheme described below. Brackets indicate that a parameter is optional.</p> <p>Generic placeholders are defined as follows:</p> <ul> <li><code>&lt;boolean&gt;</code>: a boolean that can take the values <code>true</code> or <code>false</code></li> <li><code>&lt;duration&gt;</code>: a duration matching the regular expression <code>((([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?|0)</code>, e.g. <code>1d</code>, <code>1h30m</code>, <code>5m</code>, <code>10s</code></li> <li><code>&lt;filename&gt;</code>: a valid path in the current working directory</li> <li><code>&lt;path&gt;</code>: a valid URL path</li> <li><code>&lt;int&gt;</code>: an integer value</li> <li><code>&lt;secret&gt;</code>: a regular string that is a secret, such as a password</li> <li><code>&lt;string&gt;</code>: a regular string</li> <li><code>&lt;kind&gt;</code>: a string that can take the values <code>Dashboard</code>, <code>Datasource</code>, <code>Folder</code>, <code>GlobalDatasource</code>, <code>GlobalRole</code>, <code>GlobalRoleBinding</code>, <code>GlobalVariable</code>, <code>GlobalSecret</code>, <code>Project</code>, <code>Role</code>, <code>RoleBinding</code>, <code>User</code> or <code>Variable</code> (not case-sensitive)</li> </ul> <pre><code># Use it in case you want to prefix the API path. By default the API is served with the path /api. \n# With this config, it will be served with the path &lt;api_prefix&gt;/api\napi_prefix: &lt;string&gt; # Optional\n\n# It contains any configuration that changes the API behavior like the endpoints exposed or if the permissions are activated.\nsecurity: &lt;Security config&gt; # Optional\n\n# Database configuration \ndatabase: &lt;Database config&gt; # Optional\n\n# The configuration to access the CUE schemas\nschemas: &lt;Schemas config&gt; # Optional\n\n# If provided, Perses server will look to the different folders configured and populate the database based on what it is found\n# Be careful: the data coming from the provisioning folder will totally override what exists in the database.\nprovisioning: &lt;Provisioning config&gt; # Optional\n\n# If provided, Perses server will generate a list of global datasource based on the discovery chosen.\n# Be careful: the data coming from the discovery will totally override what exists in the database.\n# Note that this is an experimental feature. Behavior and config may change in the future.\nglobal_datasource_discovery:\n  - &lt;GlobalDatasourceDiscovery config&gt; # Optional\n\n# The interval at which to trigger the cleanup of ephemeral dashboards, based on their TTLs.\n# This config is deprecated. Please use the config ephemeral_dashboard instead.\nephemeral_dashboards_cleanup_interval: &lt;duration&gt; # Optional\n\n# The config for the ephemeral dashboard feature. This is the way to activate the feature.\nephemeral_dashboard: &lt; EphemeralDashboard config &gt; # Optional\n\n# Any configuration related to the UI itself\nfrontend: &lt;Frontend config&gt; # Optional\n</code></pre>"},{"location":"perses/docs/configuration/configuration/#security-config","title":"Security config","text":"<pre><code># A flag that will disable any HTTP POST, PUT and DELETE endpoint in the API.\n# It will also change the UI to reflect this config, by removing any action button and will prevent the access to a form.\nreadonly: &lt;boolean&gt; | default = false # Optional\n\n# Cookie configuration\ncookie: &lt;Cookie config&gt; # Optional\n\n# It contains the config regarding the time to live of the refresh/access token.\nauthentication: &lt;Authentication config&gt; # Optional\n\n# It contains any configuration that changes authorization behavior like default permissions\nauthorization: &lt;Authorization config&gt; # Optional\n\n# When it is true, the authentication and authorization config are considered.\n# And you will need a valid JWT token to contact most of the endpoints exposed by the API\nenable_auth: &lt;boolean&gt; | default = false # Optional\n\n# The secret key used to encrypt and decrypt sensitive data stored in the database such as the password of the basic auth for a datasource.\n# Note that if it is not provided, it will use a default value.\n# On a production instance, you should set this key.\n# Also note the key size must be exactly 32 bytes long as we are using AES-256 to encrypt the data.\nencryption_key: &lt;secret&gt; # Optional\n\n# The path to the file containing the secret key.\nencryption_key_file: &lt;filename&gt; # Optional\n</code></pre>"},{"location":"perses/docs/configuration/configuration/#cookie-config","title":"Cookie config","text":"<pre><code># Set the same_site cookie attribute and prevents the browser from sending the cookie along with cross-site requests.\n# The main goal is to mitigate the risk of cross-origin information leakage.\n# This setting also provides some protection against cross-site request forgery attacks (CSRF)\nsame_site: &lt; enum | possibleValue = 'strict' | 'lax' | 'none' &gt; | default = lax # Optional\n\n# Set to true if you host Perses behind HTTPS. Default is false\nsecure: &lt;boolean&gt; | default = false # Optional\n</code></pre>"},{"location":"perses/docs/configuration/configuration/#authentication-config","title":"Authentication config","text":"<pre><code># It is the time to live of the access token. By default, it is 15 minutes.\naccess_token_ttl: &lt;duration&gt; | default = 15min # Optional\n\n# It is the time to live of the refresh token. The refresh token is used to get a new access token when it is expired.\n# By default, it is 24 hours.\nrefresh_token_ttl: &lt;duration&gt; | default = 24h # Optional\n\n# With this attribute, you can deactivate the Sign-up page which induces the deactivation of the endpoint that gives the possibility to create a user.\ndisable_sign_up: &lt;boolean&gt; | default = false # Optional\n\n# Authentication providers\nproviders: &lt;Authentication providers&gt; # Optional\n</code></pre>"},{"location":"perses/docs/configuration/configuration/#authentication-providers","title":"Authentication providers","text":"<p>Check the helpers to help you to configure the different providers.</p> <pre><code># Enable the native authentication providers\nenable_native: &lt;boolean&gt; | default = false # Optional\n\n# List of the OIDC authentication providers\noidc:\n  - &lt;OIDC provider&gt; # Optional\n# List of the OIDC authentication providers\noauth:\n  - &lt;OAuth provider&gt; # Optional\n</code></pre>"},{"location":"perses/docs/configuration/configuration/#oidc-provider","title":"OIDC provider","text":"<pre><code># The id of the provider that will be used in the URLs (must be unique for all providers)\nslug_id: &lt;string&gt;\n\n# A verbose name for the provider. Will be used to visually identify it in the frontend.\nname: &lt;string&gt;\n\n# The Client ID of the Perses application into the provider\nclient_id: &lt;secret&gt;\n\n# The Client Secret of the Perses application into the provider\nclient_secret: &lt;secret&gt;\n\ndevice_code:\n  # Allow to use a different Client ID for the device code flow\n  client_id: &lt;secret&gt; # Optional\n  # Allow to use a different Client Secret for the device code flow\n  client_secret: &lt;secret&gt; # Optional\n  # Allow using different Scopes for the device code flow\n  scopes:\n  - &lt;string&gt; # Optional\n\nclient_credentials:\n  # Allow using a different Client ID for the client credentials flow\n  client_id: &lt;secret&gt; # Optional\n  # Allow using a different Client Secret for the client credentials flow\n  client_secret: &lt;secret&gt; # Optional\n  # Allow using different Scopes for the client credentials flow\n  scopes:\n  - &lt;string&gt; # Optional\n\n# The callback URL for authorization code (Have to be &lt;your URL&gt; + /api/auth/providers/oidc/{slug}/callback)\n# If not set it will get it from the request.\nredirect_uri: &lt;string&gt; # Optional\n\n# The needed scopes to authenticate a user in the provider. It's not mandatory because it will depend on the provider\nscopes:\n  - &lt;string&gt; # Optional\n\n# Some configuration of the HTTP client used to make the requests to the provider\nhttp: &lt;Authentication provider HTTP Config&gt;\n\n# The provider issuer URL\nissuer: &lt;string&gt;\n\n# A custom discovery URL if different from {issuer}/.well-known/openid-configuration\ndiscovery_url: &lt;string&gt; # Optional\n\n# Disable PKCE verification\ndisable_pkce: &lt;boolean&gt; | default = false # Optional\n\n# The additional url params that will be appended to /authorize provider's endpoint\nurl_params:\n  &lt;string&gt;: &lt;string&gt; # Optional\n</code></pre>"},{"location":"perses/docs/configuration/configuration/#oauth-provider","title":"OAuth provider","text":"<pre><code># The id of the provider that will be used in the URLs (must be unique for all providers)\nslug_id: &lt;string&gt;\n\n# A verbose name for the provider. Will be used to visually identify it in the frontend.\nname: &lt;string&gt;\n\n# The Client ID of the Perses application into the provider\nclient_id: &lt;secret&gt;\n\n# The Client Secret of the Perses application into the provider\nclient_secret: &lt;secret&gt;\n\ndevice_code:\n  # Allow using a different Client ID for the device code flow\n  client_id: &lt;secret&gt; # Optional\n  # Allow using a different Client Secret for the device code flow\n  client_secret: &lt;secret&gt; # Optional\n  # Allow using different Scopes for the device code flow\n  scopes:\n    - &lt;string&gt; # Optional\n\nclient_credentials:\n  # Allow using a different Client ID for the client credentials flow\n  client_id: &lt;secret&gt; # Optional\n  # Allow using a different Client Secret for the client credentials flow\n  client_secret: &lt;secret&gt; # Optional\n  # Allow using different Scopes for the client credentials flow\n  scopes:\n    - &lt;string&gt; # Optional\n\n# The callback URL for authorization code (Have to be &lt;your URL&gt; + /api/auth/providers/oauth/{slug}/callback)\n# If not set it will get it from the request.\nredirect_uri: &lt;string&gt; # Optional\n\n# The needed scopes to authenticate a user in the provider\nscopes:\n  - &lt;string&gt; # Optional\n\n# Some configuration of the HTTP client used to make the requests to the provider\nhttp: &lt;Authentication provider HTTP Config&gt;\n\n# The provider Authorization URL\nauth_url: &lt;string&gt;\n\n# The provider Token URL\ntoken_url: &lt;string&gt;\n\n# The provider User Infos URL\nuser_infos_url: &lt;string&gt;\n\n# The provider Device Auth URL\n# If we want to use the device code flow, we need to provide this URL, otherwise an error will fire saying\n# it's not supported.\ndevice_auth_url: &lt;string&gt; # Optional\n\n# Name of the property to get \"login\" from user infos API (if not in the default list [\"login\", \"username\"] )\n# The login is mandatory to store in the database the name of the user.\ncustom_login_property: &lt;string&gt; # Optional\n</code></pre>"},{"location":"perses/docs/configuration/configuration/#authentication-provider-http-config","title":"Authentication provider HTTP Config","text":"<pre><code># Request timeout\ntimeout: &lt;duration&gt; | default = 1m # Optional\n\n# TLS configuration.\ntls_config: &lt;TLS config&gt; # Optional\n</code></pre>"},{"location":"perses/docs/configuration/configuration/#authorization-config","title":"Authorization config","text":"<pre><code># Time interval that check if the RBAC cache need to be refreshed with db content. Only for SQL database setup.\ncheck_latest_update_interval: &lt;duration&gt; | default = 30s&gt; # Optional\n\n# Default permissions for guest users (logged-in users)\nguest_permissions:\n  - &lt;Permissions&gt; # Optional\n</code></pre>"},{"location":"perses/docs/configuration/configuration/#permissions","title":"Permissions","text":"<pre><code># Actions authorized by the permission\nactions:\n  - &lt;enum= \"read\" | \"create\" | \"update\" | \"delete\" | \"*\"&gt;\n# Resource kinds that are concerned by the permission\nscopes:\n  - &lt;enum= kind | \"*\"&gt;\n</code></pre>"},{"location":"perses/docs/configuration/configuration/#database-config","title":"Database config","text":"<pre><code># Config in case you want to use a file DB.\n# Prefer the SQL config in case you are running multiple Perses instances.\nfile: &lt;Database file config&gt; # Optional\n\n# The SQL config\nsql: &lt;Database SQL config&gt; # Optional\n</code></pre>"},{"location":"perses/docs/configuration/configuration/#database_file-config","title":"Database_file config","text":"<pre><code># The path to the folder containing the database\nfolder: &lt;path&gt;\n\n# The file extension and so the file format used when storing and reading data from/to the database\nextension: &lt;string&gt; | default = yaml # Optional\n\n# Whether the database is case-sensitive.\n# Be aware that to reflect this config, metadata.project and metadata.name from the resources managed can be modified before the insertion in the database.\ncase_sensitive: &lt;string&gt; | default = false # Optional\n</code></pre>"},{"location":"perses/docs/configuration/configuration/#database-sql-config","title":"Database SQL config","text":"<pre><code># TLS configuration.\ntls_config: &lt;TLS config&gt; # Optional\n\n# Username used for the connection\nuser: &lt;secret&gt; # Optional\n\n# The password associated to the user. Mandatory if the user is set\npassword: &lt;secret&gt; # Optional\n\n# The path to a file containing a password\npassword_file: &lt;filename&gt; # Optional\n\n# Network type. For example \"tcp\"\nnet: &lt;string&gt; # Optional\n\n# The network address. If set then `net` is mandatory. Example: \"localhost:3306\"\naddr: &lt;secret&gt; # Optional\n\n# Database name\ndb_name: &lt;string&gt; # Optional\ncollation: &lt;string&gt; # Optional\n\n# Max packet size allowed\nmax_allowed_packet: &lt;int&gt; # Optional\n\n# Server public key name\nserver_pub_key: &lt;string&gt; # Optional\n\n# Dial timeout\ntimeout: &lt;duration&gt; # Optional\n\n# I/O read timeout\nread_timeout: &lt;duration&gt; # Optional\n\n# I/O write timeout\nwrite_timeout: &lt;duration&gt; # Optional\n\n# Allow all files to be used with LOAD DATA LOCAL INFILE\nallow_all_files: &lt;boolean&gt; | default = false # Optional\n\n# Allows the cleartext client side plugin\nallow_cleartext_passwords: &lt;boolean&gt; | default = false # Optional\n\n# Allows fallback to unencrypted connection if server does not support TLS\nallow_fallback_to_plaintext: &lt;boolean&gt; | default = false # Optional\n\n# Allows the native password authentication method\nallow_native_passwords: &lt;boolean&gt; | default = false # Optional\n\n# Allows the old insecure password method\nallow_old_passwords: &lt;boolean&gt; | default = false # Optional\n\n# Check connections for liveness before using them\ncheck_conn_liveness: &lt;boolean&gt; | default = false # Optional\n\n# Return number of matching rows instead of rows changed\nclient_found_rows: &lt;boolean&gt; | default = false # Optional\n\n# Prepend table alias to column names\ncolumns_with_alias: &lt;boolean&gt; | default = false # Optional\n\n# Interpolate placeholders into query string\ninterpolate_params: &lt;boolean&gt; | default = false # Optional\n\n# Allow multiple statements in one query\nmulti_statements: &lt;boolean&gt; | default = false # Optional\n\n# Parse time values to time.Time\nparse_time: &lt;boolean&gt; | default = false # Optional\n\n# Reject read-only connections\nreject_read_only: &lt;boolean&gt; | default = false # Optional\n\n# Whether the database is case-sensitive.\n# Be aware that to reflect this config, metadata.project and metadata.name from the resources managed can be modified before the insertion in the database.\ncase_sensitive: &lt;string&gt; | default = false # Optional\n</code></pre>"},{"location":"perses/docs/configuration/configuration/#schemas-config","title":"Schemas config","text":"<pre><code># Path to the Cue schemas of the panels\npanels_path: &lt;path&gt; | default = \"schemas/panels\" # Optional\n\n# Path to the Cue schemas of the queries\nqueries_path: &lt;path&gt; | default = \"schemas/queries\" # Optional\n\n# Path to the Cue schemas of the datasources\ndatasources_path: &lt;path&gt; | default = \"schemas/datasources\" # Optional\n\n# Path to the Cue schemas of the variables\nvariables_path: &lt;path&gt; | default = \"schemas/variables\" # Optional\n\n# The refresh interval of the cue schemas regardless their paths\ninterval: &lt;duration&gt; | default = 1h # Optional\n</code></pre>"},{"location":"perses/docs/configuration/configuration/#tls-config","title":"TLS config","text":"<p>A TLS config allows configuring TLS connections.</p> <pre><code># CA certificate to validate API server certificate with. At most one of ca and ca_file is allowed.\nca: &lt;string&gt; # Optional\nca_file: &lt;filename&gt; # Optional\n\n# Certificate and key for client cert authentication to the server.\n# At most one of cert and cert_file is allowed.\n# At most one of key and key_file is allowed.\ncert: &lt;string&gt; # Optional\ncert_file: &lt;filename&gt; # Optional\nkey: &lt;secret&gt; # Optional\nkey_file: &lt;filename&gt; # Optional\n\n# ServerName extension to indicate the name of the server.\n# https://tools.ietf.org/html/rfc4366#section-3.1\nserver_name: &lt;string&gt; # Optional\n\n# Disable validation of the server certificate.\ninsecure_skip_verify: &lt;boolean&gt; # Optional\n\n# Minimum acceptable TLS version. Accepted values: TLS10 (TLS 1.0), TLS11 (TLS\n# 1.1), TLS12 (TLS 1.2), TLS13 (TLS 1.3).\n# If unset, Prometheus will use Go default minimum version, which is TLS 1.2.\n# See MinVersion in https://pkg.go.dev/crypto/tls#Config.\nmin_version: &lt;string&gt; # Optional\n# Maximum acceptable TLS version. Accepted values: TLS10 (TLS 1.0), TLS11 (TLS\n# 1.1), TLS12 (TLS 1.2), TLS13 (TLS 1.3).\n# If unset, Prometheus will use Go default maximum version, which is TLS 1.3.\n# See MaxVersion in https://pkg.go.dev/crypto/tls#Config.\nmax_version: &lt;string&gt; # Optional\n</code></pre>"},{"location":"perses/docs/configuration/configuration/#provisioning-config","title":"Provisioning config","text":"<pre><code>interval: &lt;duration&gt; | default = 1h # Optional\n\n# List of folder that Perses will read periodically. \n# Every known data found in the different folders will be injected in the database regardless what exist.\nfolders:\n  - &lt;string&gt;\n</code></pre>"},{"location":"perses/docs/configuration/configuration/#globaldatasourcediscovery-config","title":"GlobalDatasourceDiscovery config","text":"<pre><code># The name of the discovery config. It is used for logging purposes only\ndiscovery_name: &lt;string&gt;\n\n# Refresh interval to run the discovery\nrefresh_interval: &lt;duration&gt; | default = 5m # Optional\n\n# HTTP-based service discovery provides a more generic way to generate a set of global datasource and serves as an interface to plug in custom service discovery mechanisms.\n# It fetches an HTTP endpoint containing a list of zero or more global datasources.\n# The target must reply with an HTTP 200 response.\n# The HTTP header Content-Type must be application/json, and the body must be valid array of JSON.\nhttp_sd: &lt;HTTPSD Config&gt; # Optional\n\n# Kubernetes SD configurations allow retrieving global datasource from Kubernetes' REST API\n# and always staying synchronized with the cluster state.\nkubernetes_sd: &lt;KubernetesSD Config&gt; # Optional\n</code></pre>"},{"location":"perses/docs/configuration/configuration/#httpsd-config","title":"HTTPSD Config","text":"<pre><code># URL of the HTTP server exposing the global datasource list to retrieve.\nurl: &lt;url&gt;\n# The HTTP authorization credentials for the targets.\n# Basic Auth, authorization and oauth are mutually exclusive. Use one of them.\nbasic_auth: &lt;Basic Auth specification&gt; # Optional\noauth: &lt;Oauth specification&gt; # Optional\nauthorization: &lt;Authorization specification&gt; # Optional\n\n# Config used to connect to the targets.\ntls_config: &lt;TLS Config specification&gt; # Optional\n\nheaders:\n  &lt;string&gt;: &lt;string&gt; # Optional\n</code></pre>"},{"location":"perses/docs/configuration/configuration/#oauth-specification","title":"Oauth specification","text":"<pre><code># ClientID is the application's ID.\nclient_id: &lt;string&gt;\n\n# ClientSecret is the application's secret.\nclient_secret: &lt;string&gt;\n\n# TokenURL is the resource server's token endpoint URL. This is a constant specific to each server.\ntoken_url: &lt;string&gt;\n</code></pre>"},{"location":"perses/docs/configuration/configuration/#basic-auth-specification","title":"Basic Auth specification","text":"<p>See the BasicAuth specification.</p>"},{"location":"perses/docs/configuration/configuration/#authorization-specification","title":"Authorization specification","text":"<p>See the Authorization specification.</p>"},{"location":"perses/docs/configuration/configuration/#tls-config-specification","title":"TLS Config specification","text":"<p>See the TLS Config specification.</p>"},{"location":"perses/docs/configuration/configuration/#kubernetessd-config","title":"KubernetesSD Config","text":"<pre><code># The name of the datasource plugin that should be filled when creating datasources found.\ndatasource_plugin_kind: &lt;string&gt;\n\n# Kubernetes namespace to constraint the query to only one namespace.\n# Leave empty if you are looking for datasource cross-namespace.\nnamespace: &lt;string&gt; # Optional\n\n# Configuration when you want to discover the services in Kubernetes\nservice_configuration: &lt;KubeServiceDiscovery Config&gt; # Optional\n\n# Configuration when you want to discover the pods in Kubernetes\npod_configuration: &lt;KubePodDiscovery Config&gt; # Optional\n\n# The labels used to filter the list of resource when contacting the Kubernetes API.\nlabels:\n  &lt;string&gt;: &lt;string&gt; # Optional\n</code></pre>"},{"location":"perses/docs/configuration/configuration/#kubeservicediscovery-config","title":"KubeServiceDiscovery Config","text":"<pre><code># If set to true, Perses server will discovery the service\nenable: &lt;boolean&gt; | default = false # Optional\n\n# Name of the service port for the target.\nport_name: &lt;string&gt; # Optional\n\n# Number of the service port for the target.\nport_number: &lt;int32&gt; # Optional\n\n# The type of the service.\nservice_type: &lt; enum | possibleValue = 'ClusterIP' | 'NodePort' | 'LoadBalancer' | 'ExternalName' &gt; # Optional\n</code></pre>"},{"location":"perses/docs/configuration/configuration/#kubepoddiscovery-config","title":"KubePodDiscovery Config","text":"<pre><code># If set to true, Perses server will discover the pods\nenable: &lt;boolean&gt; | default = false # Optional\n\n# Name of the container the target address points to.\ncontainer_name: &lt;string&gt; # Optional\n\n# Name of the container port.\ncontainer_port_name: &lt;string&gt; # Optional\n\n# Number of the container port.\ncontainer_port_number: &lt;string&gt; # Optional\n</code></pre>"},{"location":"perses/docs/configuration/configuration/#ephemeraldashboard-config","title":"EphemeralDashboard config","text":"<pre><code># When true user will be able to use the ephemeral dashboard at project level\nenable: &lt;bool&gt; | default = false # Optional\n\n# The interval at which to trigger the cleanup of ephemeral dashboards, based on their TTLs.\ncleanup_interval: &lt;duration&gt; | default = 1d # Optional\n</code></pre>"},{"location":"perses/docs/configuration/configuration/#frontend-config","title":"Frontend config","text":"<pre><code># When it is true, Perses won't serve the frontend anymore.\ndisable: &lt;bool&gt; | default = false # Optional\n\n# A list of dashboards you would like to display in the UI home page\nimportant_dashboards:\n  - &lt;Dashboard Selector config&gt; # Optional\n\n# The markdown content to be displayed on the UI home page\ninformation: &lt;string&gt; # Optional\n\n# TimeRange configuration\ntime_range: &lt;TimeRange config&gt; # Optional\n</code></pre>"},{"location":"perses/docs/configuration/configuration/#timerange-config","title":"TimeRange config","text":"<pre><code># The different relative timerange options available in dashboards and explorer\n# Use duration format. The display will be computed automatically. Eg: \"5m: will be display \"Last 5 minutes\"\noptions: &lt;duration[]&gt; | default = [ \"5m\", \"15m\", \"30m\", \"1h\", \"6h\", \"12h\", \"1d\", \"1w\", \"2w\" ] # Optional\n# Allow you to disable the custom time range (absolute time range)\ndisable_custom:  &lt;bool&gt; | default = false # Optional\n</code></pre>"},{"location":"perses/docs/configuration/configuration/#dashboard-selector-config","title":"Dashboard Selector config","text":"<pre><code># The project name (dashboard.metadata.project)\nproject: &lt;string&gt;\n\n# The dashboard name (dashboard.metadata.name)\ndashboard: &lt;string&gt;\n</code></pre>"},{"location":"perses/docs/configuration/oauth-configuration-helpers/","title":"OAuth helper","text":"<p>As we agree that the configuration of an external OAuth/OIDC provider can be a pain, this page is dedicated to help you configure the most common providers.</p>"},{"location":"perses/docs/configuration/oauth-configuration-helpers/#supported-oauth-flows","title":"Supported OAuth flows","text":"<p>We support three types of authentication flows. See authentication.md for more information.</p>"},{"location":"perses/docs/configuration/oauth-configuration-helpers/#authorization-code-flow-rfc-6749","title":"Authorization Code Flow RFC 6749","text":"<p>When the user login with their own personal credentials in the external provider's website through the Perses UI.</p>"},{"location":"perses/docs/configuration/oauth-configuration-helpers/#device-code-flow-rfc-8628","title":"Device Code Flow RFC 8628","text":"<p>When the user login with their own personal credentials in the external provider's website but this time from the Perses command line (<code>percli</code>). User will be invited to go to the provider's website to enter a device code, and then login.</p>"},{"location":"perses/docs/configuration/oauth-configuration-helpers/#client-credentials-flow-rfc-6749","title":"Client Credentials Flow RFC 6749","text":"<p>Here we log in as an application, not a user. This is useful for scripted tasks not necessarily requiring a user to be logged in.</p>"},{"location":"perses/docs/configuration/oauth-configuration-helpers/#list-of-providers","title":"List of providers","text":"<p>For each of the providers, the main pre-requisite is always to create an app in the provider's console and to get the client ID and client secret, but we realised that each of them had their own little oddities that we'll try to list up there.</p> <p>Disclaimer: We try to keep this page up-to-date, but the provider's documentation is always the most reliable source of information.</p>"},{"location":"perses/docs/configuration/oauth-configuration-helpers/#azure-ad","title":"Azure AD","text":"<pre><code>authentication:\n  providers:\n    oidc:\n      - slug_id: azure\n        name: \"Azure AD\"\n        client_id: \"&lt;your client ID&gt;\"\n        client_secret: \"&lt;your client Secret&gt;\"\n        issuer: \"https://login.microsoftonline.com/&lt;your tenant ID&gt;/v2.0\"\n        scopes: [\"openid\", \"profile\", \"email\", \"User.read\"] # For Auth code / Device code\n        client_credentials:\n          scopes: [\"https://graph.microsoft.com/.default\"] # For Client Credentials\n</code></pre> <p>Tip</p> <p>The scope used to generate a token from client credentials is different from the one used in other flows.</p> <pre><code>*Ref: [https://learn.microsoft.com/en-us/entra/identity-platform/v2-oauth2-client-creds-grant-flow](https://learn.microsoft.com/en-us/entra/identity-platform/v2-oauth2-client-creds-grant-flow)*\n</code></pre>"},{"location":"perses/docs/configuration/oauth-configuration-helpers/#place-your-provider-here","title":"&lt;Place Your Provider here ...&gt;","text":"<p>... (don't hesitate to propose new providers to add!)</p>"},{"location":"perses/docs/configuration/provisioning/","title":"Provisioning","text":"<p>The provisioning feature allows to inject any kind of resources in the database when Perses is starting.</p> <p>That can be useful in case you would like to populate your database with a set of predefined datasources for example.</p> <p>To ensure these data are not removed at the runtime, the provisioning is re-injecting them at a configured frequency (by default 1 hour).</p> <p>If you want to activate this feature, you need to complete your configuration file with the following section:</p> <pre><code>provisioning:\n  folders:\n    - /folder/foo/bar\n    - /another/folder\n</code></pre> <p>You can add any folder you would like. Perses will ignore any files not managed and will loop recursively through any sub-folders contained in the folders configured.</p>"},{"location":"perses/docs/dac/getting-started/","title":"Getting started with Dashboard-as-Code","text":"<p>Info</p> <p>See the introduction about the Dashboard-as-Code (DaC) topic here.</p>"},{"location":"perses/docs/dac/getting-started/#getting-started-with-the-cue-sdk","title":"Getting started with the CUE SDK","text":""},{"location":"perses/docs/dac/getting-started/#prerequisites","title":"Prerequisites","text":"<ul> <li><code>percli</code>, the CLI of Perses.</li> <li><code>cue</code>, the CLI of Cuelang.</li> </ul>"},{"location":"perses/docs/dac/getting-started/#repository-setup","title":"Repository setup","text":"<p>Create a new folder that will become your DaC repository, then follow the steps below:</p>"},{"location":"perses/docs/dac/getting-started/#1-initialize-the-cue-module","title":"1. Initialize the CUE module","text":"<pre><code>cue mod init &lt;module name&gt;\n</code></pre> <p>See the CUE documentation for more information about this step.</p>"},{"location":"perses/docs/dac/getting-started/#2-retrieve-the-cue-sources-from-perses","title":"2. Retrieve the CUE sources from Perses","text":"<p>Ideally we should rely on a native dependency management here, but since it's not yet available for CUE as already mentioned, we provide in the meantime a dedicated CLI command <code>dac setup</code> in order to add the CUE sources from Perses as external dependencies to your repo:</p> <pre><code>percli dac setup --version 0.47.1 # any version you'd like above v0.44.0\n</code></pre> <p>You can omit the version flag if you are connected to a Perses server (it will retrieve its version). Otherwise, unless you have a specific case, better to pass the latest version available.</p>"},{"location":"perses/docs/dac/getting-started/#develop-dashboards","title":"Develop dashboards","text":"<p>You are now fully ready to start developping dashboards as code!</p> <p>It's first strongly recommended to ramp up on CUE if you are not familiar with this technology. For this have a look at:</p> <ul> <li>The official website of Cuelang.</li> <li>Cuetorials, a 3rd party source of information that is a very good complement.</li> </ul> <p>You should then have a look at the CUE SDK documentation to better understand how to use the framework.</p> <p>You can also check an example of DaC usage here.</p>"},{"location":"perses/docs/dac/getting-started/#getting-started-with-the-go-sdk","title":"Getting started with the Go SDK","text":""},{"location":"perses/docs/dac/getting-started/#prerequisites_1","title":"Prerequisites","text":"<ul> <li><code>percli</code>, the CLI of Perses.</li> <li><code>go</code>, the programming language.</li> </ul>"},{"location":"perses/docs/dac/getting-started/#repository-setup_1","title":"Repository setup","text":"<p>Create a new folder that will become your DaC repository, then follow the steps below:</p>"},{"location":"perses/docs/dac/getting-started/#1-initialize-the-go-module","title":"1. Initialize the Go module","text":"<pre><code>go mod init &lt;module name&gt;\n</code></pre> <p>See the Go documentation for more information about this step.</p>"},{"location":"perses/docs/dac/getting-started/#2-install-the-perses-sdk","title":"2. Install the Perses SDK","text":"<pre><code>go get github.com/perses/perses\n</code></pre> <p>If you need a specific version, you can specify it as follows:</p> <pre><code>go get github.com/perses/perses v0.43.0\n</code></pre>"},{"location":"perses/docs/dac/getting-started/#develop-dashboards_1","title":"Develop dashboards","text":"<p>You are now fully ready to start developing dashboards as code!</p> <p>It's first strongly recommended to ramp up on Go if you are not familiar with this technology. For this have a look at:</p> <ul> <li>The official website of Go.</li> </ul> <p>You should then have a look at the Go SDK documentation to better understand how to use the framework.</p> <p>You can also check an example of DaC usage here.</p> <p>Warning</p> <p>Do not log / print on the standard stdout! It would break the output of the <code>dac build</code> command.</p> <p>Quick start example:</p> <pre><code>package main\n\nimport (\n    \"flag\"\n\n    \"github.com/perses/perses/go-sdk\"\n    \"github.com/perses/perses/go-sdk/dashboard\"\n    \"github.com/perses/perses/go-sdk/panel\"\n    \"github.com/perses/perses/go-sdk/prometheus/query\"\n    \"github.com/perses/perses/go-sdk/panel-group\"\n\n    timeSeriesPanel \"github.com/perses/perses/go-sdk/panel/time-series\"\n    promDs \"github.com/perses/perses/go-sdk/prometheus/datasource\"\n    labelValuesVar \"github.com/perses/perses/go-sdk/prometheus/variable/label-values\"\n    listVar \"github.com/perses/perses/go-sdk/variable/list-variable\"\n)\n\nfunc main() {\n    flag.Parse()\n    exec := sdk.NewExec()\n    builder, buildErr := dashboard.New(\"ContainersMonitoring\",\n        dashboard.ProjectName(\"MyProject\"),\n\n        dashboard.AddVariable(\"stack\",\n            listVar.List(\n                labelValuesVar.PrometheusLabelValues(\"paas\",\n                    labelValuesVar.Matchers(\"thanos_build_info{}\"),\n                    labelValuesVar.Datasource(\"promDemo\"),\n                ),\n                listVar.DisplayName(\"My Super PaaS\"),\n            ),\n        ),\n\n        dashboard.AddPanelGroup(\"Resource usage\",\n            panelgroup.PanelsPerLine(3),\n            panelgroup.AddPanel(\"Container memory\",\n                timeSeriesPanel.Chart(),\n                panel.AddQuery(\n                    query.PromQL(\"max by (container) (container_memory_rss{paas=\\\"$paas\\\",namespace=\\\"$namespace\\\",pod=\\\"$pod\\\",container=\\\"$container\\\"})\"),\n                ),\n            ),\n        ),\n\n        dashboard.AddDatasource(\"promDemo\", promDs.Prometheus(promDs.HTTPProxy(\"https://demo.prometheus.com\"))),\n    )\n    exec.BuildDashboard(builder, buildErr)\n}\n</code></pre>"},{"location":"perses/docs/dac/getting-started/#build-dashboards","title":"Build dashboards","text":"<p>Anytime you want to build the final dashboard definition (i.e: Perses dashboard in JSON or YAML format) corresponding to your as-code definition, you can use the <code>dac build</code> command, as the following:</p> <pre><code>percli dac build -f main.go -ojson\npercli dac build -f my_dashboard.cue -ojson\n</code></pre> <p>If the build is successful, the result can be found in the generated <code>built</code> folder.</p> <p>Note</p> <p>the <code>-o</code> (alternatively '--output') flag is optional (the default output format is YAML).</p>"},{"location":"perses/docs/dac/getting-started/#build-multiple-dashboards-at-once","title":"Build multiple dashboards at once","text":"<p>If you want to develop multiple dashboards as code, you should have 1 dashboard per file and then call the build command with the directory option:</p> <pre><code>percli dac build -d my_dashboards\n</code></pre>"},{"location":"perses/docs/dac/getting-started/#deploy-dashboards","title":"Deploy dashboards","text":"<p>Once you are satisfied with the result of your DaC definition for a given dashboard, you can finally deploy it to Perses with the <code>apply</code> command:</p> <pre><code>percli apply -f built/my_dashboard.json\n</code></pre>"},{"location":"perses/docs/dac/getting-started/#cicd-setup","title":"CICD setup","text":"<p>TODO</p>"},{"location":"perses/docs/dac/introduction/","title":"Dashboard-as-Code","text":"<p>Perses offers the possibility to define dashboards as code instead of going through manipulations on the UI. But why would you want to do this? Basically Dashboard-as-Code (DaC) is something that becomes useful at scale, when you have many dashboards to maintain, to keep aligned on certain parts, etc.</p> <p>DaC benefits can be summarized as follows:</p> <ul> <li>Operational efficiency, by the reusability of a common basis of dashboard components for standard monitoring use cases.</li> <li>Implementation cost reduction, by leveraging on existing components when creating new dashboards.</li> <li>Maintenance cost reduction, by making it easier to: cascade the same update on multiple dashboards, keep multiple components aligned with each other, etc..</li> </ul> <p>Most of these benefits comes from not dealing with the Perses JSON format directly: instead, we provide SDKs in languages that enable factorization, code imports and more, namely:</p> <ul> <li>CUE, a templating language with a strong emphasis on data validation.</li> <li>Go, an opensource programming language, that probably doesn't need to be introduced...</li> </ul> <p>These 2 SDKs come with different pros &amp; cons:</p> CUE Go IDE Support \ud83d\udfe1 \ud83d\udfe2 Native plugins integration* \ud83d\udfe2 \ud83d\udd34 Validation \ud83d\udfe2 \ud83d\udfe1 Dependency management \ud83d\udfe1 \ud83d\udfe2 Integration possibilities \ud83d\udd34 \ud83d\udfe2 Ramp-up effort \ud83d\udd34 \ud83d\udfe2 Popularity \ud83d\udd34 \ud83d\udfe2 <p>* CUE is the language used for the data model of the plugins, which means you'll always be able to include any external plugin installed in your Perses server into your code when using the CUE SDK. However, the Golang SDK may not support all the plugins: it's basically up to each plugin developer to provide a Go package to enable the DaC use case. This statement applies also to any other language we might have a SDK for in the future.</p> <p>Don't hesitate to try both to see which one suits you best!</p> <p>Additionally, 'as-code' means it's GitOps-friendly, allowing you to benefit from:</p> <ul> <li>Version history</li> <li>Peer-review of changes before rollout</li> <li>Automated deployments</li> <li>And more...</li> </ul> <p>Interested in this topic? Check out the Getting Started guide to learn more.</p>"},{"location":"perses/docs/dac/cue/","title":"CUE SDK for Dashboard-as-Code","text":"<p>Note</p> <p>To get started with Dashboard-as-Code in Perses, have a look at the DaC user guide first.</p> <p>This section provides detailed information about the CUE SDK to develop dashboards as code in Perses. It's focusing on explaining how to use the different builders provided by the SDK, that you should rely on to simplify the coding. Besides, you can always manipulate directly the base datamodel of the Perses dashboard, but this is less convenient.</p> <p>See the dedicated pages for each builder:</p> <ul> <li>Dashboard</li> <li>Panel Groups</li> <li>Variable-related builders:<ul> <li>Variable Group</li> <li>Static List Variable</li> <li>Text Variable</li> </ul> </li> <li>Prometheus-related builders:<ul> <li>Filter</li> <li>Panel</li> <li>Label Names Variable</li> <li>Label Values Variable</li> <li>PromQL Variable</li> </ul> </li> </ul> <p>See also some useful patterns for DaC with the CUE SDK in the below section.</p>"},{"location":"perses/docs/dac/cue/#useful-patterns","title":"Useful patterns","text":"<p>This section provides additional tips &amp; tricks to help you developping dashboards as code:</p>"},{"location":"perses/docs/dac/cue/#declare-intermediary-objects-for-reusability","title":"Declare intermediary objects for reusability","text":"<p>For code organization &amp; to allow reuse/imports of definitions, it's often interesting to declare things like panels, variables etc. upfront and to pass them afterwards to the dashboard object.</p> <p>Example:</p> <pre><code>package myDaC\n\nimport (\n    dashboardBuilder \"github.com/perses/perses/cue/dac-utils/dashboard\"\n    panelGroupsBuilder \"github.com/perses/perses/cue/dac-utils/panelgroups\"\n    panelBuilder \"github.com/perses/perses/cue/dac-utils/prometheus/panel\"\n    varGroupBuilder \"github.com/perses/perses/cue/dac-utils/variable/group\"\n    promQLVarBuilder \"github.com/perses/perses/cue/dac-utils/prometheus/variable/promql\"\n    promFilterBuilder \"github.com/perses/perses/cue/dac-utils/prometheus/filter\"\n    timeseriesChart \"github.com/perses/perses/cue/schemas/panels/time-series:model\"\n    promQuery \"github.com/perses/perses/cue/schemas/queries/prometheus:model\"\n)\n\n#myVarsBuilder: varGroupBuilder &amp; {\n    #input: [\n        promQLVarBuilder &amp; {\n            #name:           \"namespace\"\n            #metric:         \"kube_namespace_labels\"\n            #allowMultiple:  true\n            #datasourceName: \"promDemo\"\n        },\n        promQLVarBuilder &amp; {\n            #name:           \"pod\"\n            #metric:         \"kube_pod_info\"\n            #allowAllValue:  true\n            #allowMultiple:  true\n            #datasourceName: \"promDemo\"\n        },\n    ]\n}\n\n#filter: { promFilterBuilder &amp; #myVarsBuilder }.filter\n\n#cpuPanel: panelBuilder &amp; {\n    spec: {\n        display: name: \"Container CPU\"\n        plugin: timeseriesChart\n        queries: [\n            {\n                kind: \"TimeSeriesQuery\"\n                spec: plugin: promQuery &amp; {\n                    spec: query: \"sum (container_cpu_usage_seconds{\\(#filter)})\"\n                }\n            },\n        ]\n    }\n}\n\ndashboardBuilder &amp; {\n    #name:      \"ContainersMonitoring\"\n    #project:   \"MyProject\"\n    #variables: #myVarsBuilder.variables\n    #panelGroups: panelGroupsBuilder &amp; {\n        #input: [\n            {\n                #title: \"Resource usage\"\n                #cols:  3\n                #panels: [\n                    #cpuPanel,\n                ]\n            },\n        ]\n    }\n}\n</code></pre> <p>Once your code is organized this way, you can even split the different definitions in different files. This avoids e.g to have one very big file when you have a dashboard with lots of panels.</p>"},{"location":"perses/docs/dac/cue/#multiple-variable-groups","title":"Multiple variable groups","text":"<p>If you want 2 independant groups of variables on the same dashboard like \"C depends on B that depends on A\" and \"F depends on E that depends on D\", use 2 times the variable group builder independantly, then concat the lists.</p> <p>Example:</p> <pre><code>package myDaC\n\nimport (\n    \"list\"\n    dashboardBuilder \"github.com/perses/perses/cue/dac-utils/dashboard\"\n    panelGroupsBuilder \"github.com/perses/perses/cue/dac-utils/panelgroups\"\n    panelBuilder \"github.com/perses/perses/cue/dac-utils/prometheus/panel\"\n    varGroupBuilder \"github.com/perses/perses/cue/dac-utils/variable/group\"\n    promQLVarBuilder \"github.com/perses/perses/cue/dac-utils/prometheus/variable/promql\"\n    promFilterBuilder \"github.com/perses/perses/cue/dac-utils/prometheus/filter\"\n    timeseriesChart \"github.com/perses/perses/cue/schemas/panels/time-series:model\"\n    promQuery \"github.com/perses/perses/cue/schemas/queries/prometheus:model\"\n)\n\n#myCloudVarsBuilder: varGroupBuilder &amp; {\n    #input: [\n        promQLVarBuilder &amp; {\n            #name:           \"namespace\"\n            #metric:         \"kube_namespace_labels\"\n            #allowMultiple:  true\n            #datasourceName: \"promDemo\"\n        },\n        promQLVarBuilder &amp; {\n            #name:           \"pod\"\n            #metric:         \"kube_pod_info\"\n            #allowAllValue:  true\n            #allowMultiple:  true\n            #datasourceName: \"promDemo\"\n        }\n    ]\n}\n\n#cloudFilter: { promFilterBuilder &amp; #myCloudVarsBuilder }.filter\n\n#myVMVarsBuilder: varGroupBuilder &amp; {\n    #input: [\n        promQLVarBuilder &amp; {\n            #name:           \"datacenter\"\n            #metric:         \"node_uname_info\"\n            #allowMultiple:  true\n            #datasourceName: \"promDemo\"\n        },\n        promQLVarBuilder &amp; {\n            #name:           \"hostname\"\n            #metric:         \"node_uname_info\"\n            #allowAllValue:  true\n            #allowMultiple:  true\n            #datasourceName: \"promDemo\"\n        }\n    ]\n}\n\n#vmFilter: { promFilterBuilder &amp; #myVMVarsBuilder }.filter\n\n#containerCPUPanel: panelBuilder &amp; {\n    spec: {\n        display: name: \"Container CPU\"\n        plugin: timeseriesChart\n        queries: [\n            {\n                kind: \"TimeSeriesQuery\"\n                spec: plugin: promQuery &amp; {\n                    spec: query: \"sum (container_cpu_usage_seconds{\\(#cloudFilter)})\"\n                }\n            },\n        ]\n    }\n}\n\n#vmCPUPanel: panelBuilder &amp; {\n    spec: {\n        display: name: \"VM CPU\"\n        plugin: timeseriesChart\n        queries: [\n            {\n                kind: \"TimeSeriesQuery\"\n                spec: plugin: promQuery &amp; {\n                    spec: query: \"sum (node_memory_MemTotal_bytes{\\(#vmFilter)})\"\n                }\n            },\n        ]\n    }\n}\n\ndashboardBuilder &amp; {\n    #name:      \"ContainersMonitoring\"\n    #project:   \"MyProject\"\n    #variables: list.Concat([#myCloudVarsBuilder.variables, #myVMVarsBuilder.variables])\n    #panelGroups: panelGroupsBuilder &amp; {\n        #input: [\n            {\n                #title: \"Resource usage\"\n                #cols:  3\n                #panels: [\n                    #containerCPUPanel,\n                    #vmCPUPanel,\n                ]\n            },\n        ]\n    }\n}\n</code></pre>"},{"location":"perses/docs/dac/cue/dashboard/","title":"Dashboard builder","text":"<p>The Dashboard builder helps creating dashboards in the format expected by Perses.</p>"},{"location":"perses/docs/dac/cue/dashboard/#usage","title":"Usage","text":"<pre><code>package myDaC\n\nimport (\n    dashboardBuilder \"github.com/perses/perses/cue/dac-utils/dashboard\"\n)\n\ndashboardBuilder &amp; {} // input parameters expected\n</code></pre>"},{"location":"perses/docs/dac/cue/dashboard/#parameters","title":"Parameters","text":"Parameter Type Mandatory/Optional Description <code>#name</code> string Mandatory The name of the dashboard. <code>#project</code> string Optional The project to which the dashboard belongs. <code>#display</code> Display Optional Display object to tune the display name and description. <code>#panelGroups</code> map[string]: { layout: Layout, panels: map[string]: Panel } Optional A map where each key is a panel group name, and the value is an object containing layout and panels for that group. <code>#variables</code> [...VariableSpec] Optional An array of variables defined for the dashboard. <code>#datasources</code> map[string]: DatasourceSpec Optional A map of datasources defined by this dashboard <code>#duration</code> string Optional the default time range to use on the initial load of the dashboard <code>#refreshInterval</code> string Optional the default refresh interval to use on the initial load of the dashboard"},{"location":"perses/docs/dac/cue/dashboard/#example","title":"Example","text":"<pre><code>package myDaC\n\nimport (\n    dashboardBuilder \"github.com/perses/perses/cue/dac-utils/dashboard\"\n    panelGroupsBuilder \"github.com/perses/perses/cue/dac-utils/panelgroups\"\n    panelBuilder \"github.com/perses/perses/cue/dac-utils/prometheus/panel\"\n    varGroupBuilder \"github.com/perses/perses/cue/dac-utils/variable/group\"\n    textVarBuilder \"github.com/perses/perses/cue/dac-utils/variable/text\"\n    labelValuesVarBuilder \"github.com/perses/perses/cue/dac-utils/prometheus/variable/labelvalues\"\n    timeseriesChart \"github.com/perses/perses/cue/schemas/panels/time-series:model\"\n    promQuery \"github.com/perses/perses/cue/schemas/queries/prometheus:model\"\n)\n\ndashboardBuilder &amp; {\n    #name:    \"ContainersMonitoring\"\n    #project: \"MyProject\"\n    #variables: {varGroupBuilder &amp; {\n        #input: [\n            textVarBuilder &amp; {\n                #name:     \"prometheus\"\n                #value:    \"platform\"\n                #constant: true\n            },\n            labelValuesVarBuilder &amp; {\n                #name: \"stack\"\n                #display: name: \"PaaS\"\n                #metric:         \"thanos_build_info\"\n                #label:          \"stack\"\n                #datasourceName: \"promDemo\"\n            }\n        ]\n    }}.variables\n    #panelGroups: panelGroupsBuilder &amp; {\n        #input: [\n            {\n                #title: \"Resource usage\"\n                #cols:  3\n                #panels: [\n                    panelBuilder &amp; {\n                        spec: {\n                            display: name: \"Container CPU\"\n                            plugin: timeseriesChart\n                            queries: [\n                                {\n                                    kind: \"TimeSeriesQuery\"\n                                    spec: plugin: promQuery &amp; {\n                                        spec: query: \"sum by (container) (container_cpu_usage_seconds)\"\n                                    }\n                                },\n                            ]\n                        }\n                    }\n                ]\n            },\n        ]\n    }\n}\n</code></pre> <p>As you can see, other builders are used in conjunction with the dashboard builder to facilitate further the coding. Please refer to their respective documentation for more information about each.</p>"},{"location":"perses/docs/dac/cue/panelgroups/","title":"Panel Groups builder","text":"<p>The Panel Groups builder helps creating panel groups easily.</p>"},{"location":"perses/docs/dac/cue/panelgroups/#usage","title":"Usage","text":"<pre><code>package myDaC\n\nimport (\n    panelGroupsBuilder \"github.com/perses/perses/cue/dac-utils/panelgroups\"\n)\n\npanelGroupsBuilder &amp; {} // input parameter expected\n</code></pre>"},{"location":"perses/docs/dac/cue/panelgroups/#parameters","title":"Parameters","text":"Parameter Type Description <code>#input</code> [...panelGroupBuilder] Each array element provides the information to build a panel group."},{"location":"perses/docs/dac/cue/panelgroups/#panelgroupbuilder-parameters","title":"panelGroupBuilder parameters","text":"Parameter Type Mandatory/Optional Default Description <code>#panels</code> [...Panel] Mandatory An array of panels to be included in the panel group. <code>#title</code> string Mandatory The title of the panel group. <code>#cols</code> &gt;0 &amp; &lt;=24 Mandatory The number of columns in the grid layout. <code>#height</code> number Optional 6 The height for all panels in the grid"},{"location":"perses/docs/dac/cue/panelgroups/#example","title":"Example","text":"<pre><code>package myDaC\n\nimport (\n    panelGroupsBuilder \"github.com/perses/perses/cue/dac-utils/panelgroups\"\n)\n\n#memoryPanel: {} // v1.#Panel object\n#cpuPanel: {} // v1.#Panel object\n\npanelGroupsBuilder &amp; {\n    #input: [\n        {\n            #title: \"Resource usage\"\n            #cols:  3\n            #panels: [\n                #memoryPanel,\n                #cpuPanel,\n            ]\n        },\n        {\n            #title:  \"Resource usage bis\"\n            #cols:   1\n            #height: 4\n            #panels: [\n                #cpuPanel,\n                #memoryPanel,\n            ]\n        },\n    ]\n}\n</code></pre> <p>To build panels please refer to the Prometheus Panel builder.</p>"},{"location":"perses/docs/dac/cue/prometheus/filter/","title":"Filter builder","text":"<p>The Filter builder helps generating a filter, a.k.a a labels matcher expression.</p>"},{"location":"perses/docs/dac/cue/prometheus/filter/#usage","title":"Usage","text":"<pre><code>package myDaC\n\nimport (\n    promFilterBuilder \"github.com/perses/perses/cue/dac-utils/prometheus/filter\"\n)\n\npromFilterBuilder &amp; {} // input parameters expected\n</code></pre>"},{"location":"perses/docs/dac/cue/prometheus/filter/#parameters","title":"Parameters","text":"Parameter Type Mandatory/Optional Default Description <code>#input</code> [...varBuilder] Mandatory The list of variables builders from which to generate the filter."},{"location":"perses/docs/dac/cue/prometheus/filter/#output","title":"Output","text":"Field Type Description <code>filter</code> string A labels matcher expression, that covers all the variables previously passed. E.g <code>{namespace=\"$namespace\",pod=\"$pod\",container=\"$container\"}</code>"},{"location":"perses/docs/dac/cue/prometheus/filter/#example","title":"Example","text":"<pre><code>package myDaC\n\nimport (\n    promFilterBuilder \"github.com/perses/perses/cue/dac-utils/prometheus/filter\"\n    textVarBuilder \"github.com/perses/perses/cue/dac-utils/variable/text\"\n    promQLVarBuilder \"github.com/perses/perses/cue/dac-utils/prometheus/variable/promql\"\n    labelValuesVarBuilder \"github.com/perses/perses/cue/dac-utils/prometheus/variable/labelvalues\"\n)\n\n{promFilterBuilder &amp; {\n    #input: [\n        textVarBuilder &amp; {\n            #name:     \"prometheus\"\n            #value:    \"platform\"\n            #constant: true\n        },\n        labelValuesVarBuilder &amp; {\n            #name: \"stack\"\n            #display: name: \"PaaS\"\n            #metric:         \"thanos_build_info\"\n            #label:          \"stack\"\n            #datasourceName: \"promDemo\"\n        },\n        promQLVarBuilder &amp; {\n            #name:           \"namespace\"\n            #metric:         \"kube_namespace_labels\"\n            #allowMultiple:  true\n            #datasourceName: \"promDemo\"\n        }\n    ]\n}}.filter\n</code></pre>"},{"location":"perses/docs/dac/cue/prometheus/panel/","title":"Prometheus Panel builder","text":"<p>The Prometheus Panel builder is a simple wrapper to help creating panels that query a prometheus datasource.</p>"},{"location":"perses/docs/dac/cue/prometheus/panel/#usage","title":"Usage","text":"<pre><code>package myDaC\n\nimport (\n    panelBuilder \"github.com/perses/perses/cue/dac-utils/prometheus/panel\"\n)\n\npanelBuilder &amp; {} // input parameters expected\n</code></pre>"},{"location":"perses/docs/dac/cue/prometheus/panel/#parameters","title":"Parameters","text":"Parameter Type Mandatory/Optional Default Description <code>spec</code> PanelSpec Mandatory A PanelSpec object <code>#clause</code> <code>\"by\"</code> | <code>\"without\"</code> | <code>\"\"</code> Optional <code>\"\"</code> The aggregation clause for this panel's queries. <code>#clauseLabels</code> [...string] Optional [] The labels on which to aggregate for this panel's queries. <p>the panel spec object can use the following string fields provided by the builder, via interpolation:</p> Field Type Description <code>#aggr</code> string Aggregation clause built from the provided <code>#clause</code> and <code>#clauseLabels</code>. E.g <code>by (namespace, pod)</code>"},{"location":"perses/docs/dac/cue/prometheus/panel/#example","title":"Example","text":"<pre><code>package myDaC\n\nimport (\n    panelBuilder \"github.com/perses/perses/cue/dac-utils/prometheus/panel\"\n    timeseriesChart \"github.com/perses/perses/cue/schemas/panels/time-series:model\"\n    promQuery \"github.com/perses/perses/cue/schemas/queries/prometheus:model\"\n)\n\n#cpuPanel: this=panelBuilder &amp; {\n    #clause: \"by\"\n    #clauseLabels: [\"container\"]\n\n    spec: {\n        display: name: \"Container CPU\"\n        plugin: timeseriesChart\n        queries: [\n            {\n                kind: \"TimeSeriesQuery\"\n                spec: plugin: promQuery &amp; {\n                    spec: query: \"sum \\(this.#aggr) (container_cpu_usage_seconds{})\"\n                }\n            },\n        ]\n    }\n}\n\n#cpuPanel\n</code></pre>"},{"location":"perses/docs/dac/cue/prometheus/variable/labelnames/","title":"Label Names Variable builder","text":"<p>The Label Names Variable builder helps creating prometheus label names variables in the format expected by Perses.</p>"},{"location":"perses/docs/dac/cue/prometheus/variable/labelnames/#usage","title":"Usage","text":"<pre><code>package myDaC\n\nimport (\n    labelNamesVarBuilder \"github.com/perses/perses/cue/dac-utils/prometheus/variable/labelnames\"\n)\n\nlabelNamesVarBuilder &amp; {} // input parameters expected\n</code></pre>"},{"location":"perses/docs/dac/cue/prometheus/variable/labelnames/#parameters","title":"Parameters","text":"Parameter Type Mandatory/Optional Default Description <code>#name</code> string Mandatory The name of this variable. <code>#datasourceName</code> string Mandatory The name of the datasource to query. <code>#allowAllValue</code> boolean Optional false Whether to append the \"All\" value to the list. <code>#allowMultiple</code> boolean Optional false Whether to allow multi-selection of values. <code>#capturingRegexp</code> string Optional Regexp used to catch and filter the results of the query. If empty, then nothing is filtered (equivalent of setting it to <code>(.*)</code>). <code>#customAllValue</code> string Optional Custom value that will be used if <code>#allowAllValue</code> is true and if <code>All</code> is selected. <code>#display</code> Display Optional Display object to tune the display name, description and visibility (show/hide). <code>#metric</code> string Optional The name of the source metric to be used. /!\\ Mandatory if you want to rely on the standard query pattern, thus didn't provide a value to the <code>#query</code> parameter. <code>#query</code> string Optional Custom query to be used for this variable. /!\\ Mandatory if you didn't provide a value to the <code>#metric</code> parameter. <code>#sort</code> Sort Optional Sort method to apply when rendering the list of values."},{"location":"perses/docs/dac/cue/prometheus/variable/labelnames/#output","title":"Output","text":"Field Type Description <code>variable</code> Variable The final variable object, to be passed to the dashboard."},{"location":"perses/docs/dac/cue/prometheus/variable/labelnames/#example","title":"Example","text":"<pre><code>package myDaC\n\nimport (\n    labelNamesVarBuilder \"github.com/perses/perses/cue/dac-utils/prometheus/variable/labelnames\"\n)\n\n{labelNamesVarBuilder &amp; {\n    #name:           \"namespaceLabels\"\n    #metric:         \"kube_namespace_labels\"\n    #datasourceName: \"promDemo\"\n}}.variable\n</code></pre>"},{"location":"perses/docs/dac/cue/prometheus/variable/labelvalues/","title":"Label Values Variable builder","text":"<p>The Label Values Variable builder helps creating prometheus label values variables in the format expected by Perses.</p>"},{"location":"perses/docs/dac/cue/prometheus/variable/labelvalues/#usage","title":"Usage","text":"<pre><code>package myDaC\n\nimport (\n    labelValuesVarBuilder \"github.com/perses/perses/cue/dac-utils/prometheus/variable/labelvalues\"\n)\n\nlabelValuesVarBuilder &amp; {} // input parameters expected\n</code></pre>"},{"location":"perses/docs/dac/cue/prometheus/variable/labelvalues/#parameters","title":"Parameters","text":"Parameter Type Mandatory/Optional Default Description <code>#name</code> string Mandatory The name of this variable. <code>#datasourceName</code> string Mandatory The name of the datasource to query. <code>#label</code> string Mandatory to <code>name</code> parameter The label from which to retrieve the list of values. /!\\ The filter library does NOT rely on this parameter to build the corresponding matcher, only <code>#name</code> is used. <code>#allowAllValue</code> boolean Optional false Whether to append the \"All\" value to the list. <code>#allowMultiple</code> boolean Optional false Whether to allow multi-selection of values. <code>#capturingRegexp</code> string Optional Regexp used to catch and filter the results of the query. If empty, then nothing is filtered (equivalent of setting it to <code>(.*)</code>). <code>#customAllValue</code> string Optional Custom value that will be used if <code>#allowAllValue</code> is true and if <code>All</code> is selected. <code>#display</code> Display Optional Display object to tune the display name, description and visibility (show/hide). <code>#metric</code> string Optional The name of the source metric to be used. /!\\ Mandatory if you want to rely on the standard query pattern, thus didn't provide a value to the <code>#query</code> parameter. <code>#query</code> string Optional Custom query to be used for this variable. /!\\ Mandatory if you didn't provide a value to the <code>#metric</code> parameter. <code>#sort</code> Sort Optional Sort method to apply when rendering the list of values."},{"location":"perses/docs/dac/cue/prometheus/variable/labelvalues/#output","title":"Output","text":"Field Type Description <code>variable</code> Variable The final variable object, to be passed to the dashboard."},{"location":"perses/docs/dac/cue/prometheus/variable/labelvalues/#example","title":"Example","text":"<pre><code>package myDaC\n\nimport (\n    labelValuesVarBuilder \"github.com/perses/perses/cue/dac-utils/prometheus/variable/labelvalues\"\n)\n\n{labelValuesVarBuilder &amp; {\n    #name: \"stack\"\n    #display: name: \"PaaS\"\n    #metric:         \"thanos_build_info\"\n    #label:          \"stack\"\n    #datasourceName: \"promDemo\"\n}}.variable\n</code></pre>"},{"location":"perses/docs/dac/cue/prometheus/variable/promql/","title":"PromQL Variable builder","text":"<p>The PromQL Variable builder helps creating prometheus promQL variables in the format expected by Perses.</p>"},{"location":"perses/docs/dac/cue/prometheus/variable/promql/#usage","title":"Usage","text":"<pre><code>package myDaC\n\nimport (\n    promQLVarBuilder \"github.com/perses/perses/cue/dac-utils/prometheus/variable/promql\"\n)\n\npromQLVarBuilder &amp; {} // input parameters expected\n</code></pre>"},{"location":"perses/docs/dac/cue/prometheus/variable/promql/#parameters","title":"Parameters","text":"Parameter Type Mandatory/Optional Default Description <code>#name</code> string Mandatory The name of this variable. <code>#datasourceName</code> string Mandatory The name of the datasource to query. <code>#label</code> string Mandatory to <code>name</code> parameter The label from which to retrieve the list of values. /!\\ The filter library does NOT rely on this parameter to build the corresponding matcher, only <code>#name</code> is used. <code>#allowAllValue</code> boolean Optional false Whether to append the \"All\" value to the list. <code>#allowMultiple</code> boolean Optional false Whether to allow multi-selection of values. <code>#capturingRegexp</code> string Optional Regexp used to catch and filter the results of the query. If empty, then nothing is filtered (equivalent of setting it to <code>(.*)</code>). <code>#customAllValue</code> string Optional Custom value that will be used if <code>#allowAllValue</code> is true and if <code>All</code> is selected. <code>#display</code> Display Optional Display object to tune the display name, description and visibility (show/hide). <code>#metric</code> string Optional The name of the source metric to be used. /!\\ Mandatory if you want to rely on the standard query pattern, thus didn't provide a value to the <code>#query</code> parameter. <code>#query</code> string Optional Custom query to be used for this variable. /!\\ Mandatory if you didn't provide a value to the <code>#metric</code> parameter. <code>#sort</code> Sort Optional Sort method to apply when rendering the list of values."},{"location":"perses/docs/dac/cue/prometheus/variable/promql/#output","title":"Output","text":"Field Type Description <code>variable</code> Variable The final variable object, to be passed to the dashboard."},{"location":"perses/docs/dac/cue/prometheus/variable/promql/#example","title":"Example","text":"<pre><code>package myDaC\n\nimport (\n    promQLVarBuilder \"github.com/perses/perses/cue/dac-utils/prometheus/variable/promql\"\n)\n\n{promQLVarBuilder &amp; {\n    #name:           \"container\"\n    #metric:         \"kube_pod_container_info\"\n    #allowAllValue:  true\n    #allowMultiple:  true\n    #datasourceName: \"promDemo\"\n}}.variable\n</code></pre>"},{"location":"perses/docs/dac/cue/variable/group/","title":"Variable Group builder","text":"<p>The Variable Group builder takes care of generating a pattern that we often see in dashboards: when you have e.g 3 variables A, B and C, it's quite common to \"bind\" them together so that B depends on A, and C depends on B + A.</p>"},{"location":"perses/docs/dac/cue/variable/group/#usage","title":"Usage","text":"<pre><code>package myDaC\n\nimport (\n    varGroupBuilder \"github.com/perses/perses/cue/dac-utils/variable/group\"\n)\n\nvarGroupBuilder &amp; {} // input parameters expected\n</code></pre>"},{"location":"perses/docs/dac/cue/variable/group/#parameters","title":"Parameters","text":"Parameter Type Mandatory/Optional Default Description <code>#input</code> [...{}] Mandatory The list of variables to be grouped. <code>#datasourceName</code> string Optional Datasource to be used for all the variables of this group. Avoids the necessity to provide the datasource name for each variable when you want to use the same for all. <p>Technically the array could contain any kind of object, still it is meant to receive variables builder entries that are going to do something with the dependencies appended by the Variable Group builder. You can also pass to it variables for which the notion of dependencies don't/can't apply (like text variables or static lists) but that will still be used as dependencies for the following variables.</p>"},{"location":"perses/docs/dac/cue/variable/group/#outputs","title":"Outputs","text":"Field Type Description <code>variables</code> [...Variable] The final list of variables objects, to be passed to the dashboard. <code>queryParams</code> string A query string including all variables from the group, to be used in urls."},{"location":"perses/docs/dac/cue/variable/group/#example","title":"Example","text":"<pre><code>package myDaC\n\nimport (\n    varGroupBuilder \"github.com/perses/perses/cue/dac-utils/variable/group\"\n    textVarBuilder \"github.com/perses/perses/cue/dac-utils/variable/text\"\n    promQLVarBuilder \"github.com/perses/perses/cue/dac-utils/prometheus/variable/promql\"\n    labelValuesVarBuilder \"github.com/perses/perses/cue/dac-utils/prometheus/variable/labelvalues\"\n)\n\n{varGroupBuilder &amp; {\n    #input: [\n        textVarBuilder &amp; {\n            #name:     \"prometheus\"\n            #value:    \"platform\"\n            #constant: true\n        },\n        labelValuesVarBuilder &amp; {\n            #name: \"stack\"\n            #display: name: \"PaaS\"\n            #metric:         \"thanos_build_info\"\n            #label:          \"stack\"\n            #datasourceName: \"promDemo\"\n        },\n        promQLVarBuilder &amp; {\n            #name:           \"namespace\"\n            #metric:         \"kube_namespace_labels\"\n            #allowMultiple:  true\n            #datasourceName: \"promDemo\"\n        }\n    ]\n}}.variables\n</code></pre>"},{"location":"perses/docs/dac/cue/variable/staticlist/","title":"Static List Variable builder","text":"<p>The Static List Variable builder helps creating static list variables in the format expected by Perses.</p>"},{"location":"perses/docs/dac/cue/variable/staticlist/#usage","title":"Usage","text":"<pre><code>package myDaC\n\nimport (\n    staticListVarBuilder \"github.com/perses/perses/cue/dac-utils/variable/staticlist\"\n)\n\nstaticListVarBuilder &amp; {} // input parameters expected\n</code></pre>"},{"location":"perses/docs/dac/cue/variable/staticlist/#parameters","title":"Parameters","text":"Parameter Type Mandatory/Optional Default Description <code>#name</code> string Mandatory The name of this variable. <code>#values</code> [...(string | { value: string, label?: string })] Mandatory The list of values of this variable. <code>#display</code> Display Optional Display object to tune the display name, description and visibility (show/hide). <code>#allowAllValue</code> boolean Optional false Whether to append the \"All\" value to the list. <code>#allowMultiple</code> boolean Optional false Whether to allow multi-selection of values. <code>#customAllValue</code> string Optional Custom value that will be used if <code>#allowAllValue</code> is true and if <code>All</code> is selected. <code>#capturingRegexp</code> string Optional Regexp used to catch and filter the results of the query. If empty, then nothing is filtered (equivalent of setting it to <code>(.*)</code>). <code>#sort</code> Sort Optional Sort method to apply when rendering the list of values."},{"location":"perses/docs/dac/cue/variable/staticlist/#output","title":"Output","text":"Field Type Description <code>variable</code> Variable The final variable object, to be passed to the dashboard."},{"location":"perses/docs/dac/cue/variable/staticlist/#example","title":"Example","text":"<pre><code>package myDaC\n\nimport (\n    staticListVarBuilder \"github.com/perses/perses/cue/dac-utils/variable/staticlist\"\n)\n\n{staticListVarBuilder &amp; {\n    #name:     \"prometheus\"\n    #values:   [\"one\", \"two\", {value: \"three\", label: \"THREE\" }]\n}}.variable\n</code></pre>"},{"location":"perses/docs/dac/cue/variable/text/","title":"Text Variable builder","text":"<p>The Text Variable builder helps creating text variables in the format expected by Perses.</p>"},{"location":"perses/docs/dac/cue/variable/text/#usage","title":"Usage","text":"<pre><code>package myDaC\n\nimport (\n    textVarBuilder \"github.com/perses/perses/cue/dac-utils/variable/text\"\n)\n\ntextVarBuilder &amp; {} // input parameters expected\n</code></pre>"},{"location":"perses/docs/dac/cue/variable/text/#parameters","title":"Parameters","text":"Parameter Type Mandatory/Optional Default Description <code>#name</code> string Mandatory The name of this variable. <code>#constant</code> bool Mandatory false Whether this variable is a constant. <code>#value</code> string Mandatory The value of this variable. <code>#display</code> Display Optional Display object to tune the display name, description and visibility (show/hide)."},{"location":"perses/docs/dac/cue/variable/text/#output","title":"Output","text":"Field Type Description <code>variable</code> Variable The final variable object, to be passed to the dashboard."},{"location":"perses/docs/dac/cue/variable/text/#example","title":"Example","text":"<pre><code>package myDaC\n\nimport (\n    textVarBuilder \"github.com/perses/perses/cue/dac-utils/variable/text\"\n)\n\n{textVarBuilder &amp; {\n    #name:     \"prometheus\"\n    #value:    \"platform\"\n    #constant: true\n}}.variable\n</code></pre>"},{"location":"perses/docs/dac/go/","title":"Go SDK for Dashboard-as-Code","text":"<p>Note</p> <p>To get started with Dashboard-as-Code in Perses, have a look at the DaC user guide first.</p> <p>This section provides detailed information about the Go SDK to develop dashboards as code in Perses. It's focusing on explaining how to use the different builders provided by the SDK.</p> <p>See the dedicated pages for each builder:</p> <ul> <li>Dashboard</li> <li>Datasource<ul> <li>HTTP Proxy</li> </ul> </li> <li>Panel<ul> <li>Bar</li> <li>Gauge</li> <li>Markdown</li> <li>Stat</li> <li>Time Series</li> <li>Panel Group</li> </ul> </li> <li>Query</li> <li>Variable</li> <li>Variable Group</li> <li>Prometheus-related builders:<ul> <li>Datasource</li> <li>Query</li> <li>Label Names Variable</li> <li>Label Values Variable</li> <li>PromQL Variable</li> </ul> </li> </ul>"},{"location":"perses/docs/dac/go/dashboard/","title":"Dashboard Builder","text":""},{"location":"perses/docs/dac/go/dashboard/#constructor","title":"Constructor","text":"<pre><code>import \"github.com/perses/perses/go-sdk/dashboard\"\n\nvar options []dashboard.Option\ndashboard.New(\"my Super Dashboard\", options...)\n</code></pre> <p>Need to provide the name of the dashboard and a list of options.</p>"},{"location":"perses/docs/dac/go/dashboard/#default-options","title":"Default options","text":"<ul> <li>Name(): with the name provided in the constructor</li> <li>Duration(): one hour</li> </ul>"},{"location":"perses/docs/dac/go/dashboard/#available-options","title":"Available options","text":""},{"location":"perses/docs/dac/go/dashboard/#name","title":"Name","text":"<pre><code>import \"github.com/perses/perses/go-sdk/dashboard\" \n\ndashboard.Name(\"My Super Dashboard\")\n</code></pre> <p>Define the dashboard metadata name and display name.</p>"},{"location":"perses/docs/dac/go/dashboard/#projectname","title":"ProjectName","text":"<pre><code>import \"github.com/perses/perses/go-sdk/dashboard\" \n\ndashboard.ProjectName(\"MySuperProject\")\n</code></pre> <p>Define the dashboard project name in metadata.</p>"},{"location":"perses/docs/dac/go/dashboard/#duration","title":"Duration","text":"<pre><code>import \"time\"\nimport \"github.com/perses/perses/go-sdk/dashboard\" \n\ndashboard.Duration(2*time.Hour)\n</code></pre> <p>Define the dashboard duration.</p>"},{"location":"perses/docs/dac/go/dashboard/#refreshinterval","title":"RefreshInterval","text":"<pre><code>import \"time\"\nimport \"github.com/perses/perses/go-sdk/dashboard\" \n\ndashboard.RefreshInterval(15*time.minutes)\n</code></pre> <p>Define the dashboard refresh interval.</p>"},{"location":"perses/docs/dac/go/dashboard/#addpanelgroup","title":"AddPanelGroup","text":"<pre><code>import \"github.com/perses/perses/go-sdk/dashboard\"\nimport \"github.com/perses/perses/go-sdk/panel-group\"\n\nvar panelGroupOptions []panelgroup.Option\ndashboard.AddPanelGroup(\"My Super Panel Group\", panelGroupOptions...)\n</code></pre> <p>Add a panel group to the dashboard. More info at Panel Group.</p>"},{"location":"perses/docs/dac/go/dashboard/#adddatasource","title":"AddDatasource","text":"<pre><code>import \"github.com/perses/perses/go-sdk/dashboard\"\nimport \"github.com/perses/perses/go-sdk/datasource\"\n\nvar datasourceOptions []datasource.Option\ndashboard.AddDatasource(\"MySuperDatasourceName\", datasourceOptions...)\n</code></pre> <p>Add a local datasource to the dashboard. More info at Datasource.</p>"},{"location":"perses/docs/dac/go/dashboard/#addvariable","title":"AddVariable","text":"<pre><code>import \"github.com/perses/perses/go-sdk/dashboard\"\nimport \"github.com/perses/perses/go-sdk/variable\"\n\nvar variableOptions []variable.Option\ndashboard.AddVariable(\"MySuperVariableName\", variableOptions...)\n</code></pre> <p>Add a local variable to the dashboard. More info at Variable.</p>"},{"location":"perses/docs/dac/go/dashboard/#addvariablegroup","title":"AddVariableGroup","text":"<pre><code>import \"github.com/perses/perses/go-sdk/dashboard\" \nimport \"github.com/perses/perses/go-sdk/variable-group\"\n\nvar variableGroupOptions []variablegroup.Option\ndashboard.AddVariableGroup(variableGroupOptions...)\n</code></pre> <p>Add a group of variables to the dashboard. More info at Variable Group.</p>"},{"location":"perses/docs/dac/go/dashboard/#example","title":"Example","text":"<pre><code>package main\n\nimport (\n    \"time\"\n\n    \"github.com/perses/perses/go-sdk/dashboard\"\n    \"github.com/perses/perses/go-sdk/panel-group\"\n    \"github.com/perses/perses/go-sdk/panel/markdown\"\n\n    promDs \"github.com/perses/perses/go-sdk/prometheus/datasource\"\n    labelValuesVar \"github.com/perses/perses/go-sdk/prometheus/variable/label-values\"\n    listVar \"github.com/perses/perses/go-sdk/variable/list-variable\"\n)\n\nfunc main() {\n    dashboard.New(\"Example Dashboard\",\n        dashboard.ProjectName(\"MyProject\"),\n        dashboard.RefreshInterval(1*time.Minute),\n        dashboard.Duration(24*time.Hour),\n\n        // VARIABLES\n        dashboard.AddVariable(\"stack\",\n            listVar.List(\n                labelValuesVar.PrometheusLabelValues(\"stack\",\n                    labelValuesVar.Matchers(\"thanos_build_info{}\"),\n                    labelValuesVar.Datasource(\"promDemo\"),\n                ),\n                listVar.DisplayName(\"PaaS\"),\n            ),\n        ),\n\n        // ROWS\n        dashboard.AddPanelGroup(\"Info\",\n            panelgroup.PanelsPerLine(3),\n\n            // PANELS\n            panelgroup.AddPanel(\"Contact\",\n                markdown.Markdown(\"Dashboard owner: [John Doe](mailto:zzz)\"),\n            ),\n        ),\n\n        // DATASOURCES\n        dashboard.AddDatasource(\"promDemo\", promDs.Prometheus(promDs.HTTPProxy(\"#####\"))),\n    )\n}\n</code></pre>"},{"location":"perses/docs/dac/go/datasource/","title":"Datasource Builder","text":""},{"location":"perses/docs/dac/go/datasource/#constructor","title":"Constructor","text":"<pre><code>import \"github.com/perses/perses/go-sdk/datasource\"\n\nvar options []datasource.Option\ndatasource.New(\"My Super Datasource\", options...)\n</code></pre> <p>Need to provide the name of the datasource and a list of options.</p>"},{"location":"perses/docs/dac/go/datasource/#default-options","title":"Default options","text":"<ul> <li>Name(): with the name provided in the constructor.</li> </ul>"},{"location":"perses/docs/dac/go/datasource/#available-options","title":"Available options","text":""},{"location":"perses/docs/dac/go/datasource/#name","title":"Name","text":"<pre><code>import \"github.com/perses/perses/go-sdk/datasource\" \n\ndatasource.Name(\"My Super Datasource\")\n</code></pre> <p>Define the datasource metadata name + display name.</p>"},{"location":"perses/docs/dac/go/datasource/#projectname","title":"ProjectName","text":"<pre><code>import \"github.com/perses/perses/go-sdk/datasource\" \n\ndatasource.ProjectName(\"MySuperProject\")\n</code></pre> <p>Define the datasource project name in metadata.</p>"},{"location":"perses/docs/dac/go/datasource/#default","title":"Default","text":"<pre><code>import \"github.com/perses/perses/go-sdk/datasource\" \n\ndatasource.Default(true)\n</code></pre> <p>Set if datasource is a default datasource.</p>"},{"location":"perses/docs/dac/go/datasource/#datasource-plugin-options","title":"Datasource Plugin Options","text":""},{"location":"perses/docs/dac/go/datasource/#prometheus-datasource","title":"Prometheus Datasource","text":"<pre><code>import promDs \"github.com/perses/perses/go-sdk/prometheus/datasource\"\n\npromDs.Prometheus(promDsOptions...)\n</code></pre> <p>Set Prometheus plugin for the datasource. More info at Prometheus Datasource.</p>"},{"location":"perses/docs/dac/go/datasource/#example","title":"Example","text":"<pre><code>package main\n\nimport (\n    \"github.com/perses/perses/go-sdk/dashboard\"\n\n    promDs \"github.com/perses/perses/go-sdk/prometheus/datasource\"\n)\n\nfunc main() {\n    dashboard.New(\"ExampleDashboard\",\n        dashboard.AddDatasource(\"prometheusDemo\", promDs.Prometheus(promDs.DirectURL(\"https://prometheus.demo.do.prometheus.io/\"))),\n    )\n}\n</code></pre>"},{"location":"perses/docs/dac/go/panel-group/","title":"Panel Group Builder","text":""},{"location":"perses/docs/dac/go/panel-group/#constructor","title":"Constructor","text":"<pre><code>import \"github.com/perses/perses/go-sdk/panel-group\"\n\nvar options []panelgroup.Option\npanelgroup.New(\"My Panel Group Title\", options...)\n</code></pre> <p>Need to provide a title and a list of options.</p>"},{"location":"perses/docs/dac/go/panel-group/#default-options","title":"Default options","text":"<ul> <li>Title(): with the title provided in the constructor.</li> <li>PanelWidth(): 12</li> <li>PanelHeight(): 6</li> <li>Collapsed(): true</li> </ul>"},{"location":"perses/docs/dac/go/panel-group/#available-options","title":"Available options","text":""},{"location":"perses/docs/dac/go/panel-group/#title","title":"Title","text":"<pre><code>import \"github.com/perses/perses/go-sdk/panel-group\"\n\npanelgroup.Title(\"My Panel Group Title\")\n</code></pre> <p>Define the panel group title.</p>"},{"location":"perses/docs/dac/go/panel-group/#panelwidth","title":"PanelWidth","text":"<pre><code>import \"github.com/perses/perses/go-sdk/panel-group\"\n\npanelgroup.PanelWidth(6)\n</code></pre> <p>Define the panel width. The value must be between 1 and 24.</p>"},{"location":"perses/docs/dac/go/panel-group/#panelsperline","title":"PanelsPerLine","text":"<pre><code>import \"github.com/perses/perses/go-sdk/panel-group\"\n\npanelgroup.PanelsPerLine(4)\n</code></pre> <p>Helper for defining panel width instead of PanelWidth. The value must be between 1 and 24.</p>"},{"location":"perses/docs/dac/go/panel-group/#panelheight","title":"PanelHeight","text":"<pre><code>import \"github.com/perses/perses/go-sdk/panel-group\"\n\npanelgroup.PanelHeight(6)\n</code></pre> <p>Define the panel height. The value must be between 1 and 24.</p>"},{"location":"perses/docs/dac/go/panel-group/#collapsed","title":"Collapsed","text":"<pre><code>import \"github.com/perses/perses/go-sdk/panel-group\"\n\npanelgroup.Collapsed(true)\n</code></pre> <p>Define if the panel group is collapsed or not when the dashboard is loaded. Collapsed panel group are lazy loaded when they are opened.</p>"},{"location":"perses/docs/dac/go/panel-group/#addpanel","title":"AddPanel","text":"<pre><code>import \"github.com/perses/perses/go-sdk/panel-group\"\nimport \"github.com/perses/perses/go-sdk/panel\"\n\nvar panelOptions []panel.Option\npanelgroup.AddPanel(\"MySuperPanelName\", panelOptions...)\n</code></pre> <p>Add a panel to the group, the panel will be placed depending on the ordering of in the group. More info about the panel can be found here.</p>"},{"location":"perses/docs/dac/go/panel-group/#example","title":"Example","text":"<pre><code>package main\n\nimport (\n    \"github.com/perses/perses/go-sdk/dashboard\"\n    \"github.com/perses/perses/go-sdk/panel\"\n    panelgroup \"github.com/perses/perses/go-sdk/panel-group\"\n    timeseries \"github.com/perses/perses/go-sdk/panel/time-series\"\n    \"github.com/perses/perses/go-sdk/prometheus/query\"\n)\n\nfunc main() {\n    dashboard.New(\"Example Dashboard\",\n        dashboard.AddPanelGroup(\"Resource usage\",\n            panelgroup.Collapsed(false),\n            panelgroup.PanelsPerLine(1),\n            panelgroup.AddPanel(\"Container memory\",\n                timeseries.Chart(),\n                panel.AddQuery(\n                    query.PromQL(\"max by (container) (container_memory_rss{stack=\\\"$stack\\\",prometheus=\\\"$prometheus\\\",prometheus_namespace=\\\"$prometheus_namespace\\\",namespace=\\\"$namespace\\\",pod=\\\"$pod\\\",container=\\\"$container\\\"})\"),\n                ),\n            ),\n        ),\n    )\n}\n</code></pre>"},{"location":"perses/docs/dac/go/panel/","title":"Panel Builder","text":""},{"location":"perses/docs/dac/go/panel/#constructor","title":"Constructor","text":"<pre><code>import \"github.com/perses/perses/go-sdk/panel\"\n\nvar options []panel.Option\npanel.New(\"My Super Panel\", options...)\n</code></pre> <p>Need to provide the name of the panel and a list of options.</p>"},{"location":"perses/docs/dac/go/panel/#default-options","title":"Default options","text":"<ul> <li>Title(): with the title provided in the constructor.</li> </ul>"},{"location":"perses/docs/dac/go/panel/#available-options","title":"Available options","text":""},{"location":"perses/docs/dac/go/panel/#title","title":"Title","text":"<pre><code>import \"github.com/perses/perses/go-sdk/panel\" \n\npanel.Name(\"My Super Panel\")\n</code></pre> <p>Define the panel title.</p>"},{"location":"perses/docs/dac/go/panel/#description","title":"Description","text":"<pre><code>import \"github.com/perses/perses/go-sdk/panel\" \n\npanel.Description(\"My Super Panel\")\n</code></pre> <p>Define the panel description.</p>"},{"location":"perses/docs/dac/go/panel/#addquery","title":"AddQuery","text":"<pre><code>import \"github.com/perses/perses/go-sdk/panel\" \n\nvar queryOptions []query.Option\npanel.AddQuery(queryOptions...)\n</code></pre> <p>Define the panel query. More info at Query.</p>"},{"location":"perses/docs/dac/go/panel/#panel-plugin-options","title":"Panel Plugin Options","text":""},{"location":"perses/docs/dac/go/panel/#bar-panel","title":"Bar Panel","text":"<pre><code>import \"github.com/perses/perses/go-sdk/panel/bar\"\n\nvar barOptions []bar.Option\nbar.Chart(barOptions...)\n</code></pre> <p>Define the panel chart. More info at Bar Panel.</p>"},{"location":"perses/docs/dac/go/panel/#gauge-panel","title":"Gauge Panel","text":"<pre><code>import \"github.com/perses/perses/go-sdk/panel/gauge\"\n\nvar gaugeOptions []gauge.Option\ngauge.Chart(gaugeOptions...)\n</code></pre> <p>Define the panel chart. More info at Gauge Panel.</p>"},{"location":"perses/docs/dac/go/panel/#markdown-panel","title":"Markdown Panel","text":"<pre><code>import \"github.com/perses/perses/go-sdk/panel/markdown\"\n\nvar markdownOptions []markdown.Option\nmarkdown.Chart(markdownOptions...)\n</code></pre> <p>Define the panel chart. More info at Markdown Panel.</p>"},{"location":"perses/docs/dac/go/panel/#stat-panel","title":"Stat Panel","text":"<pre><code>import \"github.com/perses/perses/go-sdk/panel/stat\"\n\nvar statOptions []stat.Option\nstat.Chart(statOptions...)\n</code></pre> <p>Define the panel chart. More info at Stat Panel.</p>"},{"location":"perses/docs/dac/go/panel/#time-series-panel","title":"Time Series Panel","text":"<pre><code>import \"github.com/perses/perses/go-sdk/panel/time-series\"\n\nvar timeSeriesOptions []timeseries.Option\ntimeseries.Chart(timeSeriesOptions...)\n</code></pre> <p>Define the panel chart. More info at Time Series Panel.</p>"},{"location":"perses/docs/dac/go/panel/#example","title":"Example","text":"<pre><code>package main\n\nimport (\n    \"github.com/perses/perses/go-sdk/dashboard\"\n    \"github.com/perses/perses/go-sdk/panel\"\n    panelgroup \"github.com/perses/perses/go-sdk/panel-group\"\n    timeseries \"github.com/perses/perses/go-sdk/panel/time-series\"\n    \"github.com/perses/perses/go-sdk/prometheus/query\"\n)\n\nfunc main() {\n    dashboard.New(\"Example Dashboard\",\n        dashboard.AddPanelGroup(\"Resource usage\",\n            panelgroup.AddPanel(\"Container memory\",\n                panel.Description(\"This is a super panel\"),\n                timeseries.Chart(),\n                panel.AddQuery(\n                    query.PromQL(\"max by (container) (container_memory_rss{stack=\\\"$stack\\\",prometheus=\\\"$prometheus\\\",prometheus_namespace=\\\"$prometheus_namespace\\\",namespace=\\\"$namespace\\\",pod=\\\"$pod\\\",container=\\\"$container\\\"})\"),\n                ),\n            ),\n        ),\n    )\n}\n</code></pre>"},{"location":"perses/docs/dac/go/query/","title":"Query Builder","text":""},{"location":"perses/docs/dac/go/query/#constructor","title":"Constructor","text":"<pre><code>import \"github.com/perses/perses/go-sdk/query\"\n\nvar options []query.Option\nquery.New(options...)\n</code></pre> <p>Need to provide a list of options.</p>"},{"location":"perses/docs/dac/go/query/#default-options","title":"Default options","text":"<ul> <li>None</li> </ul>"},{"location":"perses/docs/dac/go/query/#available-options","title":"Available options","text":"<p>None</p>"},{"location":"perses/docs/dac/go/query/#query-plugin-options","title":"Query Plugin Options","text":""},{"location":"perses/docs/dac/go/query/#prometheus-query","title":"Prometheus Query","text":"<pre><code>import \"github.com/perses/perses/go-sdk/prometheus/query\"\n\nquery.PromQL(\"max by (container) (container_memory_rss{})\")\n</code></pre> <p>Set Prometheus Query plugin for the query. More info at Prometheus Query.</p>"},{"location":"perses/docs/dac/go/query/#example","title":"Example","text":"<pre><code>package main\n\nimport (\n    \"github.com/perses/perses/go-sdk/dashboard\"\n    \"github.com/perses/perses/go-sdk/panel\"\n    panelgroup \"github.com/perses/perses/go-sdk/panel-group\"\n    timeseries \"github.com/perses/perses/go-sdk/panel/time-series\"\n    \"github.com/perses/perses/go-sdk/prometheus/query\"\n)\n\nfunc main() {\n    dashboard.New(\"Example Dashboard\",\n        dashboard.AddPanelGroup(\"Resource usage\",\n            panelgroup.AddPanel(\"Container memory\",\n                timeseries.Chart(),\n                panel.AddQuery(\n                    query.PromQL(\"max by (container) (container_memory_rss{stack=\\\"$stack\\\",prometheus=\\\"$prometheus\\\",prometheus_namespace=\\\"$prometheus_namespace\\\",namespace=\\\"$namespace\\\",pod=\\\"$pod\\\",container=\\\"$container\\\"})\"),\n                ),\n            ),\n        ),\n    )\n}\n</code></pre>"},{"location":"perses/docs/dac/go/variable-group/","title":"Variable Group Builder","text":"<p>Variable group is a helper for adding variables to a dashboard. It will automatically filter the variables added to the group. The filter logic is applied by the variable plugin builder. Variables are filtered by their order in the group: first variable will filter the next ones. Ignored variables are filtered, but they don't filter the next variables added to the group.</p>"},{"location":"perses/docs/dac/go/variable-group/#constructor","title":"Constructor","text":"<pre><code>import \"github.com/perses/perses/go-sdk/variable-group\"\n\nvar options []variablegroup.Option\nvariablegroup.New(options...)\n</code></pre> <p>Need a list of options.</p>"},{"location":"perses/docs/dac/go/variable-group/#default-options","title":"Default options","text":"<ul> <li>None</li> </ul>"},{"location":"perses/docs/dac/go/variable-group/#available-options","title":"Available options","text":""},{"location":"perses/docs/dac/go/variable-group/#addvariable","title":"AddVariable","text":"<pre><code>import \"github.com/perses/perses/go-sdk/variable-group\"\nimport \"github.com/perses/perses/go-sdk/variable\"\n\nvar variableOptions []variable.Option\nvariablegroup.AddVariable(\"MySuperVariableName\", variableOptions...)\n</code></pre> <p>Add a variable to the group, this variable will be filtered by variable already present in the group and will filter next variables added. More info at Variable.</p>"},{"location":"perses/docs/dac/go/variable-group/#addignoredvariable","title":"AddIgnoredVariable","text":"<pre><code>import \"github.com/perses/perses/go-sdk/variable-group\"\nimport \"github.com/perses/perses/go-sdk/variable\"\n\nvar variableOptions []variable.Option\nvariablegroup.AddIgnoredVariable(\"MySuperVariableName\", variableOptions...)\n</code></pre> <p>Add a variable to the group, this variable will be filtered by variable already present in the group. However, this variable will not filter next variables added. More info at Variable.</p>"},{"location":"perses/docs/dac/go/variable-group/#example","title":"Example","text":"<pre><code>package main\n\nimport (\n    \"github.com/perses/perses/go-sdk/dashboard\"\n    labelnames \"github.com/perses/perses/go-sdk/prometheus/variable/label-names\"\n    labelvalues \"github.com/perses/perses/go-sdk/prometheus/variable/label-values\"\n    \"github.com/perses/perses/go-sdk/prometheus/variable/promql\"\n    variablegroup \"github.com/perses/perses/go-sdk/variable-group\"\n    listvariable \"github.com/perses/perses/go-sdk/variable/list-variable\"\n    textvariable \"github.com/perses/perses/go-sdk/variable/text-variable\"\n)\n\nfunc main() {\n    dashboard.New(\"ExampleDashboard\",\n        dashboard.AddVariableGroup(\n            variablegroup.AddVariable(\"stack\",\n                listvariable.List(\n                    labelvalues.PrometheusLabelValues(\"stack\",\n                        labelvalues.Matchers(\"thanos_build_info\"),\n                        labelvalues.Datasource(\"promDemo\"),\n                    ),\n                    listvariable.DisplayName(\"PaaS\"),\n                ),\n            ),\n            variablegroup.AddVariable(\"prometheus\",\n                textvariable.Text(\"platform\", textvariable.Constant(true)),\n            ),\n            variablegroup.AddVariable(\"prometheus_namespace\",\n                textvariable.Text(\"observability\",\n                    textvariable.Constant(true),\n                    textvariable.Description(\"constant to reduce the query scope thus improve performances\"),\n                ),\n            ),\n            variablegroup.AddVariable(\"namespace\", listvariable.List(\n                promql.PrometheusPromQL(\"group by (namespace) (kube_namespace_labels{stack=\\\"$stack\\\",prometheus=\\\"$prometheus\\\",prometheus_namespace=\\\"$prometheus_namespace\\\"})\",\n                    promql.LabelName(\"namespace\"), promql.Datasource(\"promDemo\"),\n                ),\n                listvariable.AllowMultiple(true),\n            )),\n            variablegroup.AddIgnoredVariable(\"namespaceLabels\", listvariable.List(\n                labelnames.PrometheusLabelNames(\n                    labelnames.Matchers(\"kube_namespace_labels\"),\n                    labelnames.Datasource(\"promDemo\"),\n                ),\n            )),\n            variablegroup.AddVariable(\"pod\", listvariable.List(\n                promql.PrometheusPromQL(\"group by (pod) (kube_pod_info{stack=\\\"$stack\\\",prometheus=\\\"$prometheus\\\",prometheus_namespace=\\\"$prometheus_namespace\\\",namespace=\\\"$namespace\\\"})\",\n                    promql.LabelName(\"pod\"), promql.Datasource(\"promDemo\"),\n                ),\n                listvariable.AllowMultiple(true),\n                listvariable.AllowAllValue(true),\n            )),\n            variablegroup.AddVariable(\"container\", listvariable.List(\n                promql.PrometheusPromQL(\"group by (container) (kube_pod_container_info{stack=\\\"$stack\\\",prometheus=\\\"$prometheus\\\",prometheus_namespace=\\\"$prometheus_namespace\\\",namespace=\\\"$namespace\\\",pod=\\\"$pod\\\"})\",\n                    promql.LabelName(\"container\"), promql.Datasource(\"promDemo\"),\n                ),\n                listvariable.AllowMultiple(true),\n                listvariable.AllowAllValue(true),\n            )),\n            variablegroup.AddIgnoredVariable(\"containerLabels\", listvariable.List(\n                listvariable.Description(\"simply the list of labels for the considered metric\"),\n                listvariable.Hidden(true),\n                labelnames.PrometheusLabelNames(\n                    labelnames.Matchers(\"kube_pod_container_info\"),\n                    labelnames.Datasource(\"promDemo\"),\n                ),\n            )),\n        ),\n    )\n}\n</code></pre>"},{"location":"perses/docs/dac/go/variable/","title":"Variable Builder","text":""},{"location":"perses/docs/dac/go/variable/#constructor","title":"Constructor","text":"<pre><code>import \"github.com/perses/perses/go-sdk/variable\"\n\nvar options []variable.Option\nvariable.New(\"My Super Variable\", options...)\n</code></pre> <p>Need to provide the name of the varaible and a list of options.</p>"},{"location":"perses/docs/dac/go/variable/#default-options","title":"Default options","text":"<ul> <li>Name(): with the name provided in the constructor.</li> </ul>"},{"location":"perses/docs/dac/go/variable/#available-options","title":"Available options","text":""},{"location":"perses/docs/dac/go/variable/#name","title":"Name","text":"<pre><code>import \"github.com/perses/perses/go-sdk/variable\" \n\nvariable.Name(\"My Super Variable\")\n</code></pre> <p>Define the variable metadata name and the display name.</p>"},{"location":"perses/docs/dac/go/variable/#filter","title":"Filter","text":"<pre><code>import \"github.com/perses/perses/go-sdk/variable\" \n\nvariable.Filter(variables...)\n</code></pre> <p>Mainly used by Mainly used by variable group.. It will filter the current variable with the provided variables. The filter implementation is defined by the variable plugin builder.</p>"},{"location":"perses/docs/dac/go/variable/#spec-options","title":"Spec Options","text":""},{"location":"perses/docs/dac/go/variable/#text-variable","title":"Text Variable","text":""},{"location":"perses/docs/dac/go/variable/#text-variable-constructor","title":"Text Variable Constructor","text":"<pre><code>import txtVar \"github.com/perses/perses/go-sdk/variable/text-variable\"\n\nvar txtVarOptions []txtVar.Option\ntxtVar.Text(\"example-value\", txtVarOptions...)\n</code></pre>"},{"location":"perses/docs/dac/go/variable/#text-variable-options","title":"Text Variable Options","text":""},{"location":"perses/docs/dac/go/variable/#value","title":"Value","text":"<pre><code>import txtVar \"github.com/perses/perses/go-sdk/variable/text-variable\"\n\ntxtVar.Value(\"example-value\")\n</code></pre> <p>Define the value of the text variable.</p>"},{"location":"perses/docs/dac/go/variable/#constant","title":"Constant","text":"<pre><code>import txtVar \"github.com/perses/perses/go-sdk/variable/text-variable\"\n\ntxtVar.Constant(true)\n</code></pre> <p>Define if the text variable is a constant. A constant variable is a variable that can't be changed by the user on the dashboard.</p>"},{"location":"perses/docs/dac/go/variable/#description","title":"Description","text":"<pre><code>import txtVar \"github.com/perses/perses/go-sdk/variable/text-variable\"\n\ntxtVar.Description(\"This is a super description\")\n</code></pre> <p>Set the description of the text variable.</p>"},{"location":"perses/docs/dac/go/variable/#displayname","title":"DisplayName","text":"<pre><code>import txtVar \"github.com/perses/perses/go-sdk/variable/text-variable\"\n\ntxtVar.DisplayName(\"This is a super description\")\n</code></pre> <p>Set the display name of the text variable.</p>"},{"location":"perses/docs/dac/go/variable/#hidden","title":"Hidden","text":"<pre><code>import txtVar \"github.com/perses/perses/go-sdk/variable/text-variable\"\n\ntxtVar.Hidden(true)\n</code></pre> <p>Define if the text variable is hidden. A hidden variable is a variable that is not displayed on the dashboard.</p>"},{"location":"perses/docs/dac/go/variable/#list-variable","title":"List Variable","text":""},{"location":"perses/docs/dac/go/variable/#list-variable-constructor","title":"List Variable Constructor","text":"<pre><code>import listVar \"github.com/perses/perses/go-sdk/variable/text-variable\"\n\nvar listVarOptions []listVar.Option\nlistVar.List(listVarOptions...)\n</code></pre>"},{"location":"perses/docs/dac/go/variable/#list-variable-options","title":"List Variable Options","text":""},{"location":"perses/docs/dac/go/variable/#defaultvalue","title":"DefaultValue","text":"<pre><code>import listVar \"github.com/perses/perses/go-sdk/variable/text-variable\"\n\nlistVar.DefaultValue(\"example-value\")\n</code></pre> <p>Define a single default value for the list variable.</p>"},{"location":"perses/docs/dac/go/variable/#allowallvalue","title":"AllowAllValue","text":"<pre><code>import listVar \"github.com/perses/perses/go-sdk/variable/text-variable\"\n\nlistVar.AllowAllValue(true)\n</code></pre> <p>Define if the \"all\" value is allowed. If set to true, the list variable will have an \"all\" option that will select all values for the variable.</p>"},{"location":"perses/docs/dac/go/variable/#allowmultiple","title":"AllowMultiple","text":"<pre><code>import listVar \"github.com/perses/perses/go-sdk/variable/text-variable\"\n\nlistVar.AllowMultiple(\"This is a super description\")\n</code></pre> <p>Define if the list variable allows multiple values to be selected. If set to true, the list variable will allow multiple values to be selected by the user on the dashboard.</p>"},{"location":"perses/docs/dac/go/variable/#customallvalue","title":"CustomAllValue","text":"<pre><code>import listVar \"github.com/perses/perses/go-sdk/variable/text-variable\"\n\nlistVar.CustomAllValue(\"MySuperAllValueCustom\")\n</code></pre> <p>Define a custom value for the \"all\" option.</p>"},{"location":"perses/docs/dac/go/variable/#capturingregexp","title":"CapturingRegexp","text":"<pre><code>import listVar \"github.com/perses/perses/go-sdk/variable/text-variable\"\n\nlistVar.CapturingRegexp(\"^mysuperregexp.*\")\n</code></pre> <p>Define a capturing regexp for the list variable. It will only list the values that match the regexp.</p>"},{"location":"perses/docs/dac/go/variable/#sortingby","title":"SortingBy","text":"<pre><code>import listVar \"github.com/perses/perses/go-sdk/variable/text-variable\"\n\nlistVar.SortingBy(listVar.SortingAlphabeticalAsc)\n</code></pre> <p>Define the sorting order of the list variable. The available options are: \"none\", \"alphabetical-asc\", \"alphabetical-desc\", \"numerical-asc\", \"numerical-desc\", \"alphabetical-ci-asc\" and \"alphabetical-ci-desc\".</p>"},{"location":"perses/docs/dac/go/variable/#description_1","title":"Description","text":"<pre><code>import listVar \"github.com/perses/perses/go-sdk/variable/text-variable\"\n\nlistVar.Description(\"This is a super description\")\n</code></pre> <p>Set the description of the list variable.</p>"},{"location":"perses/docs/dac/go/variable/#displayname_1","title":"DisplayName","text":"<pre><code>import listVar \"github.com/perses/perses/go-sdk/variable/text-variable\"\n\nlistVar.DisplayName(\"This is a super description\")\n</code></pre> <p>Set the display name of the list variable.</p>"},{"location":"perses/docs/dac/go/variable/#hidden_1","title":"Hidden","text":"<pre><code>import listVar \"github.com/perses/perses/go-sdk/variable/text-variable\"\n\nlistVar.Hidden(true)\n</code></pre> <p>Define if the list variable is hidden. A hidden variable is a variable that is not displayed on the dashboard.</p>"},{"location":"perses/docs/dac/go/variable/#variable-plugin-options","title":"Variable Plugin Options","text":""},{"location":"perses/docs/dac/go/variable/#static-list-list-variable","title":"Static list (List Variable)","text":"<pre><code>import staticlist \"github.com/perses/perses/go-sdk/variable/plugin/static-list\"\n\nstaticListOptions := []staticlist.Option{\n    staticlist.Values(\"abc\", \"def\"),\n}\nstaticlist.StaticList(staticListOptions...)\n</code></pre>"},{"location":"perses/docs/dac/go/variable/#prometheus-promql-list-variable","title":"Prometheus PromQL (List Variable)","text":"<pre><code>import promqlVar \"github.com/perses/perses/go-sdk/prometheus/variable/promql\"\n\nvar promqlVarOptions []promqlVar.Option\npromqlVar.PrometheusPromQL(\"group by (namespace) (kube_namespace_labels{})\", promqlVarOptions...)\n</code></pre> <p>Use a Prometheus query to populate the list variable. More info at PromQL Variable.</p>"},{"location":"perses/docs/dac/go/variable/#prometheus-label-names-list-variable","title":"Prometheus Label Names (List Variable)","text":"<pre><code>import labelNamesVar \"github.com/perses/perses/go-sdk/prometheus/variable/label-names\"\n\nvar labelNamesVarOptions []labelNamesVar.Option\nlabelNamesVar.PrometheusLabelNames(labelNamesVarOptions...)\n</code></pre> <p>Use label names from a Prometheus datasource to populate the list variable. More info at Label Names Variable.</p>"},{"location":"perses/docs/dac/go/variable/#prometheus-label-values-list-variable","title":"Prometheus Label Values (List Variable)","text":"<pre><code>import labelValuesVar \"github.com/perses/perses/go-sdk/prometheus/variable/label-values\"\n\nvar labelValuesVarOptions []labelValuesVar.Option\nlabelValuesVar.PrometheusLabelValues(\"labelNames\", labelNamesVarOptions...)\n</code></pre> <p>Use label values from a Prometheus datasource to populate the list variable. More info at Label Values Variable.</p>"},{"location":"perses/docs/dac/go/variable/#example","title":"Example","text":"<pre><code>package main\n\nimport (\n    \"github.com/perses/perses/go-sdk/dashboard\"\n    labelvalues \"github.com/perses/perses/go-sdk/prometheus/variable/label-values\"\n    listvariable \"github.com/perses/perses/go-sdk/variable/list-variable\"\n)\n\nfunc main() {\n    dashboard.New(\"ExampleDashboard\",\n        dashboard.AddVariable(\"stack\",\n            listvariable.List(\n                labelvalues.PrometheusLabelValues(\"stack\",\n                    labelvalues.Matchers(\"thanos_build_info{}\"),\n                    labelvalues.Datasource(\"prometheusDemo\"),\n                ),\n                listvariable.DisplayName(\"PaaS\"),\n            ),\n        ),\n    )\n}\n</code></pre>"},{"location":"perses/docs/dac/go/helper/http-proxy/","title":"HTTP Builder","text":""},{"location":"perses/docs/dac/go/helper/http-proxy/#constructor","title":"Constructor","text":"<pre><code>import \"github.com/perses/perses/go-sdk/http\"\n\nvar options []http.Option\nhttp.New(\"http://mysuperurl.com\", options...)\n</code></pre> <p>Need to provide an url and a list of options.</p>"},{"location":"perses/docs/dac/go/helper/http-proxy/#default-options","title":"Default options","text":"<ul> <li>URL(): with the url provided in the constructor</li> </ul>"},{"location":"perses/docs/dac/go/helper/http-proxy/#available-options","title":"Available options","text":""},{"location":"perses/docs/dac/go/helper/http-proxy/#url","title":"URL","text":"<pre><code>import \"github.com/perses/perses/go-sdk/http\" \n\nhttp.URL(\"http://mysuperurl.com\")\n</code></pre> <p>Define the url of the http proxy.</p>"},{"location":"perses/docs/dac/go/helper/http-proxy/#allowedendpoints","title":"AllowedEndpoints","text":"<pre><code>import \"github.com/perses/perses/go-sdk/http\" \n\nvar endpoints []http.AllowedEndpoint\nhttp.AllowedEndpoints(endpoints...)\n</code></pre> <p>Define the proxy allowed endpoints.</p>"},{"location":"perses/docs/dac/go/helper/http-proxy/#addallowedendpoint","title":"AddAllowedEndpoint","text":"<pre><code>import \"github.com/perses/perses/go-sdk/http\"\n\nhttp.Thresholds(\"GET\", \"/api/v1/labels\")\n</code></pre> <p>Add an allowed endpoint to the http proxy.</p>"},{"location":"perses/docs/dac/go/helper/http-proxy/#headers","title":"Headers","text":"<pre><code>import \"github.com/perses/perses/go-sdk/http\" \n\nvar headers := make(map[string]string)\nhttp.WithSparkline(headers)\n</code></pre> <p>Define the headers of the http proxy.</p>"},{"location":"perses/docs/dac/go/helper/http-proxy/#addheader","title":"AddHeader","text":"<pre><code>import \"github.com/perses/perses/go-sdk/http\" \n\nhttp.AddHeader(\"Authorization\", \"Bearer test\")\n</code></pre> <p>Add a header to the http proxy.</p>"},{"location":"perses/docs/dac/go/helper/http-proxy/#secret","title":"Secret","text":"<pre><code>import \"github.com/perses/perses/go-sdk/http\" \n\nhttp.Secret(\"secretName\")\n</code></pre> <p>Define the secret name to use for the http proxy.</p>"},{"location":"perses/docs/dac/go/helper/http-proxy/#example","title":"Example","text":"<pre><code>package main\n\nimport (\n    \"github.com/perses/perses/go-sdk/dashboard\"\n    \"github.com/perses/perses/go-sdk/http\"\n\n    promDs \"github.com/perses/perses/go-sdk/prometheus/datasource\"\n)\n\nfunc main() {\n    dashboard.New(\"Example Dashboard\",\n        dashboard.AddDatasource(\"prometheusDemo\", promDs.Prometheus(\n            promDs.HTTPProxy(\"https://prometheus.demo.do.prometheus.io/\", http.AddHeader(\"Authorization\", \"Bearer test\")), \n        )),\n    )\n}\n</code></pre>"},{"location":"perses/docs/dac/go/panel/bar/","title":"Bar Panel Builder","text":""},{"location":"perses/docs/dac/go/panel/bar/#constructor","title":"Constructor","text":"<pre><code>import \"github.com/perses/perses/go-sdk/panel/bar\"\n\nvar options []bar.Option\nbar.Chart(options...)\n</code></pre> <p>Need a list of options.</p>"},{"location":"perses/docs/dac/go/panel/bar/#default-options","title":"Default options","text":"<ul> <li>Calculation(): last</li> </ul>"},{"location":"perses/docs/dac/go/panel/bar/#available-options","title":"Available options","text":""},{"location":"perses/docs/dac/go/panel/bar/#calculation","title":"Calculation","text":"<pre><code>import \"github.com/perses/perses/go-sdk/common\"\nimport \"github.com/perses/perses/go-sdk/panel/bar\" \n\nbar.Calculation(common.Last)\n</code></pre> <p>Define the chart calculation.</p>"},{"location":"perses/docs/dac/go/panel/bar/#format","title":"Format","text":"<pre><code>import \"github.com/perses/perses/go-sdk/common\"\nimport \"github.com/perses/perses/go-sdk/panel/bar\" \n\nbar.Format(common.Format{...})\n</code></pre> <p>Define the chart format.</p>"},{"location":"perses/docs/dac/go/panel/bar/#sortingby","title":"SortingBy","text":"<pre><code>import \"github.com/perses/perses/go-sdk/panel/bar\" \n\nbar.SortingBy(bar.AscSort)\n</code></pre> <p>Define the chart sorting.</p>"},{"location":"perses/docs/dac/go/panel/bar/#withmode","title":"WithMode","text":"<pre><code>import \"github.com/perses/perses/go-sdk/panel/bar\" \n\nbar.WithMode(bar.PercentageMode)\n</code></pre> <p>Define the chart mode.</p>"},{"location":"perses/docs/dac/go/panel/bar/#example","title":"Example","text":"<pre><code>package main\n\nimport (\n    \"github.com/perses/perses/go-sdk/common\"\n    \"github.com/perses/perses/go-sdk/dashboard\"\n    panelgroup \"github.com/perses/perses/go-sdk/panel-group\"\n    \"github.com/perses/perses/go-sdk/panel/bar\"\n)\n\nfunc main() {\n    dashboard.New(\"Example Dashboard\",\n        dashboard.AddPanelGroup(\"Resource usage\",\n            panelgroup.AddPanel(\"Container memory\",\n                bar.Chart(\n                    bar.Calculation(common.LastCalculation),\n                    bar.Format(common.Format{\n                        Unit: common.BytesUnit,\n                    }),\n                    bar.SortingBy(bar.AscSort),\n                    bar.WithMode(bar.PercentageMode),\n                ),\n            ),\n        ),\n    )\n}\n</code></pre>"},{"location":"perses/docs/dac/go/panel/gauge/","title":"Gauge Panel Builder","text":""},{"location":"perses/docs/dac/go/panel/gauge/#constructor","title":"Constructor","text":"<pre><code>import \"github.com/perses/perses/go-sdk/panel/gauge\"\n\nvar options []gauge.Option\ngauge.Chart(options...)\n</code></pre> <p>Need a list of options.</p>"},{"location":"perses/docs/dac/go/panel/gauge/#default-options","title":"Default options","text":"<ul> <li>Calculation(): last</li> </ul>"},{"location":"perses/docs/dac/go/panel/gauge/#available-options","title":"Available options","text":""},{"location":"perses/docs/dac/go/panel/gauge/#calculation","title":"Calculation","text":"<pre><code>import \"github.com/perses/perses/go-sdk/common\"\nimport \"github.com/perses/perses/go-sdk/panel/gauge\" \n\ngauge.Calculation(common.Last)\n</code></pre> <p>Define the chart calculation.</p>"},{"location":"perses/docs/dac/go/panel/gauge/#format","title":"Format","text":"<pre><code>import \"github.com/perses/perses/go-sdk/common\"\nimport \"github.com/perses/perses/go-sdk/panel/gauge\" \n\ngauge.Format(common.Format{...})\n</code></pre> <p>Define the chart format.</p>"},{"location":"perses/docs/dac/go/panel/gauge/#thresholds","title":"Thresholds","text":"<pre><code>import \"github.com/perses/perses/go-sdk/common\"\nimport \"github.com/perses/perses/go-sdk/panel/gauge\" \n\ngauge.Thresholds(common.Thresholds{...})\n</code></pre> <p>Define chart thresholds.</p>"},{"location":"perses/docs/dac/go/panel/gauge/#max","title":"Max","text":"<pre><code>import \"github.com/perses/perses/go-sdk/panel/gauge\" \n\ngauge.Max(20)\n</code></pre> <p>Define the chart max value.</p>"},{"location":"perses/docs/dac/go/panel/gauge/#example","title":"Example","text":"<pre><code>package main\n\nimport (\n    \"github.com/perses/perses/go-sdk/common\"\n    \"github.com/perses/perses/go-sdk/dashboard\"\n    panelgroup \"github.com/perses/perses/go-sdk/panel-group\"\n    \"github.com/perses/perses/go-sdk/panel/gauge\"\n)\n\nfunc main() {\n    dashboard.New(\"Example Dashboard\",\n        dashboard.AddPanelGroup(\"Resource usage\",\n            panelgroup.AddPanel(\"Container memory\",\n                gauge.Chart(\n                    gauge.Calculation(common.LastCalculation),\n                    gauge.Format(common.Format{\n                        Unit: common.BytesUnit,\n                    }),\n                    gauge.Max(20),\n                ),\n            ),\n        ),\n    )\n}\n</code></pre>"},{"location":"perses/docs/dac/go/panel/markdown/","title":"Markdown Panel Builder","text":""},{"location":"perses/docs/dac/go/panel/markdown/#constructor","title":"Constructor","text":"<pre><code>import \"github.com/perses/perses/go-sdk/panel/markdown\"\n\nvar options []markdown.Option\nmarkdown.Markdown(\"My super markdown **text**\", options...)\n</code></pre> <p>Need to provide a text and a list of options.</p>"},{"location":"perses/docs/dac/go/panel/markdown/#default-options","title":"Default options","text":"<ul> <li>Text(): with the text provided in the constructor</li> </ul>"},{"location":"perses/docs/dac/go/panel/markdown/#available-options","title":"Available options","text":""},{"location":"perses/docs/dac/go/panel/markdown/#text","title":"Text","text":"<pre><code>import \"github.com/perses/perses/go-sdk/panel/markdown\" \n\nmarkdown.Text(\"My super markdown **text**\")\n</code></pre> <p>Define the markdown text of the panel.</p>"},{"location":"perses/docs/dac/go/panel/markdown/#newline","title":"NewLine","text":"<pre><code>import \"github.com/perses/perses/go-sdk/panel/markdown\" \n\nmarkdown.NewLine(\"my super new line text\")\n</code></pre> <p>Add a new line to the markdown text.</p>"},{"location":"perses/docs/dac/go/panel/markdown/#example","title":"Example","text":"<pre><code>package main\n\nimport (\n    \"github.com/perses/perses/go-sdk/dashboard\"\n    panelgroup \"github.com/perses/perses/go-sdk/panel-group\"\n    \"github.com/perses/perses/go-sdk/panel/markdown\"\n)\n\nfunc main() {\n    dashboard.New(\"Example Dashboard\",\n        dashboard.AddPanelGroup(\"Resource usage\",\n            panelgroup.AddPanel(\"Container memory\",\n                markdown.Markdown(\"This is a markdown panel\",\n                    markdown.NewLine(\"This is a new line\"),\n                    markdown.NewLine(\"This is a new line\"),\n                    markdown.NewLine(\"This is a new line\"),\n                    markdown.NewLine(\"This is a new line\"),\n                    markdown.NewLine(\"This is a new line\"),\n                    markdown.NewLine(\"This is a new line\"),\n                ),\n            ),\n        ),\n    )\n}\n</code></pre>"},{"location":"perses/docs/dac/go/panel/stat/","title":"Stat Panel Builder","text":""},{"location":"perses/docs/dac/go/panel/stat/#constructor","title":"Constructor","text":"<pre><code>import \"github.com/perses/perses/go-sdk/panel/stat\"\n\nvar options []stat.Option\nstat.Chart(options...)\n</code></pre> <p>Need a list of options.</p>"},{"location":"perses/docs/dac/go/panel/stat/#default-options","title":"Default options","text":"<ul> <li>Calculation(): last</li> </ul>"},{"location":"perses/docs/dac/go/panel/stat/#available-options","title":"Available options","text":""},{"location":"perses/docs/dac/go/panel/stat/#calculation","title":"Calculation","text":"<pre><code>import \"github.com/perses/perses/go-sdk/common\"\nimport \"github.com/perses/perses/go-sdk/panel/stat\" \n\nstat.Calculation(common.Last)\n</code></pre> <p>Define the chart calculation.</p>"},{"location":"perses/docs/dac/go/panel/stat/#format","title":"Format","text":"<pre><code>import \"github.com/perses/perses/go-sdk/common\"\nimport \"github.com/perses/perses/go-sdk/panel/stat\" \n\nstat.Format(common.Format{...})\n</code></pre> <p>Define the chart format.</p>"},{"location":"perses/docs/dac/go/panel/stat/#thresholds","title":"Thresholds","text":"<pre><code>import \"github.com/perses/perses/go-sdk/common\"\nimport \"github.com/perses/perses/go-sdk/panel/stat\"\n\nstat.Thresholds(common.Thresholds{...})\n</code></pre> <p>Define chart thresholds.</p>"},{"location":"perses/docs/dac/go/panel/stat/#withsparkline","title":"WithSparkline","text":"<pre><code>import \"github.com/perses/perses/go-sdk/panel/stat\" \n\nstat.WithSparkline(stat.Sparkline{...})\n</code></pre> <p>Define the sparkline of the chart.</p>"},{"location":"perses/docs/dac/go/panel/stat/#valuefontsize","title":"ValueFontSize","text":"<pre><code>import \"github.com/perses/perses/go-sdk/panel/stat\" \n\nstat.ValueFontSize(12)\n</code></pre> <p>Define the font size of the value.</p>"},{"location":"perses/docs/dac/go/panel/stat/#example","title":"Example","text":"<pre><code>package main\n\nimport (\n    \"github.com/perses/perses/go-sdk/dashboard\"\n    panelgroup \"github.com/perses/perses/go-sdk/panel-group\"\n    \"github.com/perses/perses/go-sdk/panel/stat\"\n)\n\nfunc main() {\n    dashboard.New(\"Example Dashboard\",\n        dashboard.AddPanelGroup(\"Resource usage\",\n            panelgroup.AddPanel(\"Container memory\",\n                stat.Chart(\n                    stat.WithSparkline(stat.Sparkline{\n                        Color: \"#e65013\",\n                        Width: 1,\n                    }),\n                ),\n            ),\n        ),\n    )\n}\n</code></pre>"},{"location":"perses/docs/dac/go/panel/time-series/","title":"TimeSeries Panel Builder","text":""},{"location":"perses/docs/dac/go/panel/time-series/#constructor","title":"Constructor","text":"<pre><code>import \"github.com/perses/perses/go-sdk/panel/time-series\"\n\nvar options []timeseries.Option\ntimeseries.Chart(options...)\n</code></pre> <p>Need a list of options.</p>"},{"location":"perses/docs/dac/go/panel/time-series/#default-options","title":"Default options","text":"<ul> <li>None</li> </ul>"},{"location":"perses/docs/dac/go/panel/time-series/#available-options","title":"Available options","text":""},{"location":"perses/docs/dac/go/panel/time-series/#withlegend","title":"WithLegend","text":"<pre><code>import \"github.com/perses/perses/go-sdk/common\"\nimport \"github.com/perses/perses/go-sdk/panel/time-series\"\n\ntimeseries.WithLegend(timeseries.Legend{...})\n</code></pre> <p>Define legend properties of the chart.</p>"},{"location":"perses/docs/dac/go/panel/time-series/#withtooltip","title":"WithTooltip","text":"<pre><code>import \"github.com/perses/perses/go-sdk/common\"\nimport \"github.com/perses/perses/go-sdk/panel/time-series\"\n\ntimeseries.WithTooltip(timeseries.Tooltip{...})\n</code></pre> <p>Define tooltip properties of the chart.</p>"},{"location":"perses/docs/dac/go/panel/time-series/#withyaxis","title":"WithYAxis","text":"<pre><code>import \"github.com/perses/perses/go-sdk/common\"\nimport \"github.com/perses/perses/go-sdk/panel/time-series\"\n\ntimeseries.WithYAxis(timeseries.YAxis{...})\n</code></pre> <p>Define Y axis properties of the chart.</p>"},{"location":"perses/docs/dac/go/panel/time-series/#thresholds","title":"Thresholds","text":"<pre><code>import \"github.com/perses/perses/go-sdk/common\"\nimport \"github.com/perses/perses/go-sdk/panel/time-series\"\n\ntimeseries.Thresholds(common.Thresholds{...})\n</code></pre> <p>Define chart thresholds.</p>"},{"location":"perses/docs/dac/go/panel/time-series/#withvisual","title":"WithVisual","text":"<pre><code>import \"github.com/perses/perses/go-sdk/panel/time-series\"\n\ntimeseries.WithVisual(timeseries.Visual{...})\n</code></pre> <p>Define visual properties of the chart.</p>"},{"location":"perses/docs/dac/go/panel/time-series/#withquerysettings","title":"WithQuerySettings","text":"<pre><code>import \"github.com/perses/perses/go-sdk/panel/time-series\"\n\ntimeseries.WithQuerySettings([]timeseries.QuerySettingsItem{...})\n</code></pre> <p>Define settings for the queries.</p>"},{"location":"perses/docs/dac/go/panel/time-series/#example","title":"Example","text":"<pre><code>package main\n\nimport (\n    \"github.com/perses/perses/go-sdk/dashboard\"\n    panelgroup \"github.com/perses/perses/go-sdk/panel-group\"\n    timeseries \"github.com/perses/perses/go-sdk/panel/time-series\"\n)\n\nfunc main() {\n    dashboard.New(\"Example Dashboard\",\n        dashboard.AddPanelGroup(\"Resource usage\",\n            panelgroup.AddPanel(\"Container memory\",\n                timeseries.Chart(\n                    timeseries.WithLegend(timeseries.Legend{\n                        Position: timeseries.BottomPosition,\n                        Mode:     timeseries.ListMode,\n                        Size:     timeseries.SmallSize,\n                    }),\n                    timeseries.WithTooltip(timeseries.Tooltip{\n                        EnablePinning: false,\n                    }),\n                ),\n            ),\n        ),\n    )\n}\n</code></pre>"},{"location":"perses/docs/dac/go/prometheus/datasource/","title":"Prometheus Datasource Builder","text":""},{"location":"perses/docs/dac/go/prometheus/datasource/#constructor","title":"Constructor","text":"<pre><code>import \"github.com/perses/perses/go-sdk/prometheus/datasource\"\n\nvar options []datasource.Option\ndatasource.Prometheus(options...)\n</code></pre> <p>Need a list of options. At least direct URL or proxy URL, in order to work.</p>"},{"location":"perses/docs/dac/go/prometheus/datasource/#default-options","title":"Default options","text":"<ul> <li>None</li> </ul>"},{"location":"perses/docs/dac/go/prometheus/datasource/#available-options","title":"Available options","text":""},{"location":"perses/docs/dac/go/prometheus/datasource/#direct-url","title":"Direct URL","text":"<pre><code>import \"github.com/perses/perses/go-sdk/prometheus/datasource\"\n\ndatasource.DirectURL(\"https://prometheus.demo.do.prometheus.io\")\n</code></pre> <p>Set Prometheus plugin for the datasource with a direct URL.</p>"},{"location":"perses/docs/dac/go/prometheus/datasource/#proxy","title":"Proxy","text":"<pre><code>import \"github.com/perses/perses/go-sdk/prometheus/datasource\"\n\ndatasource.HTTPProxy(\"https://current-domain-name.io\", httpProxyOptions...)\n</code></pre> <p>Set Prometheus plugin for the datasource with a proxy URL, useful for bypassing. More info at HTTP Proxy.</p>"},{"location":"perses/docs/dac/go/prometheus/datasource/#example","title":"Example","text":"<pre><code>package main\n\nimport (\n    \"github.com/perses/perses/go-sdk/dashboard\"\n\n    promDs \"github.com/perses/perses/go-sdk/prometheus/datasource\"\n)\n\nfunc main() {\n    dashboard.New(\"Example Dashboard\",\n        dashboard.AddDatasource(\"prometheusDemo\", promDs.Prometheus(promDs.DirectURL(\"https://prometheus.demo.do.prometheus.io/\"))),\n    )\n}\n</code></pre>"},{"location":"perses/docs/dac/go/prometheus/query/","title":"Prometheus Query Builder","text":""},{"location":"perses/docs/dac/go/prometheus/query/#constructor","title":"Constructor","text":"<pre><code>import \"github.com/perses/perses/go-sdk/prometheus/query\"\n\nvar options []query.Option\nquery.PromQL(\"max by (container) (container_memory_rss{})\", options...)\n</code></pre> <p>Need to provide the PromQL expression and a list of options.</p>"},{"location":"perses/docs/dac/go/prometheus/query/#default-options","title":"Default options","text":"<ul> <li>Expr(): with the expression provided in the constructor.</li> </ul>"},{"location":"perses/docs/dac/go/prometheus/query/#available-options","title":"Available options","text":""},{"location":"perses/docs/dac/go/prometheus/query/#expr","title":"Expr","text":"<pre><code>import \"github.com/perses/perses/go-sdk/prometheus/query\"\n\nquery.Expr(\"max by (container) (container_memory_rss{})\")\n</code></pre> <p>Define query expression.</p>"},{"location":"perses/docs/dac/go/prometheus/query/#datasource","title":"Datasource","text":"<pre><code>import \"github.com/perses/perses/go-sdk/prometheus/query\"\n\nquery.Datasource(\"MySuperDatasource\")\n</code></pre> <p>Define the datasource the query will use.</p>"},{"location":"perses/docs/dac/go/prometheus/query/#seriesnameformat","title":"SeriesNameFormat","text":"<pre><code>import \"github.com/perses/perses/go-sdk/prometheus/query\"\n\nquery.SeriesNameFormat(\"\") // TODO: check\n</code></pre> <p>Define query series name format.</p>"},{"location":"perses/docs/dac/go/prometheus/query/#minstep","title":"MinStep","text":"<pre><code>import \"time\"\nimport \"github.com/perses/perses/go-sdk/prometheus/query\"\n\nquery.MinStep(5*time.Minute)\n</code></pre> <p>Define query min step.</p>"},{"location":"perses/docs/dac/go/prometheus/query/#resolution","title":"Resolution","text":"<pre><code>import \"github.com/perses/perses/go-sdk/prometheus/query\"\n\nquery.Resolution(3600)\n</code></pre> <p>Define query resolution.</p>"},{"location":"perses/docs/dac/go/prometheus/query/#example","title":"Example","text":"<pre><code>package main\n\nimport (\n    \"time\"\n\n    \"github.com/perses/perses/go-sdk/dashboard\"\n    \"github.com/perses/perses/go-sdk/panel\"\n    panelgroup \"github.com/perses/perses/go-sdk/panel-group\"\n    timeseries \"github.com/perses/perses/go-sdk/panel/time-series\"\n    \"github.com/perses/perses/go-sdk/prometheus/query\"\n)\n\nfunc main() {\n    dashboard.New(\"Example Dashboard\",\n        dashboard.AddPanelGroup(\"Resource usage\",\n            panelgroup.AddPanel(\"Container memory\",\n                timeseries.Chart(),\n                panel.AddQuery(\n                    query.PromQL(\"max by (container) (container_memory_rss{stack=\\\"$stack\\\",prometheus=\\\"$prometheus\\\",prometheus_namespace=\\\"$prometheus_namespace\\\",namespace=\\\"$namespace\\\",pod=\\\"$pod\\\",container=\\\"$container\\\"})\",\n                        query.MinStep(time.Minute),\n                    ),\n                ),\n            ),\n        ),\n    )\n}\n</code></pre>"},{"location":"perses/docs/dac/go/prometheus/variable/label-names/","title":"Label-Names Variable Builder","text":""},{"location":"perses/docs/dac/go/prometheus/variable/label-names/#constructor","title":"Constructor","text":"<pre><code>import \"github.com/perses/perses/go-sdk/prometheus/label-names\"\n\nvar options []labelnames.Option\nlabelnames.PrometheusLabelNames(options...)\n</code></pre> <p>Need a list of options.</p>"},{"location":"perses/docs/dac/go/prometheus/variable/label-names/#default-options","title":"Default options","text":"<ul> <li>None</li> </ul>"},{"location":"perses/docs/dac/go/prometheus/variable/label-names/#available-options","title":"Available options","text":""},{"location":"perses/docs/dac/go/prometheus/variable/label-names/#matchers","title":"Matchers","text":"<pre><code>import \"github.com/perses/perses/go-sdk/prometheus/label-names\" \n\nvar matchers []string\nlabelnames.Matchers(matchers...)\n</code></pre> <p>Define matchers filtering the result.</p>"},{"location":"perses/docs/dac/go/prometheus/variable/label-names/#addmatcher","title":"AddMatcher","text":"<pre><code>import \"github.com/perses/perses/go-sdk/prometheus/label-names\"\n\nlabelnames.AddMatcher(\"my_super_matcher\")\n</code></pre> <p>Define a matcher filtering the result.</p>"},{"location":"perses/docs/dac/go/prometheus/variable/label-names/#datasource","title":"Datasource","text":"<pre><code>import \"github.com/perses/perses/go-sdk/prometheus/label-names\"\n\nlabelnames.Datasource(\"datasourceName\")\n</code></pre> <p>Define the datasource where the expression will be executed.</p>"},{"location":"perses/docs/dac/go/prometheus/variable/label-names/#filter","title":"Filter","text":"<pre><code>import \"github.com/perses/perses/go-sdk/variable\" \n\nvariable.Filter(variables...)\n</code></pre> <p>Mainly used by Mainly used by variable group.. It will filter the current variable with the provided variables. The filter will be applied only if matchers don't have curly brackets.</p>"},{"location":"perses/docs/dac/go/prometheus/variable/label-names/#example","title":"Example","text":"<pre><code>package main\n\nimport (\n    \"github.com/perses/perses/go-sdk/dashboard\"\n    labelnames \"github.com/perses/perses/go-sdk/prometheus/variable/label-names\"\n    listvariable \"github.com/perses/perses/go-sdk/variable/list-variable\"\n)\n\nfunc main() {\n    dashboard.New(\"Example Dashboard\",\n        dashboard.AddVariable(\"namespaceLabels\", listvariable.List(\n            labelnames.PrometheusLabelNames(\n                labelnames.Matchers(\"kube_namespace_labels{stack=\\\"$stack\\\",prometheus=\\\"$prometheus\\\",prometheus_namespace=\\\"$prometheus_namespace\\\",namespace=\\\"$namespace\\\"}\"),\n                labelnames.Datasource(\"prometheusDemo\"),\n            ),\n        )),\n    )\n}\n</code></pre>"},{"location":"perses/docs/dac/go/prometheus/variable/label-values/","title":"Label-Values Variable Builder","text":""},{"location":"perses/docs/dac/go/prometheus/variable/label-values/#constructor","title":"Constructor","text":"<pre><code>import \"github.com/perses/perses/go-sdk/prometheus/label-values\"\n\nvar options []labelvalues.Option\nlabelvalues.PrometheusLabelValues(\"my_super_label_name\", options...)\n</code></pre> <p>Need to provide a label name and a list of options.</p>"},{"location":"perses/docs/dac/go/prometheus/variable/label-values/#default-options","title":"Default options","text":"<ul> <li>LabelName(): with the label name provided in the constructor.</li> </ul>"},{"location":"perses/docs/dac/go/prometheus/variable/label-values/#available-options","title":"Available options","text":""},{"location":"perses/docs/dac/go/prometheus/variable/label-values/#labelname","title":"LabelName","text":"<pre><code>import \"github.com/perses/perses/go-sdk/prometheus/label-values\" \n\nlabelvalues.LabelName(\"my_super_label_name\")\n</code></pre> <p>Define the label name where value will be retrieved.</p>"},{"location":"perses/docs/dac/go/prometheus/variable/label-values/#matchers","title":"Matchers","text":"<pre><code>import \"github.com/perses/perses/go-sdk/prometheus/label-values\" \n\nvar matchers []string\nlabelvalues.Matchers(matchers...)\n</code></pre> <p>Define matchers filtering the result.</p>"},{"location":"perses/docs/dac/go/prometheus/variable/label-values/#addmatcher","title":"AddMatcher","text":"<pre><code>import \"github.com/perses/perses/go-sdk/prometheus/label-values\"\n\nlabelvalues.AddMatcher(\"my_super_matcher\")\n</code></pre> <p>Define a matcher filtering the result.</p>"},{"location":"perses/docs/dac/go/prometheus/variable/label-values/#datasource","title":"Datasource","text":"<pre><code>import \"github.com/perses/perses/go-sdk/prometheus/label-values\"\n\nlabelvalues.Datasource(\"datasourceValue\")\n</code></pre> <p>Define the datasource where the expression will be executed.</p>"},{"location":"perses/docs/dac/go/prometheus/variable/label-values/#filter","title":"Filter","text":"<pre><code>import \"github.com/perses/perses/go-sdk/variable\" \n\nvariable.Filter(variables...)\n</code></pre> <p>Mainly used by variable group. It will filter the current variable with the provided variables. The filter will be applied only if matchers don't have curly brackets.</p>"},{"location":"perses/docs/dac/go/prometheus/variable/label-values/#example","title":"Example","text":"<pre><code>package main\n\nimport (\n    \"github.com/perses/perses/go-sdk/dashboard\"\n    labelvalues \"github.com/perses/perses/go-sdk/prometheus/variable/label-values\"\n    listvariable \"github.com/perses/perses/go-sdk/variable/list-variable\"\n)\n\nfunc main() {\n    dashboard.New(\"Example Dashboard\",\n        dashboard.AddVariable(\"stack\",\n            listvariable.List(\n                labelvalues.PrometheusLabelValues(\"stack\",\n                    labelvalues.Matchers(\"thanos_build_info{}\"),\n                    labelvalues.Datasource(\"prometheusDemo\"),\n                ),\n                listvariable.DisplayName(\"PaaS\"),\n            ),\n        ),\n    )\n}\n</code></pre>"},{"location":"perses/docs/dac/go/prometheus/variable/promql/","title":"PromQL Variable Builder","text":""},{"location":"perses/docs/dac/go/prometheus/variable/promql/#constructor","title":"Constructor","text":"<pre><code>import \"github.com/perses/perses/go-sdk/prometheus/promql\"\n\nvar options []promql.Option\npromql.PrometheusPromQL(\"group by (namespace) (kube_namespace_labels{}\", options...)\n</code></pre> <p>Need to provide the name of the variable and a list of options.</p>"},{"location":"perses/docs/dac/go/prometheus/variable/promql/#default-options","title":"Default options","text":"<ul> <li>Expr(): with the expr provided in the constructor.</li> </ul>"},{"location":"perses/docs/dac/go/prometheus/variable/promql/#available-options","title":"Available options","text":""},{"location":"perses/docs/dac/go/prometheus/variable/promql/#expr","title":"Expr","text":"<pre><code>import \"github.com/perses/perses/go-sdk/prometheus/promql\" \n\npromql.Expr(\"group by (namespace) (kube_namespace_labels{}\")\n</code></pre> <p>Define the promQL metadata name and the display name.</p>"},{"location":"perses/docs/dac/go/prometheus/variable/promql/#labelname","title":"LabelName","text":"<pre><code>import \"github.com/perses/perses/go-sdk/prometheus/promql\"\n\npromql.LabelName(\"my_super_label_name\")\n</code></pre> <p>Define a label name that can filter the result of the expression.</p>"},{"location":"perses/docs/dac/go/prometheus/variable/promql/#datasource","title":"Datasource","text":"<pre><code>import \"github.com/perses/perses/go-sdk/prometheus/promql\"\n\npromql.Datasource(\"datasourceName\")\n</code></pre> <p>Define the datasource where the expression will be executed.</p>"},{"location":"perses/docs/dac/go/prometheus/variable/promql/#example","title":"Example","text":"<pre><code>package main\n\nimport (\n    \"github.com/perses/perses/go-sdk/dashboard\"\n    \"github.com/perses/perses/go-sdk/prometheus/variable/promql\"\n    listvariable \"github.com/perses/perses/go-sdk/variable/list-variable\"\n)\n\nfunc main() {\n    dashboard.New(\"Example Dashboard\",\n        dashboard.AddVariable(\"namespace\", listvariable.List(\n            promql.PrometheusPromQL(\"group by (namespace) (kube_namespace_labels{stack=\\\"$stack\\\",prometheus=\\\"$prometheus\\\",prometheus_namespace=\\\"$prometheus_namespace\\\"})\", \n                promql.LabelName(\"namespace\"), \n                promql.Datasource(\"promDemo\"), \n            ),\n            listvariable.AllowMultiple(true),\n        )),\n    )\n}\n</code></pre>"},{"location":"perses/docs/installation/from-source/","title":"Installing Perses from the source","text":"<p>This sections continues with installing using the source code, test the project, build the project, configure examples, and run the Perses dashboard project on your local machine.</p>"},{"location":"perses/docs/installation/from-source/#building-requirements","title":"Building requirements","text":"<p>To build the Perses project from source you need minimum versions of the following:</p> <ul> <li>GO v1.21+</li> <li>Node v16+</li> <li>NPM v8+</li> </ul>"},{"location":"perses/docs/installation/from-source/#downloading-the-source","title":"Downloading the source","text":"<p>You can obtain the source code of the Perses project at the main product page in various compression formats or you can clone the git repository as shown here:</p> <pre><code>git clone https://github.com/perses/perses.git\n</code></pre> <p>Now just move to the Perses project directory and build the project:</p> <pre><code>cd perses\n\nmake build\n\n...\nTasks:    18 successful, 18 total\nCached:    0 cached, 18 total\n  Time:    36.594s\n\n&gt;&gt; compressing assets\nscripts/compress_assets.sh\nGOARCH=arm64 GOOS=darwin go generate ./internal/api\n&gt;&gt; build the perses api\nCGO_ENABLED=0 GOARCH=arm64 GOOS=darwin go build -ldflags \"-s -w -X github.com/prometheus/common/version.Version=[VERSION] -X github.com/prometheus/common/version.Revision=30eaafd7658bfa95a40610e81c64fd3d8d1285a7 -X github.com/prometheus/common/version.BuildDate=2025-01-04 -X github.com/prometheus/common/version.Branch=main\" -o ./bin/perses ./cmd/perses\n&gt;&gt; build the perses cli\nCGO_ENABLED=0 GOARCH=arm64 GOOS=darwin go build -ldflags \"-s -w -X github.com/prometheus/common/version.Version=[VERSION] -X github.com/prometheus/common/version.Revision=30eaafd7658bfa95a40610e81c64fd3d8d1285a7 -X github.com/prometheus/common/version.BuildDate=2025-01-04 -X github.com/prometheus/common/version.Branch=main\" -o ./bin/percli ./cmd/percli\nPerses server built successfully!\n</code></pre> <p>Note the last line stating that you have successfully built your own instance of Perses!</p>"},{"location":"perses/docs/installation/from-source/#starting-the-perses-server","title":"Starting the Perses server","text":"<p>To start the server you just built:</p> <pre><code>./bin/perses --config dev/config.yaml\n ___________\n\\___________/\n     ___________      ______\n    \\___________/     | ___ \\\n ___________          | |_/ /__ _ __ ___  ___  ___\n\\___________/         |  __/ _ \\ '__/ __|/ _ \\/ __|\n ___                  | | |  __/ |  \\__ \\  __/\\__ \\\n\\___/                 \\_|  \\___|_|  |___/\\___||___/  [PERSES_VERSION]\n__________________________________________________________\n\n\u21e8 http server started on [::]:8080\n</code></pre> <p>If you are interested in exploring how to configure your Perses server, please see the configuration documentation.</p>"},{"location":"perses/docs/installation/from-source/#connect-a-browser-default","title":"Connect a browser (default)","text":"<p>Open the Perses UI at http://localhost:8080.</p> <p>You are presented with the home page, in light mode. For fun, you can optionally flip the switch in the top right corner to enable dark mode.</p>"},{"location":"perses/docs/installation/from-source/#whats-next","title":"What's next?","text":"<p>Explore the online Perses documentation</p>"},{"location":"perses/docs/installation/in-a-container/","title":"Installing Perses in a container","text":"<p>This section is explaining how you can install Perses using a container manager like Podman or Docker.</p> <p>It assumes you have already installed and are familiar with either the Podman or the Docker commandline tooling.</p>"},{"location":"perses/docs/installation/in-a-container/#running-container-image","title":"Running container image","text":"<p>Start the Perses container image using one of the following commands depending on your tooling choice:</p> <pre><code># podman command.\n#\n$ podman run --name perses --rm -p 127.0.0.1:8080:8080 persesdev/perses\n</code></pre> <pre><code># docker command.\n#\n$ docker run --name perses --rm -p 127.0.0.1:8080:8080 persesdev/perses\n</code></pre> <p>The details in this command are that we give the container a referencable name (--name perses), automatically remove the container when it stops (--rm), map the local machine port 8080 to the container port 8080 (-p 127.0.0.1:8080:8080), and use the image version supported in these instructions (latest). Note: you can use any local port you have available, but you need to map to container port 8080.</p> <p>The resulting console output should be something like:</p> <pre><code>time=\"2025-01-04T11:40:04Z\" level=warning msg=\"encryption_key is not provided and therefore it will use a default one. For production instance you should provide the key.\"\n ___________\n\\___________/\n     ___________      ______\n    \\___________/     | ___ \\\n ___________          | |_/ /__ _ __ ___  ___  ___\n\\___________/         |  __/ _ \\ '__/ __|/ _ \\/ __|\n ___                  | | |  __/ |  \\__ \\  __/\\__ \\\n\\___/                 \\_|  \\___|_|  |___/\\___||___/  [PERSES_VERSION]\n__________________________________________________________\n\n\u21e8 http server started on [::]:8080\n</code></pre>"},{"location":"perses/docs/installation/in-a-container/#tags","title":"Tags","text":"<p>We are publishing a set of tags to match different requirements when running Perses in a container:</p> <ol> <li>Our images can run either on arm64 or on amd64 platform.</li> <li>We have two different types of image: <code>distroless</code> and <code>distroless-debug</code>.    The first one is meant to be used in production as it doesn't contain anything excepting the Perses binaries.    The second one contains a shell and should be used to debug any issue you might encounter with your container.</li> <li>The tag <code>latest</code> is an alias for the <code>distroless</code> distribution and is erased with the latest release.</li> <li>The tag <code>latest-debug</code> is an alias for the <code>distroless-debug</code> distribution and is erased with the latest release.</li> <li>We are also providing an image for each commit created on the <code>main</code> branch.    The tag created for each commit is following this pattern: <code>main-&lt;YYYY-MM-DD&gt;-&lt;short commit ID&gt;-&lt;distribution&gt;</code></li> </ol> <p>Examples:</p> <ul> <li>images built from the main branch: <code>persesdev/perses:main-2023-12-23-a2223483-distroless-debug</code>   or <code>persesdev/perses:main-2023-12-23-a2223483-distroless</code></li> <li>latest Perses image: <code>persesdev/perses</code> or <code>persesdev/perses:latest-debug</code></li> <li>precise release image: <code>persesdev/perses:v0.50.0</code>, <code>persesdev/perses:v0.50.0-debug</code>, <code>persesdev/perses:v0.50.0-distroless</code>, <code>persesdev/perses:v0.50.0-distroless-debug</code></li> <li>minor release image: <code>persesdev/perses:v0.50</code>, <code>persesdev/perses:v0.50-debug</code>, <code>persesdev/perses:v0.50-distroless</code>, <code>persesdev/perses:v0.50-distroless-debug</code></li> </ul>"},{"location":"perses/docs/installation/in-a-container/#connect-a-browser-default","title":"Connect a browser (default)","text":"<p>Open the Perses UI at http://localhost:8080.</p> <p>You are presented with the home page, in light mode. For fun, you can optionally flip the switch in the top right corner to enable dark mode.</p>"},{"location":"perses/docs/installation/in-a-container/#whats-next","title":"What's next?","text":"<p>Explore the online Perses documentation</p>"},{"location":"perses/docs/plugins/cue/","title":"CUE in Perses","text":"<p>Perses comes with validation capabilities based on CUE, a powerful validation language that permitted us to move the type constraints out of Golang (static language), which in the end makes it possible to modify at runtime the list of objects that Perses can accept. More concretely, this allows to support new kinds of charts and/or datasources dynamically, in the form of plugins written in CUE.</p>"},{"location":"perses/docs/plugins/cue/#writing-plugins","title":"Writing plugins","text":"<p>This section explains about the format any plugin should follow to be accepted &amp; registered by Perses at runtime.</p>"},{"location":"perses/docs/plugins/cue/#variable","title":"Variable","text":"<p>A variable plugin looks like the following:</p> <pre><code>package model\n\nkind: \"&lt;Variable name&gt;\" // e.g kind: \"PrometheusLabelValuesVariable\"\nspec: close({\n    labelName: string\n    matchers: [...string]\n})\n</code></pre> <p>it should define:</p> <ul> <li>the <code>model</code> package,</li> <li>the variable's <code>kind</code>,</li> <li>the variable's <code>spec</code> containing any field you want for this variable plugin.</li> </ul>"},{"location":"perses/docs/plugins/cue/#panel","title":"Panel","text":"<p>A panel plugin looks like the following:</p> <pre><code>package model\n\nkind: \"&lt;Panel name&gt;\" // e.g kind: \"TimeSeriesChart\",\nspec: {\n    queries: [...#ts_query]\n    legend?:      #legend\n    format?:      common.#format\n    thresholds?:  common.#thresholds\n}\n</code></pre> <p>it should define:</p> <ul> <li>the <code>model</code> package,</li> <li>the panel's <code>kind</code>,</li> <li>the panel's <code>spec</code> containing any field you want for this panel plugin.</li> </ul>"},{"location":"perses/docs/plugins/cue/#query","title":"Query","text":"<p>A query plugin looks like the following:</p> <pre><code>package model\n\nkind: \"&lt;Query name&gt;\" // e.g kind: \"PrometheusTimeSeriesQuery\"\nspec: {\n  datasource: {\n    kind: \"&lt;Datasource type&gt;\" // e.g kind: \"PrometheusDatasource\"\n  }\n  query:       string\n  minStep?:   =~\"^(?:(\\\\d+)y)?(?:(\\\\d+)w)?(?:(\\\\d+)d)?(?:(\\\\d+)h)?(?:(\\\\d+)m)?(?:(\\\\d+)s)?(?:(\\\\d+)ms)?$\"\n  resolution?: number\n}\n</code></pre> <p>it should define:</p> <ul> <li>the <code>model</code> package,</li> <li>the query's <code>kind</code>,</li> <li>the query's <code>spec</code> containing:<ul> <li>a <code>datasource</code> field that holds the <code>kind</code> of datasource corresponding to this query type,</li> <li>any other field you want for this query plugin.</li> </ul> </li> </ul>"},{"location":"perses/docs/plugins/cue/#migration-from-grafana","title":"Migration from Grafana","text":"<p>A Perses plugin can optionally embed a <code>migrate</code> folder file at its root, that contains a <code>migrate.cue</code> file. This file is basically describing in CUE language how to convert a given Grafana object into an instance of this plugin. In such case your plugin is considered as the Perses equivalent of this Grafana object type, i.e it will be used as part of the translation process when a Grafana dashboard is received on the <code>/api/migrate</code> endpoint.</p> <p>Warning</p> <p>If ever you come to the situation where you have 2 or more plugins describing a migration logic for the same Grafana panel type, be aware that the last one encountered by alphabetical order will take priority.</p>"},{"location":"perses/docs/plugins/cue/#variable_1","title":"Variable","text":"<p>A variable migration file looks like the following:</p> <pre><code>if #var.type == \"custom\" || #var.type == \"interval\" {\n    kind: \"StaticListVariable\"\n    spec: {\n        values: strings.Split(#var.query, \",\")\n    }\n},\n</code></pre> <ul> <li>The file is named <code>migrate.cue</code>.</li> <li>The file content is made of one or more conditional block(s), separated by commas (even if you have only one).</li> <li>Each conditional block defines one or more matches on attributes from the <code>#var</code> definition.<ul> <li><code>#var</code> references a variable object from Grafana. You can access the different fields with like <code>#var.field.subfield</code>. To know the list of fields available, check the Grafana datamodel for the considered variable type (from Grafana repo, or by inspecting the JSON of the dashboard on the Grafana UI).</li> <li>You most certainly want a check on the <code>#var.type</code> value like shown in above example.</li> </ul> </li> <li>Each conditional block contains a list of fields &amp; assignments, meeting the requirements of the considered Perses variable plugin. Use the <code>#var.field.subfield</code> syntax to access the values from the Grafana variable, thus achieve its remapping into Perses.</li> </ul>"},{"location":"perses/docs/plugins/cue/#panel_1","title":"Panel","text":"<p>A panel migration file looks like the following:</p> <pre><code>package migrate\n\nimport (\n    commonMigrate \"github.com/perses/perses/cue/schemas/common/migrate\"\n)\n\n#grafanaType: \"bargauge\"\n#panel:       _\n\nkind: \"BarChart\"\nspec: {\n    calculation: *commonMigrate.#mapping.calc[#panel.options.reduceOptions.calcs[0]] | commonMigrate.#defaultCalc // only consider [0] here as Perses's GaugeChart doesn't support individual calcs\n\n    #unit: *commonMigrate.#mapping.unit[#panel.fieldConfig.defaults.unit] | null\n    if #unit != null {\n        format: unit: #unit\n    }\n\n    #decimal: *#panel.fieldConfig.defaults.decimal | null\n    if #decimal != null {\n        format: decimalPlaces: #decimal\n    }\n}\n</code></pre> <ul> <li>The file must be named <code>migrate.cue</code>.</li> <li><code>#grafanaType</code> is a mandatory definition to provide, whose string value must match the <code>type</code> of the Grafana panel you want to migrate.</li> <li><code>#panel</code> is the reference used by Perses to inject the Grafana panel objects to migrate.<ul> <li>You can access the different fields via the <code>#panel.field.subfield</code> syntax. To find the list of available fields, refer to the Grafana data model for the relevant panel type (from Grafana repo, or by inspecting the JSON of the dashboard on the Grafana UI).</li> <li>Declaring <code>#panel: _</code> like in the above example is optional, it's just there to enable standalone validation of the file (<code>_</code> means \"any\" in CUE).</li> </ul> </li> <li>The file consists of field assignments, using the content of <code>#panel</code>. The end result must match the model of the considered Perses panel plugin.<ul> <li>Optionally, you can use the <code>github.com/perses/perses/cue/schemas/common/migrate</code> package that Perses provides in order to remap some of the attributes:<ul> <li><code>#mapping.unit</code>: mapping table for the <code>unit</code> attribute (key = grafana unit, value = perses equivalent).</li> <li><code>#mapping.calc</code>: mapping table for the <code>calculation</code> attribute (key = grafana unit, value = perses equivalent).</li> <li><code>#mapping.color</code>: mapping table for the \"standard\" colors used by Grafana (key = color name, value = hex code).</li> <li><code>#defaultCalc</code>: standard default value for the <code>calculation</code> attribute.</li> </ul> </li> </ul> </li> </ul>"},{"location":"perses/docs/plugins/cue/#query_1","title":"Query","text":"<p>A query migration file looks like the following:</p> <pre><code>package migrate\n\n#target: _\n\n// NB we would need `if` to support short-circuit in order to avoid code duplication here.\n//    See https://github.com/cue-lang/cue/issues/2232\nif (*#target.datasource.type | null) == \"prometheus\" &amp;&amp; #target.expr != _|_ {\n    kind: \"PrometheusTimeSeriesQuery\"\n    spec: {\n        datasource: {\n            kind: \"PrometheusDatasource\"\n            name: #target.datasource.uid\n        }\n        query:         #target.expr\n        #legendFormat: *#target.legendFormat | \"__auto\"\n        if #legendFormat != \"__auto\" {\n            seriesNameFormat: #legendFormat\n        }\n        if #target.interval != _|_ {\n            minStep: #target.interval\n        }\n    }\n},\n</code></pre> <ul> <li>The file must be named <code>migrate.cue</code>.</li> <li><code>#target</code> is the reference used by Perses to inject the Grafana target objects to migrate.<ul> <li>You can access the different fields via the <code>#target.field.subfield</code> syntax. To find the list of available fields, refer to the Grafana data model for the targets (from Grafana repo, or by inspecting the JSON of the dashboard on the Grafana UI).</li> <li>Declaring <code>#target: _</code> like in the above example is optional, it's just there to enable standalone validation of the file (<code>_</code> means \"any\" in CUE).</li> </ul> </li> <li>The migration logic must be wrapped into one or more conditional block(s). For each of them:<ul> <li>The condition is about one or more attributes from the <code>#target</code> definition. You most certainly want a check on the <code>#target.datasource.type</code> value like shown in above example.</li> <li>The body consists of field assignments, using the content of <code>#target</code>. The end result must match the model of the considered Perses query plugin.</li> </ul> </li> </ul> <p>Warning</p> <p>Ensure that your file evaluates to an empty result if the provided <code>#target</code> value does not match the expected type.</p>"},{"location":"perses/docs/plugins/cue/#variable_2","title":"Variable","text":"<p>A variable migration file looks like the following:</p> <pre><code>package migrate\n\nimport \"strings\"\n\n#var: _\n\nif #var.type == \"custom\" || #var.type == \"interval\" {\n    kind: \"StaticListVariable\"\n    spec: {\n        values: strings.Split(#var.query, \",\")\n    }\n}\n</code></pre> <ul> <li>The file must be named <code>migrate.cue</code>.</li> <li><code>#var</code> is the reference used by Perses to inject the Grafana variable objects to migrate.<ul> <li>You can access the different fields via the <code>#var.field.subfield</code> syntax. To find the list of available fields, refer to the Grafana data model for the relevant variable type (from Grafana repo, or by inspecting the JSON of the dashboard on the Grafana UI).</li> <li>Declaring <code>#var: _</code> like in the above example is optional, it's just there to enable standalone validation of the file (<code>_</code> means \"any\" in CUE).</li> </ul> </li> <li>The migration logic must be wrapped into one or more conditional block(s). For each of them:<ul> <li>The condition is about one or more attributes from the <code>#var</code> definition. You most certainly want a check on the <code>#var.type</code> value like shown in above example.</li> <li>The body consists of field assignments, using the content of <code>#var</code>. The end result must match the model of the considered Perses variable plugin.</li> </ul> </li> </ul> <p>Warning</p> <p>Ensure that your file evaluates to an empty result if the provided <code>#var</code> value does not match the expected type.</p>"},{"location":"perses/docs/plugins/introduction/","title":"Plugins","text":"<p>In Perses, the following object types are available as plugins:</p> <ul> <li>Panel</li> <li>Datasource</li> <li>Query</li> <li>Variable</li> </ul> <p>The objective with this is to eventually empower users to seamlessly enhance Perses' native capabilities through custom plugins, allowing them to:</p> <ul> <li>Add panel plugins for more diverse data visualization options. See Panel plugins for more details.</li> <li>Add datasource plugins to access data from new types of sources.</li> <li>Add query plugins to retrieve data from supported sources in additional ways.</li> <li>Add variable plugins to build variables for supported sources in additional ways.</li> </ul> <p>While Panel plugins are relatively self-sufficient, a datasource plugin requires one or more corresponding query and/or variable plugin to be actually usable, and vice versa. For instance, the native support for Prometheus is essentially a comprehensive package that includes all three types of plugins. For more details, refer to Prometheus-related plugins.</p> <p>Also, any plugin is made of two parts:</p> <ul> <li>The \"backend\" part, which is the CUE schema that defines the model for the plugin and is used by Perses' backend for validation. Please refer to CUE in Perses for more details.</li> <li>The \"frontend\" part, a.k.a all the frontend code responsible of bringing the plugin to life in the Perses UI.</li> </ul>"},{"location":"perses/docs/plugins/panels/","title":"Panel plugins","text":"<p>This documentation provides an exhaustive list of the panel plugins supported by Perses.</p>"},{"location":"perses/docs/plugins/panels/#barchart","title":"BarChart","text":"<pre><code>kind: \"BarChart\"\nspec:\n  calculation: &lt;Calculation specification&gt;\n  format: &lt;Format specification&gt; # Optional\n  sort: &lt;enum = \"asc\" | \"desc\"&gt; # Optional\n  mode: &lt;enum = \"value\" | \"percentage\"&gt; # Optional\n</code></pre>"},{"location":"perses/docs/plugins/panels/#gaugechart","title":"GaugeChart","text":"<pre><code>kind: \"GaugeChart\"\nspec:\n  calculation: &lt;Calculation specification&gt;\n  format: &lt;Format specification&gt; # Optional\n  thresholds: &lt;Thresholds specification&gt; # Optional\n  max: &lt;int&gt; # Optional\n</code></pre>"},{"location":"perses/docs/plugins/panels/#markdown","title":"Markdown","text":"<pre><code>kind: \"Markdown\"\nspec:\n  text: &lt;string&gt;\n</code></pre>"},{"location":"perses/docs/plugins/panels/#piechart","title":"PieChart","text":"<pre><code>kind: \"PieChart\"\n# TODO document the spec of PieChart\n</code></pre>"},{"location":"perses/docs/plugins/panels/#statchart","title":"StatChart","text":"<pre><code>kind: \"StatChart\"\nspec:\n  calculation: &lt;Calculation specification&gt;\n  format: &lt;Format specification&gt; # Optional\n  thresholds: &lt;Thresholds specification&gt; # Optional\n  sparkline: &lt;Sparkline specification&gt; # Optional\n  valueFontSize: &lt;int&gt; # Optional\n</code></pre>"},{"location":"perses/docs/plugins/panels/#sparkline-specification","title":"Sparkline specification","text":"<pre><code>color: &lt;string&gt; # Optional\nwidth: &lt;int&gt; # Optional\n</code></pre>"},{"location":"perses/docs/plugins/panels/#scatterchart","title":"ScatterChart","text":"<pre><code>kind: \"ScatterChart\"\nspec: # TODO document the spec of ScatterChart\n</code></pre>"},{"location":"perses/docs/plugins/panels/#table","title":"Table","text":"<pre><code>kind: \"Table\"\nspec:\n  density: &lt;enum = \"compact\" | \"standard\" | \"comfortable\"&gt; # Optional\n  columnSettings: &lt;Column Settings specification&gt; # Optional\n</code></pre>"},{"location":"perses/docs/plugins/panels/#column-settings-specification","title":"Column Settings specification","text":"<pre><code>name:  &lt;string&gt;\nheader:  &lt;string&gt; # Optional\nheaderDescription:  &lt;string&gt; # Optional\ncellDescription: &lt;string&gt; # Optional\nalign: &lt;enum = \"left\" | \"center\" | \"right\"&gt; # Optional\nenableSorting: &lt;boolean&gt; # Optional\nwidth: &lt;number | \"auto\"&gt; # Optional\nhide: &lt;boolean&gt; # Optional\n</code></pre>"},{"location":"perses/docs/plugins/panels/#timeserieschart","title":"TimeSeriesChart","text":"<pre><code>kind: \"TimeSeriesChart\"\nspec:\n  legend: &lt;Legend specification&gt; # Optional\n  tooltip: &lt;Tooltip specification&gt; # Optional\n  yAxis: &lt;YAxis specification&gt; # Optional\n  thresholds: &lt;Thresholds specification&gt; # Optional\n  visual: &lt;Visual specification&gt; # Optional\n  querySettings:\n  - &lt;Query Settings specification&gt; # Optional\n</code></pre>"},{"location":"perses/docs/plugins/panels/#legend-specification","title":"Legend specification","text":"<pre><code>position: &lt;enum = \"bottom\" | \"right\"&gt;\nmode: &lt;enum = \"list\" | \"table\"&gt; # Optional\nsize: &lt;enum = \"small\" | \"medium\"&gt; # Optional\nvalues:\n  - &lt;calculation&gt; # Optional\n</code></pre>"},{"location":"perses/docs/plugins/panels/#tooltip-specification","title":"Tooltip specification","text":"<pre><code>enablePinning: &lt;boolean | default = false&gt; # Optional\n</code></pre>"},{"location":"perses/docs/plugins/panels/#yaxis-specification","title":"YAxis specification","text":"<pre><code>show: &lt;boolean&gt; # Optional\nlabel: &lt;string&gt; # Optional\nformat: &lt;format_spec&gt; # Optional\nmin: &lt;int&gt; # Optional\nmax: &lt;int&gt; # Optional\n</code></pre>"},{"location":"perses/docs/plugins/panels/#visual-specification","title":"Visual specification","text":"<pre><code>display: &lt;enum = \"line\" | \"bar\"&gt; # Optional\n# Must be between 0.25 and 3\nlineWidth: &lt;int&gt; # Optional\n# Must be between 0 and 1\nareaOpacity: &lt;int&gt; # Optional\nshowPoints: &lt;enum = \"auto\" | \"always\"&gt; # Optional\npalette: &lt;Palette specification&gt; # Optional\n# Must be between 0 and 6\npointRadius: &lt;number&gt; # Optional\nstack: &lt;enum = \"all\" | \"percent\"&gt; # Optional\nconnectNulls: boolean | default = false # Optional\n</code></pre>"},{"location":"perses/docs/plugins/panels/#palette-specification","title":"Palette specification","text":"<pre><code>mode: &lt;enum = \"auto\" | \"categorical\"&gt;\n</code></pre>"},{"location":"perses/docs/plugins/panels/#query-settings-specification","title":"Query Settings specification","text":"<pre><code># queryIndex is an unsigned integer that should match an existing index in the panel's `queries` array\nqueryIndex: &lt;number&gt;\n# colorMode represents the coloring strategy to use\n# - \"fixed\":        for any serie returned by the query, apply the colorValue defined\n# - \"fixed-single\": if only one serie returned by the query, apply the colorValue defined, otherwise do nothing\ncolorMode: &lt;enum = \"fixed\" | \"fixed-single\"&gt;\n# colorValue is an hexadecimal color code\ncolorValue: &lt;string&gt;\n</code></pre>"},{"location":"perses/docs/plugins/panels/#timeseriestable","title":"TimeSeriesTable","text":"<pre><code>kind: \"TimeSeriesTable\"\n# TODO document the spec of TimeSeriesTable\n</code></pre>"},{"location":"perses/docs/plugins/panels/#tracetable","title":"TraceTable","text":"<pre><code>kind: \"TraceTable\"\n# TODO document the spec of TraceTable\n</code></pre>"},{"location":"perses/docs/plugins/panels/#tracingganttchart","title":"TracingGanttChart","text":"<pre><code>kind: \"TracingGanttChart\"\n# TODO document the spec of TracingGanttChart\n</code></pre>"},{"location":"perses/docs/plugins/panels/#common-definitions","title":"Common definitions","text":""},{"location":"perses/docs/plugins/panels/#calculation-specification","title":"Calculation specification","text":"<p>It's an enum. Possible values are:</p> <ul> <li><code>first</code></li> <li><code>last</code></li> <li><code>first-number</code></li> <li><code>last-number</code></li> <li><code>mean</code></li> <li><code>sum</code></li> <li><code>min</code></li> <li><code>max</code></li> </ul>"},{"location":"perses/docs/plugins/panels/#format-specification","title":"Format specification","text":"<p>The format spec is one of the following:</p>"},{"location":"perses/docs/plugins/panels/#time-format","title":"Time format","text":"<pre><code>unit: &lt;enum = \"milliseconds\" | \"seconds\" | \"minutes\" | \"hours\" | \"days\" | \"weeks\" | \"months\" | \"years\"&gt;\ndecimalPlaces: &lt;int&gt; # Optional\n</code></pre>"},{"location":"perses/docs/plugins/panels/#percent-format","title":"Percent format","text":"<pre><code>unit: &lt;enum =  \"percent\" | \"percent-decimal\"&gt;\ndecimalPlaces: &lt;int&gt; # Optional\n</code></pre>"},{"location":"perses/docs/plugins/panels/#decimal-format","title":"Decimal format","text":"<pre><code>unit: \"decimal\"\ndecimalPlaces: &lt;int&gt; # Optional\nshortValues: &lt;boolean&gt; | default = false # Optional\n</code></pre>"},{"location":"perses/docs/plugins/panels/#bytes-format","title":"Bytes format","text":"<pre><code>unit: \"bytes\"\ndecimalPlaces: &lt;int&gt; # Optional\nshortValues: &lt;boolean&gt; | default = false # Optional\n</code></pre>"},{"location":"perses/docs/plugins/panels/#throughput-format","title":"Throughput format","text":"<pre><code>unit: &lt; enum = \"counts/sec\" | \"events/sec\" | \"messages/sec\" | \"ops/sec\" | \"packets/sec\" | \"reads/sec\" | \"records/sec\" | \"requests/sec\" | \"rows/sec\" | \"writes/sec\"&gt;\ndecimalPlaces: &lt;int&gt; # Optional\nshortValues: &lt;boolean&gt; | default = false # Optional\n</code></pre>"},{"location":"perses/docs/plugins/panels/#thresholds-specification","title":"Thresholds specification","text":"<pre><code>mode: &lt;enum = \"percent\" | \"absolute\"&gt; # Optional\ndefaultColor: string # Optional\nsteps:\n  - &lt;Step specification&gt; # Optional\n</code></pre>"},{"location":"perses/docs/plugins/panels/#step-specification","title":"Step specification","text":"<pre><code>value: &lt;int&gt;\ncolor: &lt;string&gt; # Optional\nname: &lt;string&gt; # Optional\n</code></pre>"},{"location":"perses/docs/plugins/prometheus/","title":"Prometheus-related plugins","text":"<p>This documentation provides the definition of the different plugins related to Prometheus.</p>"},{"location":"perses/docs/plugins/prometheus/#datasource","title":"Datasource","text":"<pre><code>kind: \"PrometheusDatasource\"\nspec: &lt;prometheus_plugin_spec&gt;\n</code></pre>"},{"location":"perses/docs/plugins/prometheus/#plugin-specification","title":"Plugin Specification","text":"<p>Prometheus as a datasource is basically an HTTP server. So we need to define an HTTP config.</p> <pre><code># It is the url of the datasource.\n# Leave it empty if you don't want to access the datasource directly from the UI.\n# You should define a proxy if you want to access the datasource through the Perses' server.\ndirectUrl: &lt;url&gt; # Optional\n\n# It is the http configuration that will be used by the Perses' server to redirect to the datasource any query sent by the UI.\nproxy: &lt;HTTP Proxy specification&gt; # Optional\n\nscrapeInterval: &lt;duration&gt; # Optional\n</code></pre>"},{"location":"perses/docs/plugins/prometheus/#http-proxy-specification","title":"HTTP Proxy specification","text":"<pre><code>kind: \"HTTPProxy\"\nspec:\n  # URL is the url of datasource. It is not the url of the proxy.\n  url: &lt;url&gt;\n\n  # It is a tuple list of http methods and http endpoints that will be accessible.\n  # Leave it empty if you don't want to restrict the access to the datasource.\n  allowedEndpoints:\n    - &lt;Allowed Endpoints specification&gt; # Optional\n\n  # It can be used to provide additional headers that need to be forwarded when requesting the datasource\n  headers:\n    &lt;string&gt;: &lt;string&gt; # Optional\n\n  # This is the name of the secret that should be used for the proxy or discovery configuration\n  # It will contain any sensitive information such as password, token, certificate.\n  # Please read the documentation about secrets to understand how to create one\n  secret: &lt;string&gt; # Optional\n</code></pre>"},{"location":"perses/docs/plugins/prometheus/#allowed-endpoints-specification","title":"Allowed Endpoints specification","text":"<pre><code>endpointPattern: &lt;RegExp&gt;\nmethod: &lt;enum | possibleValue = 'POST' | 'PUT' | 'PATCH' | 'GET' | 'DELETE'&gt;\n</code></pre>"},{"location":"perses/docs/plugins/prometheus/#example","title":"Example","text":"<p>A simple Prometheus datasource would be</p> <pre><code>kind: \"Datasource\"\nmetadata:\n  name: \"PrometheusDemo\"\n  project: \"perses\"\nspec:\n  default: true\n  plugin:\n    kind: \"PrometheusDatasource\"\n    spec:\n      directUrl: \"https://prometheus.demo.do.prometheus.io\"\n</code></pre> <p>A more complex one:</p> <pre><code>kind: \"Datasource\"\nmetadata:\n  name: \"PrometheusDemo\"\n  project: \"perses\"\nspec:\n  default: true\n  plugin:\n    kind: \"PrometheusDatasource\"\n    spec:\n      proxy:\n        kind: \"HTTPProxy\"\n        spec:\n          url: \"https://prometheus.demo.do.prometheus.io\"\n          allowedEndpoints:\n            - endpointPattern: \"/api/v1/labels\"\n              method: \"POST\"\n            - endpointPattern: \"/api/v1/series\"\n              method: \"POST\"\n            - endpointPattern: \"/api/v1/metadata\"\n              method: \"GET\"\n            - endpointPattern: \"/api/v1/query\"\n              method: \"POST\"\n            - endpointPattern: \"/api/v1/query_range\"\n              method: \"POST\"\n            - endpointPattern: \"/api/v1/label/([a-zA-Z0-9_-]+)/values\"\n              method: \"GET\"\n          secret: \"prometheus_secret_config\"\n</code></pre>"},{"location":"perses/docs/plugins/prometheus/#query","title":"Query","text":"<p>Perses currently supports only one kind of query for Prometheus: <code>PrometheusTimeSeriesQuery</code>. Others will come in the future.</p> <pre><code>kind: \"PrometheusTimeSeriesQuery\"\nspec: &lt;Timeseries Query specification&gt;\n</code></pre>"},{"location":"perses/docs/plugins/prometheus/#timeseries-query-specification","title":"Timeseries Query specification","text":"<pre><code>#`query` is the promQL expression.\nquery: &lt;string&gt;\n\n# `datasource` is a datasource selector. If not provided, the default PrometheusDatasource is used.\n# See the documentation about the datasources to understand how it is selected.\ndatasource: &lt;Datasource selector&gt; # Optional\nseriesNameFormat: &lt;string&gt; # Optional\n\n# `minStep` is the minimum time interval you want between each data points.\nminStep: &lt;duration&gt; # Optional\nresolution: number # Optional\n</code></pre>"},{"location":"perses/docs/plugins/prometheus/#example_1","title":"Example","text":"<p>A simple one:</p> <pre><code>kind: \"TimeSeriesQuery\"\nspec:\n  plugin:\n    kind: \"PrometheusTimeSeriesQuery\"\n    spec:\n      query: \"rate(caddy_http_response_duration_seconds_sum[$interval])\"\n</code></pre>"},{"location":"perses/docs/plugins/prometheus/#variable","title":"Variable","text":""},{"location":"perses/docs/plugins/prometheus/#prometheuslabelnamesvariable","title":"PrometheusLabelNamesVariable","text":"<pre><code>kind: \"PrometheusLabelNamesVariable\"\nspec: &lt;Prometheus Label Names specification&gt;\n</code></pre>"},{"location":"perses/docs/plugins/prometheus/#prometheus-label-names-specification","title":"Prometheus Label Names specification","text":"<pre><code># `datasource` is a datasource selector. If not provided, the default PrometheusDatasource is used.\n# See the documentation about the datasources to understand how it is selected.\ndatasource: &lt;datasource_selector&gt; # Optional\nmatchers:\n  - &lt;string&gt; # Optional\n</code></pre>"},{"location":"perses/docs/plugins/prometheus/#example_2","title":"Example","text":"<p>A simple Prometheus LabelNames variable would be</p> <pre><code>kind: \"Variable\"\nmetadata:\n  name: \"labelNames\"\n  project: \"perses\"\nspec:\n  kind: \"ListVariable\"\n  spec:\n    plugin:\n      kind: \"PrometheusLabelNamesVariable\"\n</code></pre> <p>A more complex one</p> <pre><code>kind: \"Variable\"\nmetadata:\n  name: \"labelNames\"\n  project: \"perses\"\nspec:\n  kind: \"ListVariable\"\n  spec:\n    allowMultiple: false\n    allowAllValue: false\n    plugin:\n      kind: \"PrometheusLabelNamesVariable\"\n      spec:\n        datasource:\n          kind: \"PrometheusDatasource\"\n          name: \"PrometheusDemo\"\n        matchers:\n          - \"up\"\n</code></pre>"},{"location":"perses/docs/plugins/prometheus/#prometheuslabelvaluesvariable","title":"PrometheusLabelValuesVariable","text":"<pre><code>kind: \"PrometheusLabelValuesVariable\"\nspec: &lt;Prometheus Label Values specification&gt;\n</code></pre>"},{"location":"perses/docs/plugins/prometheus/#prometheus-label-values-specification","title":"Prometheus Label Values specification","text":"<pre><code># `datasource` is a datasource selector. If not provided, the default PrometheusDatasource is used.\n# See the documentation about the datasources to understand how it is selected.\ndatasource: &lt;Datasource selector&gt; # Optional\nlabelName: &lt;string&gt;\nmatchers:\n  - &lt;string&gt; # Optional\n</code></pre>"},{"location":"perses/docs/plugins/prometheus/#example_3","title":"Example","text":"<p>A simple Prometheus LabelValues variable would be</p> <pre><code>kind: \"Variable\"\nmetadata:\n  name: \"job\"\n  project: \"perses\"\nspec:\n  kind: \"ListVariable\"\n  spec:\n    allowMultiple: false\n    allowAllValue: false\n    plugin:\n      kind: \"PrometheusLabelValuesVariable\"\n      spec:\n        labelName: \"job\"\n</code></pre> <p>A more complex one</p> <pre><code>kind: \"Variable\"\nmetadata:\n  name: \"instance\"\n  project: \"perses\"\nspec:\n  kind: \"ListVariable\"\n  spec:\n    allowMultiple: false\n    allowAllValue: false\n    plugin:\n      kind: \"PrometheusLabelValuesVariable\"\n      spec:\n        datasource:\n          kind: \"PrometheusDatasource\"\n          name: \"PrometheusDemo\"\n        labelName: \"instance\"\n        matchers:\n        - \"up{job=~\\\"$job\\\"}\"\n</code></pre>"},{"location":"perses/docs/plugins/prometheus/#prometheuspromqlvariable","title":"PrometheusPromQLVariable","text":"<pre><code>kind: \"PrometheusPromQLVariable\"\nspec: &lt;Prometheus PromQL specification&gt;\n</code></pre>"},{"location":"perses/docs/plugins/prometheus/#prometheus-promql-specification","title":"Prometheus PromQL specification","text":"<pre><code># `datasource` is a datasource selector. If not provided, the default PrometheusDatasource is used.\n# See the documentation about the datasources to understand how it is selected.\ndatasource: &lt;Datasource selector&gt; # Optional\n\n# The promql expression\nexpr: &lt;string&gt;\nlabelName: &lt;string&gt; # Optional\n</code></pre>"},{"location":"perses/docs/plugins/prometheus/#datasource-selector","title":"Datasource selector","text":"<pre><code>kind: \"PrometheusDatasource\"\n\n# The name of the datasource regardless its level\nname: &lt;string&gt; # Optional\n</code></pre>"},{"location":"blog/archive/2025/","title":"2025","text":""},{"location":"blog/category/release/","title":"release","text":""}]}